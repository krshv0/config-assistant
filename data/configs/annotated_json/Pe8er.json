{
  "repo_name": "Pe8er",
  "structure": {
    "globalstyles.sh": {
      "path": "globalstyles.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/icons.sh\"",
        "\"$CONFIG_DIR/colors.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load defined icons\nsource \"$CONFIG_DIR/icons.sh\"\n\n# Load defined colors\nsource \"$CONFIG_DIR/colors.sh\"\n\nPADDINGS=6\nFONT=\"JetBrainsMono Nerd Font\"\n\n# Bar Appearance\nbar=(\n  color=$TRANSPARENT\n  position=top\n  topmost=off\n  sticky=on\n  height=32\n  padding_left=4\n  padding_right=4\n  corner_radius=0\n  blur_radius=32\n  notch_width=170\n)\n\n# Item Defaults\nitem_defaults=(\n  background.corner_radius=4\n  background.height=20\n  background.padding_left=$(($PADDINGS / 2))\n  background.padding_right=$(($PADDINGS / 2))\n  icon.background.corner_radius=4\n  icon.color=$ICON_COLOR\n  icon.font=\"$FONT:Regular:11\"\n  icon.highlight_color=$HIGHLIGHT\n  icon.padding_left=0\n  icon.padding_right=0\n  label.color=$LABEL_COLOR\n  label.font=\"$FONT:Regular:11\"\n  label.highlight_color=$HIGHLIGHT\n  label.padding_left=$(($PADDINGS / 2))\n  scroll_texts=on\n  updates=when_shown\n)\n\nicon_defaults=(\n  label.drawing=off\n)\n\nnotification_defaults=(\n  updates=on\n  update_freq=300\n  background.padding_left=$PADDINGS\n  background.padding_right=$PADDINGS\n  drawing=off\n)\n\nbracket_defaults=(\n  background.corner_radius=6\n  background.color=$BAR_COLOR\n)\n\nmenu_defaults=(\n  popup.blur_radius=32\n  popup.background.color=$POPUP_BACKGROUND_COLOR\n  popup.background.corner_radius=$PADDINGS\n  popup.background.shadow.drawing=on\n  popup.background.shadow.color=$BAR_COLOR\n  popup.background.shadow.angle=90\n  popup.background.shadow.distance=64\n)\n\nmenu_item_defaults=(\n  label.font=\"$FONT:Regular:12\"\n  padding_left=$PADDINGS\n  padding_right=$PADDINGS\n  icon.padding_left=0\n  icon.padding_right=4\n  icon.color=$HIGHLIGHT\n  icon.font.size=13\n  background.color=$TRANSPARENT\n  scroll_texts=off\n  icon.width=16\n)\n\nseparator=(\n  background.height=1\n  width=180\n  background.color=\"$(getcolor white 25)\"\n  background.y_offset=-16\n)",
      "purpose": "The provided file is a SketchyBar configuration script named globalstyles.sh. Its purpose is to define the global styles, defaults, and settings for SketchyBar, including the bar appearance, item defaults, icon defaults, notification defaults, bracket defaults, menu defaults, menu item defaults, and separator styles.",
      "content_summary": "The script sources icons and colors from other files, sets various parameters such as font, paddings, and bar height, and defines styles for the bar, items, icons, notifications, brackets, menus, menu items, and separators. These styles include properties like color, position, corner radius, blur radius, padding, font, and more."
    },
    "sketchybarrc": {
      "path": "sketchybarrc",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\"",
        "\"$ITEM_DIR/apple.sh\"",
        "\"$ITEM_DIR/yabai.sh\"",
        "\"$ITEM_DIR/spacer.sh\" 1 left",
        "\"$ITEM_DIR/spaces_simple.sh\"",
        "\"$ITEM_DIR/spacer.sh\" 3 left",
        "\"$ITEM_DIR/control_center.sh\"",
        "\"$ITEM_DIR/datetime.sh\"",
        "\"$ITEM_DIR/dnd.sh\"",
        "\"$ITEM_DIR/wifi.sh\"",
        "\"$ITEM_DIR/volume.sh\"",
        "\"$ITEM_DIR/battery.sh\"",
        "\"$ITEM_DIR/diskmonitor.sh\"",
        "\"$ITEM_DIR/spacer.sh\" 2 right",
        "\"$ITEM_DIR/brew.sh\" right",
        "\"$ITEM_DIR/reminders.sh\" right",
        "\"$ITEM_DIR/messages.sh\" right",
        "\"$ITEM_DIR/mail.sh\" right",
        "\"$ITEM_DIR/weather.sh\" right",
        "\"$ITEM_DIR/stress.sh\" right",
        "\"$ITEM_DIR/transmission.sh\"",
        "\"$ITEM_DIR/music.sh\"",
        "\"$ITEM_DIR/spacer.sh\" 4 right"
      ],
      "content": "#!/bin/bash\n\nPLUGIN_DIR=\"$CONFIG_DIR/plugins\"\nITEM_DIR=\"$CONFIG_DIR/items\"\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nPOPUP_CLICK_SCRIPT=\"sketchybar --set \\$NAME popup.drawing=toggle\"\nPOPUP_OFF=\"sketchybar --set \\$NAME popup.drawing=off\"\n\n# Unload the macOS on screen indicator overlay for volume change\nlaunchctl unload -F /System/Library/LaunchAgents/com.apple.OSDUIHelper.plist > /dev/null 2>&1 &\n\nsketchybar --bar \"${bar[@]}\" --default \"${item_defaults[@]}\"\n\n# Left\n# source \"$ITEM_DIR/apple.sh\"\nsource \"$ITEM_DIR/yabai.sh\"\n# source \"$ITEM_DIR/spacer.sh\" 1 left\nsource \"$ITEM_DIR/spaces_simple.sh\"\n\n# source \"$ITEM_DIR/spacer.sh\" 3 left\n\n\n# Notch\n\n# Right\n# source \"$ITEM_DIR/control_center.sh\"\nsource \"$ITEM_DIR/datetime.sh\"\nsource \"$ITEM_DIR/dnd.sh\"\nsource \"$ITEM_DIR/wifi.sh\"\nsource \"$ITEM_DIR/volume.sh\"\nsource \"$ITEM_DIR/battery.sh\"\nsource \"$ITEM_DIR/diskmonitor.sh\"\n\nsource \"$ITEM_DIR/spacer.sh\" 2 right\n\nsource \"$ITEM_DIR/brew.sh\" right\nsource \"$ITEM_DIR/reminders.sh\" right\nsource \"$ITEM_DIR/messages.sh\" right\nsource \"$ITEM_DIR/mail.sh\" right\nsource \"$ITEM_DIR/weather.sh\" right\nsource \"$ITEM_DIR/stress.sh\" right\n\nsource \"$ITEM_DIR/transmission.sh\"\n# source \"$ITEM_DIR/music.sh\"\n\nsource \"$ITEM_DIR/spacer.sh\" 4 right\n\n# Brackets '/space\\..*/'\nsketchybar --add bracket left.side '/space\\..*/'                                                 \\\n           --set left.side \"${bracket_defaults[@]}\"                                              \\\n                                                                                                 \\\n          --add bracket notifications weather aqi reminders messages mail brew                   \\\n           --set notifications \"${bracket_defaults[@]}\"                                          \\\n                                                                                                 \\\n           --add bracket status_icons diskmonitor volume_icon volume wifi dnd date clock battery \\\n           --set status_icons \"${bracket_defaults[@]}\"\n\nsketchybar --hotload on\nsketchybar --update",
      "purpose": "The sketchybarrc file is a configuration script for SketchyBar, a macOS system tray application that allows users to customize and display various system information and application statuses.",
      "content_summary": "The file loads global styles, colors, and icons, sets up click and off actions for popups, unloads the macOS on-screen indicator overlay for volume change, and configures the layout of items on the left and right sides of the bar. It includes items for system information (date, DND, WiFi, volume, battery, disk usage), application statuses (Yabai, spaces, Transmission, music), and custom scripts for reminders, messages, mail, weather, and stress level. The file also sets up brackets for notifications and status icons."
    },
    "colors.sh": {
      "path": "colors.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n# set -x\n\n# Tokyo Night: https://github.com/tokyo-night/tokyo-night-vscode-theme\nTOKYONIGHT=(\n  blue \"#7aa2f7\"\n  teal \"#1abc9c\"\n  cyan \"#7dcfff\"\n  grey \"#414868\"\n  green \"#9fe044\"\n  yellow \"#faba4a\"\n  orange \"#ff9e64\"\n  red \"#f7768e\"\n  purple \"#9d7cd8\"\n  maroon \"#914c54\"\n  black \"#24283b\"\n  trueblack \"#000000\"\n  white \"#c0caf5\"\n)\n\n# Dracula Refined https://github.com/mathcale/dracula-theme-refined\nDRACULA=(\n  blue \"#6272A4\"\n  teal \"#69FF94\"\n  cyan \"#8BE9FD\"\n  grey \"#44475A\"\n  green \"#50FA7B\"\n  yellow \"#F1FA8C\"\n  orange \"#FFB86C\"\n  red \"#FF5555\"\n  purple \"#BD93F9\"\n  maroon \"#FF79C6\"\n  black \"#282A36\"\n  trueblack \"#1c1c1c\"\n  white \"#F8F8F2\"\n)\n\n# Rose Pine https://rosepinetheme.com/palette/ingredients/\nROSEPINE=(\n  blue \"#7283CF\"\n  teal \"#419BBE\"\n  cyan \"#9ccfd8\"\n  grey \"#524f67\"\n  green \"#B4D99C\"\n  yellow \"#f6c177\"\n  orange \"#d7827e\"\n  red \"#eb6f92\"\n  purple \"#c4a7e7\"\n  maroon \"#b4637a\"\n  black \"#26233a\"\n  trueblack \"#000000\"\n  white \"#e0def4\"\n)\n\n# Catpuccin Mocha https://github.com/catppuccin/catppuccin#-palette\nCATPUCCIN=(\n  blue \"#89b4fa\"\n  teal \"#94e2d5\"\n  cyan \"#89dceb\"\n  grey \"#585b70\"\n  green \"#a6e3a1\"\n  yellow \"#f9e2af\"\n  orange \"#fab387\"\n  red \"#f38ba8\"\n  purple \"#cba6f7\"\n  maroon \"#eba0ac\"\n  black \"#1e1e2e\"\n  trueblack \"#000000\"\n  white \"#cdd6f4\"\n)\n\n# TEMPLATE https://github.com/XXX\n# THEME_NAME=(\n#   blue \"#\"\n#   teal \"#\"\n#   cyan \"#\"\n#   grey \"#\"\n#   green \"#\"\n#   yellow \"#\"\n#   orange \"#\"\n#   red \"#\"\n#   purple \"#\"\n#   maroon \"#\"\n#   black \"#\"\n#   trueblack \"#\"\n#   white \"#\"\n# )\n\nCOLORS=(\"${DRACULA[@]}\")\n\ngetcolor() {\n  COLOR_NAME=$1\n  local COLOR=\"\"\n\n  if [[ -z $2 ]]; then\n    OPACITY=100\n  else\n    OPACITY=$2\n  fi\n\n  # Loop through the array to find the color hex by name\n  for ((i = 0; i < ${#COLORS[@]}; i += 2)); do\n    if [[ \"${COLORS[i]}\" == \"$COLOR_NAME\" ]]; then\n      COLOR=\"${COLORS[i + 1]}\"\n      break\n    fi\n  done\n\n  # Check if color was found\n  if [[ -z $COLOR ]]; then\n    echo \"Invalid color name: $COLOR_NAME\" >&2\n    return 1\n  fi\n\n  echo $(PERCENT2HEX $OPACITY)${COLOR:1}\n}\n\nPERCENT2HEX() {\n  local PERCENTAGE=$1\n  local DECIMAL=$(((PERCENTAGE * 255) / 100))\n  printf \"0x%02X\\n\" \"$DECIMAL\"\n}\n\n# Color Tokens\nBAR_COLOR=$(getcolor black)\nBAR_BORDER_COLOR=$(getcolor black 0)\nHIGHLIGHT=$(getcolor cyan)\nHIGHLIGHT_75=$(getcolor cyan 75)\nHIGHLIGHT_50=$(getcolor cyan 50)\nHIGHLIGHT_25=$(getcolor cyan 25)\nHIGHLIGHT_10=$(getcolor cyan 10)\nICON_COLOR=$(getcolor white)\nICON_COLOR_INACTIVE=$(getcolor white 25)\nLABEL_COLOR=$(getcolor white 75)\nLABEL_COLOR_NEGATIVE=$(getcolor black)\nPOPUP_BACKGROUND_COLOR=$(getcolor black 75)\nPOPUP_BORDER_COLOR=$(getcolor black 0)\nSHADOW_COLOR=$(getcolor black)\nTRANSPARENT=$(getcolor black 0)",
      "purpose": "This file is a SketchyBar configuration script that defines color palettes for various themes and generates color variables for SketchyBar's UI elements.",
      "content_summary": "The file contains color palettes for five different themes: Tokyo Night, Dracula Refined, Rose Pine, Catppuccin Mocha, and an empty template. It defines a function `getcolor` to retrieve a color from the palette based on the color name and an optional opacity level. The script also generates color variables for SketchyBar's UI elements such as bar color, border color, highlight colors, icon color, label color, popup background color, shadow color, and a transparent color."
    },
    "window_title.dat": {
      "path": "window_title.dat",
      "language": "unknown",
      "dependencies": [],
      "content": "front_app.sh \u2014 config.symlink\n",
      "purpose": "The file 'window_title.dat' is used in SketchyBar for configuring the window title of a specific application. The configuration is linked to the 'front_app.sh' script.",
      "content_summary": "The file contains a reference to the 'config.symlink' which is a symbolic link to the script 'front_app.sh'. This script is responsible for modifying the window title of a frontmost application in SketchyBar."
    },
    "icons.sh": {
      "path": "icons.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\n# https://www.nerdfonts.com/cheat-sheet\n\n# General Icons\nICON_LOADING=\udbc1\udd87\nICON_APPLE=\udbc2\udcfa\nICON_PREFERENCES=\udbc3\udebd\nICON_ACTIVITY=\udbc1\udc93\nICON_LOCK=\udbc1\udcb3\nICON_BELL=\udbc0\udeda\nICON_BELL_DOT=\udbc1\udf57\nICON_MUSIC=\udb83\udfcf\n\n# Git Icons\nICON_GIT_ISSUE=\udbc0\udf77\nICON_GIT_DISCUSSION=\udbc1\udca4\nICON_GIT_PULL_REQUEST=\udbc1\ude61\nICON_GIT_COMMIT=\udbc2\udc5a\nICON_GIT_INDICATOR=\udbc0\udc93\n\n# Spotify Icons\nICON_SPOTIFY_BACK=\udbc0\ude8e\nICON_SPOTIFY_PLAY_PAUSE=\udbc0\ude88\nICON_SPOTIFY_NEXT=\udbc0\ude90\nICON_SPOTIFY_SHUFFLE=\udbc0\ude9d\nICON_SPOTIFY_REPEAT=\udbc0\ude9e\n\n# Yabai Icons\nICON_YABAI_STACK=\udbc0\udfed\nICON_YABAI_FULLSCREEN_ZOOM=\udbc0\udc93\nICON_YABAI_PARENT_ZOOM=\udbc2\udd43\nICON_YABAI_FLOAT=\udbc2\udc8c\nICON_YABAI_GRID=\udbc2\uddcd\nICON_YABAI_SPLIT_VERTICAL=\udbc1\ude1c\nICON_YABAI_SPLIT_HORIZONTAL=\udbc2\uddcb\n\n# Battery Icons\nICON_BATTERY_100=\udbc1\udee8\nICON_BATTERY_75=\udbc3\udeb8\nICON_BATTERY_50=\udbc3\udeb6\nICON_BATTERY_25=\udbc1\udee9\nICON_BATTERY_0=\udbc1\udeea\nICON_BATTERY_CHARGING=\udbc2\udc8b\n\n# Volume Icons\nICON_VOLUME_100=\udbc0\udea9\nICON_VOLUME_66=\udbc0\udea7\nICON_VOLUME_33=\udbc0\udea5\nICON_VOLUME_10=\udbc0\udea1\nICON_VOLUME_0=\udbc0\udea3\nICON_VOLUME_HEADPHONES=\uf025\n\nexport ICON_CMD=\udb81\ude33\nexport ICON_COG=\udb81\udc93 # system settings, system information, tinkertool\nexport ICON_CHART=\udb85\udd4d # activity monitor, btop\nexport ICON_LOCK=\udb80\udf3e\nexport ICON_APP=\udb82\udcc6 # fallback app\nexport ICON_DOCUMENTS=\udb82\uddee # powerpoint\nexport ICON_REFRESH=\uf021\n\nexport ICON_PACKAGE=\udb80\udfd7 # brew\nexport ICON_DEV=\udb80\udd68 # nvim, xcode, vscode\nexport ICON_VSCODIUM=\uf372 # nvim, xcode, vscode\nexport ICON_FILE=\udb80\ude4b # ranger, finder\nexport ICON_FINDER=\udb80\udc36\nexport ICON_GIT=\udb80\udea2 # lazygit\nexport ICON_TODO=\ueaa2 # taskwarrior, taskwarrior-tui, reminders, onenote\nexport ICON_SCREENSAVOR=\udb84\udd04 # unimatrix, pipe.sh\nexport ICON_WEATHER=\udb81\udd95 # weather\nexport ICON_MAIL=\uf42f # mail, outlook\nexport ICON_CALC=\udb82\ude9a # calculator, numi\nexport ICON_MAP=\udb80\udd8b # maps, find my\nexport ICON_MICROPHONE=\udb80\udf6c # voice memos\nexport ICON_CHAT=\udb83\udede # messages, slack, teams, telegram\nexport ICON_VIDEOCHAT=\udb80\udf6b # facetime, zoom, webex\nexport ICON_NOTE=\udb85\udf8e # notes, textedit, stickies, word, bat\nexport ICON_CAMERA=\udb80\udd00 # photo booth\nexport ICON_WEB=\udb80\udde7 # safari, beam, duckduckgo, arc, edge, chrome, firefox\nexport ICON_HOMEAUTOMATION=\udb84\ude51 # home\nexport ICON_PODCAST=\udb82\udd94 # podcasts\nexport ICON_PLAY=\udb84\ude7a # tv, quicktime, vlc\nexport ICON_BOOK=\udb80\udcbf # books\nexport ICON_BOOKINFO=\udb84\udc6f # font book, dictionary\nexport ICON_PREVIEW=\udb80\udef2 # screenshot, preview\nexport ICON_PASSKEY=\udb83\udde1 # 1password\nexport ICON_DOWNLOAD=\udb85\udc62 # progressive downloader, transmission\nexport ICON_CAST=\udb85\udc83 # airflow\nexport ICON_TABLE=\udb81\udceb # excel\nexport ICON_PRESENT=\udb80\ude29 # powerpoint\nexport ICON_CLOUD=\udb80\udd67 # onedrive\nexport ICON_PEN=\udb80\udfec # curve\nexport ICON_REMOTEDESKTOP=\udb82\udcb9 # vmware, utm\nexport ICON_CLOCK=\udb82\udd54 # clock, timewarrior, tty-clock\nexport ICON_CALENDAR=\udb80\udced # calendar\nexport ICON_WIFI=\udb81\udda9\nexport ICON_WIFI_OFF=\udb81\uddaa\nexport ICON_VPN=\udb82\udd9d # vpn, nordvpn\nexport ICONS_VOLUME=(\udb83\ude08 \udb81\udd7f \udb81\udd80 \udb81\udd7e)\nexport ICONS_BATTERY=(\udb80\udc8e \udb80\udc7a \udb80\udc7b \udb80\udc7c \udb80\udc7d \udb80\udc7e \udb80\udc7f \udb80\udc80 \udb80\udc81 \udb80\udc82 \udb80\udc79)\nexport ICONS_BATTERY_CHARGING=(\udb82\udc9f \udb82\udc9c \udb80\udc86 \udb80\udc87 \udb80\udc88 \udb82\udc9d \udb80\udc89 \udb82\udc9e \udb80\udc8a \udb80\udc8b \udb80\udc85)\nexport ICON_SWAP=\udb80\udc6f\nexport ICON_RAM=\udb81\udcc5\nexport ICON_DISK=\udb80\udeca # disk utility\nexport ICON_CPU=\udb81\ude1a\nexport ICON_CONTROLCENTER=\udbc1\udf0a\n\n# My apps\nexport ICON_DISCORD=\uf323 # Discord\nexport ICON_TERM=\uf489 # fallback terminal app, terminal, warp, iterm2\nexport ICON_PHOTOSHOP=\ue7b8\nexport ICON_AFTEREFFECTS=\udb84\udc51\nexport ICON_INDESIGN=\udb83\udd11\nexport ICON_ILLUSTRATOR=\ue7b4\nexport ICON_PHOTOS=\uf03e\nexport ICON_FIGMA=\uef47\nexport ICON_KICAD=\uf34c\nexport ICON_REMINDERS=\uf03a\nexport ICON_DOWNLOAD=\udbc7\udfae # Jdownloader2\nexport ICON_ICON=\udbc3\udf31 # SF Symbols\nexport ICON_STEAM=\udb81\udcd3 # Steam\nexport ICON_HANDBRAKE=\udb84\udc46\nexport ICON_FIREFOX=\udb80\ude39\nexport ICON_FONTBOOK=\ue659\nexport ICON_GLM=\udb81\udcc3\nexport ICON_POPCORN=\udbc5\udc08\nexport ICON_DAISYDISK=\udb81\udfaf\nexport ICON_BRAIN=\uee9c\nexport ICON_STRESS=\udb82\udc20\nexport ICON_DND_OFF=\udbc0\uddb9\nexport ICON_DND_ON=\udbc0\uddba",
      "purpose": "This file is a configuration script for SketchyBar, a macOS status bar application. It defines various icons and their corresponding Unicode characters to be used in the SketchyBar interface.",
      "content_summary": "The script defines a wide range of icons for general use, specific applications like Git, Spotify, Yabai, and custom applications. It also includes icons for system functions like battery, volume, and network status. The script exports several variables for easy access and reuse of the defined icons."
    },
    "plugins/transmission.sh": {
      "path": "plugins/transmission.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/colors.sh\"",
        "Thanks, ChatGPT!"
      ],
      "content": "#!/usr/bin/env bash\n\nsource \"$CONFIG_DIR/colors.sh\"\n\nread UP DOWN <<< \"$(transmission-remote -l | awk 'NR>1 {up=$4; down=$5} END {print up, down}')\"\nNUMBERS=($UP $DOWN)\n\nif [[ $NUMBERS = \"\" ]]; then\n  args=(drawing=off)\nelse\n  # Number formatting. Thanks, ChatGPT!\n  for ((i=0; i<${#NUMBERS[@]}; i++)); do\n      CURRENT_NUMBER=${NUMBERS[i]}\n\n      # Check if the number is greater than 999\n      if (( $(echo \"$CURRENT_NUMBER > 999\" | bc -l) )); then\n          FORMATTED_NUMBER=$(echo \"scale=1; $CURRENT_NUMBER / 1000\" | bc -l)\n          SUFFIX=\"MB\"\n      else\n          FORMATTED_NUMBER=$(echo \"scale=1; $CURRENT_NUMBER\" | bc -l)\n          SUFFIX=\"KB\"\n      fi\n\n      # Remove the decimal point if it's zero\n      if [[ $FORMATTED_NUMBER == *\".0\" ]]; then\n          FORMATTED_NUMBER=${FORMATTED_NUMBER%\".0\"}\n      fi\n\n      # Create a new variable dynamically\n      NEW_VARIABLE=\"FORMATTED_NUMBER_$i\"\n      declare \"$NEW_VARIABLE=$FORMATTED_NUMBER$SUFFIX\"\n  done\n\n  args+=(drawing=on label=\"\udbc0\udd2f${FORMATTED_NUMBER_0} \udbc0\udd31${FORMATTED_NUMBER_1}\")\nfi\n\n\nif [[ \"$UP\" == \"0.0\" && \"$DOWN\" == \"0.0\" ]]; then\n  args+=(background.color=$(getcolor black 50))\nelse\n  args+=(background.color=$HIGHLIGHT label.color=$LABEL_COLOR_NEGATIVE)\nfi\n\nsketchybar --set $NAME \"${args[@]}\"",
      "purpose": "This file is a SketchyBar plugin for displaying the upload and download speeds of the Transmission BitTorrent client.",
      "content_summary": "The script sources colors from the SketchyBar configuration, reads upload and download speeds from the Transmission remote command, formats the numbers for better readability, and sets up the SketchyBar to display the speeds with appropriate formatting and colors."
    },
    "plugins/stress.sh": {
      "path": "plugins/stress.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\npython=$(which python3.11)\ntotalStress=$($python $HOME/.config/sketchybar/plugins/stress.py)\ncurrentStress=$(echo $totalStress | cut -d'/' -f1)\n\n[ \"$(cat /tmp/sketchybar_sender)\" = \"focus_off\" ] && DRAWING=\"on\"\n\ncase \"$currentStress\" in\n[0-9] | [1-2][0-9])\n  backgroundColor=$(getcolor teal)\n  ;;\n[3-4][0-9])\n  backgroundColor=$(getcolor yellow)\n  ;;\n[5-6][0-9])\n  backgroundColor=$(getcolor orange)\n  ;;\n[7-9][0-9])\n  backgroundColor=$(getcolor red)\n  ;;\n*)\n  backgroundColor=$LABEL_COLOR\n  DRAWING=\"off\"\n  ;;\nesac\n\nsketchybar --animate tanh 20 --set $NAME drawing=$DRAWING label=\"$totalStress\" background.color=$backgroundColor\n",
      "purpose": "The given file is a SketchyBar plugin script named 'stress.sh'. Its purpose is to display the system's CPU stress level as a label on the SketchyBar menu bar, using different colors to represent different levels of stress. It also includes a feature to animate the label's appearance based on the stress level.",
      "content_summary": "The script sources global styles, colors, and icons, determines the current CPU stress level, sets the label and background color based on the stress level, and animates the label's appearance. It uses Python to calculate the total stress level and cut the output to get the current stress level."
    },
    "plugins/volume.sh": {
      "path": "plugins/volume.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nWIDTH=100\n\nvolume_change() {\n  case $INFO in\n  [7-9][0-9] | 100)\n    ICON=$ICON_VOLUME_100\n    ;;\n  [4-6][0-9])\n    ICON=$ICON_VOLUME_66\n    ;;\n  [2-3][0-9])\n    ICON=$ICON_VOLUME_33\n    ;;\n  [0-1][1-9])\n    ICON=$ICON_VOLUME_10\n    ;;\n  [0-9])\n    if [ \"$(SwitchAudioSource -t output -c)\" == \"ADI-2 DAC (56680401)\" ]; then\n      ICON=$ICON_VOLUME_HEADPHONES\n    else\n      ICON=$ICON_VOLUME_0\n    fi\n    ;;\n  *) ICON=$ICON_VOLUME_100 ;;\n  esac\n\n  sketchybar --set volume_icon icon=$ICON\n  sketchybar --set $NAME slider.percentage=$INFO --animate tanh 30 --set $NAME slider.width=$WIDTH\n  sleep 2\n\n  # Check whether the volume was changed another time while sleeping\n  FINAL_PERCENTAGE=$(sketchybar --query $NAME | jq -r \".slider.percentage\")\n  if ((FINAL_PERCENTAGE == INFO)); then\n    sketchybar --animate tanh 30 --set $NAME slider.width=0\n  fi\n}\n\nmouse_clicked() {\n  osascript -e \"set volume output volume $PERCENTAGE\"\n}\n\ncase \"$SENDER\" in\n\"volume_change\")\n  volume_change\n  ;;\n\"mouse.clicked\")\n  mouse_clicked\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin that displays the system volume level as a slider and an icon, and allows the user to change the volume level by clicking on the slider.",
      "content_summary": "The file defines a function `volume_change` to update the volume slider and icon based on the current volume level, and a function `mouse_clicked` to change the system volume level when the slider is clicked. The plugin also checks whether the volume level has changed again while sleeping, and hides the slider if the volume level remains the same."
    },
    "plugins/music.sh": {
      "path": "plugins/music.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nPLAYER=\"$(echo \"$INFO\" | jq -r '.app')\"\nPLAYERSTATE=\"$(echo \"$INFO\" | jq -r '.state')\"\nCURRENTARTIST=\"$(echo \"$INFO\" | jq -r '.artist')\"\nCURRENTSONG=\"$(echo \"$INFO\" | jq -r '.title')\"\n\nupdateWidget() {\n  if [[ \"$PLAYER\" = \"Music\" || \"$PLAYER\" = \"Spotify\" || \"$PLAYER\" = \"TIDAL\" ]]; then\n    ARGS=(drawing=on label=\"$CURRENTARTIST: $CURRENTSONG\" background.image=media.artwork)\n  else\n    ARGS=(drawing=off)\n  fi\n\n  sketchybar --set $NAME \"${ARGS[@]}\"\n}\n\nmouseClicked() {\n  if [[ \"$MODIFIER\" == \"cmd\" ]]; then\n    open -a \"$PLAYER\"\n  elif [[ \"$MODIFIER\" == \"shift\" ]]; then\n    open raycast://extensions/douo/global-media-key/next\n  elif [[ \"$MODIFIER\" == \"none\" ]]; then\n    open raycast://extensions/douo/global-media-key/play\n  fi\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\" | \"media_change\")\n  updateWidget\n  ;;\n\"mouse.clicked\")\n  mouseClicked\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin script that dynamically updates a widget with the current playing song's artist and title, and the album artwork, if the playing application is one of 'Music', 'Spotify', or 'TIDAL'. It also handles mouse clicks on the widget to open the playing application or control playback.",
      "content_summary": "The script uses jq to parse SketchyBar's INFO data and sets the widget's label and background image accordingly. It also defines mouse click actions for the widget based on the modifier keys."
    },
    "plugins/diskmonitor.sh": {
      "path": "plugins/diskmonitor.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nupdate() {\n\n  VOLUMEDATA=$(df -H /System/Volumes/Data)\n  USEDSPACEPERCENT=$(echo \"$VOLUMEDATA\" | awk 'END {print $5}' | sed 's/%//')\n  FREESPACE=$(echo \"$VOLUMEDATA\" | awk 'END {print $4}' | sed 's/G//')\n  FREESPACEPERCENT=$(echo \"100 - $USEDSPACEPERCENT\" | bc)\n  PERCENTAGE=$FREESPACEPERCENT\n  COLOR=$ICON_COLOR\n\n  case ${PERCENTAGE} in\n  9[8-9] | 100)\n    ICON=\"\udb82\udea5\"\n    COLOR=$(getcolor green)\n    ;;\n  8[8-9] | 9[0-7])\n    ICON=\"\udb82\udea4\"\n    ;;\n  7[6-9] | 8[0-7])\n    ICON=\"\udb82\udea3\"\n    ;;\n  6[4-9] | 7[0-5])\n    ICON=\"\udb82\udea2\"\n    ;;\n  5[2-9] | 6[0-3])\n    ICON=\"\udb82\udea1\"\n    ;;\n  4[0-9] | 5[0-1])\n    ICON=\"\udb82\udea0\"\n    ;;\n  2[8-9] | 3[0-9])\n    ICON=\"\udb82\ude9f\"\n    ;;\n  [6-9] | 1[0-9] | 2[0-7])\n    ICON=\"\udb82\ude9e\"\n    ;;\n  [0-5])\n    ICON=\"\udb81\udf66\"\n    COLOR=$(getcolor orange)\n    ;;\n  *)\n    # Handle other cases if needed\n    ICON=\"\udb80\udd5a\"\n    COLOR=$HIGHLIGHT\n    ;;\n  esac\n\n  sketchybar --set $NAME icon=$ICON icon.color=$COLOR \\\n             --set $NAME.value label=\"$PERCENTAGE%\"\n}\n\nlabel_toggle() {\n  update\n  echo \"WTF\"\n  DRAWING_STATE=$(sketchybar --query $NAME.value | jq -r '.label.drawing')\n\n  if [[ $DRAWING_STATE == \"on\" ]]; then\n    DRAWING=\"off\"\n    PADDING=\"0\"\n  else\n    if [ \"$(cat /tmp/sketchybar_sender)\" != \"focus_on\" ]; then\n      DRAWING=\"on\"\n      PADDING=\"30\"\n    fi\n  fi\n\n  echo $NAME.value $DRAWING\n\n  sketchybar --set $NAME.value label.drawing=$DRAWING \\\n    --set $NAME.label label=$FREESPACE'GB' label.drawing=$DRAWING \\\n    --set $NAME icon.padding_right=$PADDING\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\")\n  update\n  ;;\n\"mouse.clicked\")\n  label_toggle\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin script that monitors the disk usage of the '/System/Volumes/Data' volume and updates the SketchyBar with the disk usage percentage, free space, and an icon representing the level of usage. It also provides a function to toggle the visibility of the label.",
      "content_summary": "The script sources global styles, colors, and icons, defines update and label_toggle functions, and handles different events (routine, forced, and mouse.clicked) to update the SketchyBar accordingly."
    },
    "plugins/things3.sh": {
      "path": "plugins/things3.sh",
      "language": "bash",
      "dependencies": [],
      "content": "INBOX=$(osascript -e 'tell application \"Things3\" to return count of to dos of list \"Inbox\"')\nTODAY=$(osascript -e 'tell application \"Things3\" to return count of to dos of list \"Today\"')\n\nargs=(label.drawing=on label=\"$INBOX\"\"|\"\"$TODAY\")\n\nif [[ $INBOX -eq 0 ]] && [[ $TODAY -eq 0 ]]; then args=(drawing=off); fi\n\nsketchybar  --set $NAME \"${args[@]}\"\n\n#!/bin/bash\n\n# Path to the Things 3 database file\nDATABASE_PATH=\"/Users/pe8er/Library/Group Containers/JLMPQHK86H.com.culturedcode.ThingsMac/ThingsData-94KRO/Things Database.thingsdatabase/main.sqlite\"\n\nQUERY=\"SELECT COUNT(*) FROM TMTask WHERE trashed = 0 AND start = 0 AND area = (SELECT uuid FROM TMArea WHERE type = 0 AND title = 'Inbox');SELECT COUNT(*) FROM TMTask WHERE trashed = 0 AND start = 0 AND area IN (SELECT uuid FROM TMArea WHERE type = 0 AND title = 'Inbox');\"\n\n\n# Execute the query using sqlite3 and print the result\nsqlite3 \"$DATABASE_PATH\" \"$QUERY\"\n",
      "purpose": "This file is a SketchyBar plugin script for integrating the task management app Things 3 with the SketchyBar menu. It retrieves the number of tasks in the Inbox and Today lists from Things 3, and dynamically updates the SketchyBar with these counts.",
      "content_summary": "The script uses AppleScript to interact with Things 3, retrieves task counts from a SQLite database, and sets the SketchyBar label and drawing properties based on these counts."
    },
    "plugins/messages.sh": {
      "path": "plugins/messages.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nif [ \"$(cat /tmp/sketchybar_sender)\" == \"focus_on\" ]; then\n    DRAWING=\"off\"\n  else\n    DRAWING=\"on\"\n  fi\n  \n# NEWMESSAGES=$(sqlite3 ~/Library/Messages/chat.db \"SELECT text FROM message WHERE is_read=0 AND is_from_me=0 AND text!='' AND date_read=0\" | wc -l | awk '{$1=$1};1')\nCOUNT=$(sqlite3 ~/Library/Messages/chat.db \"SELECT COUNT(guid) FROM message WHERE NOT(is_read) AND NOT(is_from_me) AND NOT text =''\")\n\n\ncase \"$COUNT\" in\n[7-9]|[1-9][0-9])\n  COLOR=$(getcolor red)\n  ;;\n[3-6])\n  COLOR=$(getcolor orange)\n  ;;\n[1-2])\n  COLOR=$(getcolor yellow)\n  ;;\n0|\"\")\n  COLOR=$LABEL_COLOR\n  DRAWING=\"off\"\n  ;;\nesac\n\nsketchybar --animate tanh 20 --set $NAME drawing=$DRAWING label=$COUNT icon.color=$COLOR",
      "purpose": "This file is a SketchyBar plugin script that checks for new unread messages in the Messages app on macOS and displays a notification with the number of new messages and an icon, depending on the number of new messages.",
      "content_summary": "The script sources global styles, colors, and icons, checks if SketchyBar should be focused on or off, counts the number of new unread messages in the Messages app, assigns a color to the notification based on the number of new messages, and finally displays the notification with the number of new messages, the drawing state, and the color of the icon."
    },
    "plugins/volume_click.sh": {
      "path": "plugins/volume_click.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\"",
        "\"$CONFIG_DIR/colors.sh\"",
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nWIDTH=100\n\ndetail_on() {\n  sketchybar --animate tanh 30 --set volume slider.width=$WIDTH\n}\n\ndetail_off() {\n  sketchybar --animate tanh 30 --set volume slider.width=0\n}\n\ntoggle_detail() {\n  INITIAL_WIDTH=$(sketchybar --query volume | jq -r \".slider.width\")\n  if [ \"$INITIAL_WIDTH\" -eq \"0\" ]; then\n    detail_on\n  else\n    detail_off\n  fi\n}\n\ntoggle_devices() {\n  which SwitchAudioSource >/dev/null || exit 0\n  source \"$CONFIG_DIR/colors.sh\"\n  source \"$CONFIG_DIR/globalstyles.sh\"\n  \n  args=(--remove '/volume.device\\..*/' --set $NAME popup.drawing=toggle \"${menu_defaults[@]}\")\n\n  COUNTER=0\n  CURRENT=\"$(SwitchAudioSource -t output -c)\"\n\n  while IFS= read -r device; do\n    COLOR=$LABEL_COLOR\n    ICON=\udbc0\udd85\n    ICON_COLOR=$TRANSPARENT\n    \n    if [ \"${device}\" == \"$CURRENT\" ]; then\n      COLOR=$HIGHLIGHT\n      ICON_COLOR=$HIGHLIGHT\n    fi\n\n    args+=(--add item volume.device.$COUNTER popup.$NAME           \\\n           --set volume.device.$COUNTER label=\"${device}\"          \\\n                                        \"${menu_item_defaults[@]}\" \\\n                                        label.color=\"$COLOR\"       \\\n                                        icon=$ICON                 \\\n                                        icon.color=$ICON_COLOR     \\\n    click_script=\"SwitchAudioSource -s \\\"${device}\\\" && sketchybar --set /volume.device\\..*/ label.color=$COLOR --set \\$NAME label.color=$COLOR --set $NAME popup.drawing=off\")\n   \n    COUNTER=$((COUNTER+1))\n  done <<< \"$(SwitchAudioSource -a -t output)\"\n\n  sketchybar -m \"${args[@]}\" > /dev/null\n}\n\nif [ \"$BUTTON\" = \"left\" ] || [ \"$MODIFIER\" = \"shift\" ]; then\n  toggle_devices\nelse\n  toggle_detail\nfi",
      "purpose": "This file is a SketchyBar plugin script that manages the volume and audio output device settings in the system tray. It provides a graphical slider for volume control and a list of available audio output devices with the ability to switch between them.",
      "content_summary": "The script sources global styles, colors, and icons, defines the width of the volume slider, and provides functions for turning the slider detail on and off. It also defines a function for toggling the audio output devices, which removes the current device list, adds a new list with the available devices, and sets up click scripts for each device to switch the output. The script responds differently based on the left button or shift modifier being clicked."
    },
    "plugins/brightness.sh": {
      "path": "plugins/brightness.sh",
      "language": "bash",
      "dependencies": [],
      "content": "LABEL=$(brightness -l | awk 'NR==2 {printf(\"%02.0f\", $4*100)}')%\n\nsketchybar --set $NAME label=$LABEL",
      "purpose": "This file is used to display the current system brightness as a percentage in SketchyBar, a macOS system tray application.",
      "content_summary": "The file contains a shell script that retrieves the system brightness level, converts it to a percentage, and sets it as the label in SketchyBar."
    },
    "plugins/dndindicator.sh": {
      "path": "plugins/dndindicator.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env bash\n\n# Thanks to reddit:rudypaul\n# BIN_DIR=\"/usr/bin\"\n\n# PLUTIL=\"${BIN_DIR}/plutil\"\n# XPATH=\"${BIN_DIR}/xpath\"\n# BASE64=\"${BIN_DIR}/base64\"\n\ndnd_enabled=$(\ndefaults read com.apple.controlcenter \"NSStatusItem Visible FocusModes\"\n# dnd_enabled=$(\n#     \"${PLUTIL}\" -extract dnd_prefs xml1 -o - ~/Library/Preferences/com.apple.ncprefs.plist |\n#         \"${XPATH}\" -q -e 'string(//data)' |\n#         \"${BASE64}\" -D |\n#         \"${PLUTIL}\" -convert xml1 - -o - |\n#         \"${XPATH}\" -q -e 'boolean(//key[text()=\"userPref\"]/following-sibling::dict/key[text()=\"enabled\"])'\n)\n\nif [ $dnd_enabled -eq 1 ]; then\n    sketchybar --set $NAME drawing=on icon=\udbc0\uddba\nelse\n    sketchybar --set $NAME drawing=off icon=\nfi",
      "purpose": "This file is a SketchyBar plugin script that checks the Do Not Disturb (DND) status on macOS and updates the SketchyBar interface accordingly.",
      "content_summary": "The script reads the DND status from the system preferences, and based on whether it is enabled or not, it sets the drawing state and icon of a specific SketchyBar item."
    },
    "plugins/nextevent.applescript": {
      "path": "plugins/nextevent.applescript",
      "language": "unknown",
      "dependencies": [],
      "content": "set input to paragraphs of (do shell script \"/opt/homebrew/bin/icalBuddy -ec 'Found in Natural Language,CCSF' -npn -nc -iep 'datetime,title' -po 'datetime,title' -eed -ea -n -li 4 -ps '|: |' -b '' eventsToday\")\n\nset currentTime to date (do shell script \"date '+%I:%M %p'\")\n\nset theEvent to \"\"\n\nif input is not \"\" then\n\trepeat with anEvent in input\n\t\tset text item delimiters to \"^\"\n\t\tset eventTime to date (text item 1 of anEvent)\n\t\tset text item delimiters to \"\"\n\t\tif eventTime > currentTime then\n\t\t\tset theEvent to anEvent as string\n\t\t\texit repeat\n\t\tend if\n\tend repeat\nend if\n\nreturn theEvent",
      "purpose": "This file is a plugin for SketchyBar that retrieves upcoming events from the user's calendar using the icalBuddy command-line tool and displays the next event that occurs after the current time.",
      "content_summary": "The script fetches events for the current day from the user's calendar, compares their times with the current time, and returns the event with the latest time that is still in the future."
    },
    "plugins/brew.sh": {
      "path": "plugins/brew.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nOUTDATED=$(brew outdated)\nCOUNT=$(echo $OUTDATED | wc -w | tr -d ' ')\n\nupdate_label() {\n  if [ \"$(cat /tmp/sketchybar_sender)\" == \"focus_on\" ]; then\n    DRAWING=\"off\"\n  else\n    DRAWING=\"on\"\n  fi\n\n  case \"$COUNT\" in\n  [7-9] | [1-9][0-9])\n    COLOR=$(getcolor red)\n    ;;\n  [3-6])\n    COLOR=$(getcolor orange)\n    ;;\n  [1-2])\n    COLOR=$(getcolor yellow)\n    ;;\n  0 | \"\")\n    COLOR=$LABEL_COLOR\n    DRAWING=\"off\"\n    ;;\n  esac\n\n  sketchybar --animate tanh 20 --set $NAME drawing=$DRAWING label=$COUNT icon.color=$COLOR\n}\n\nmouse_clicked() {\n  sketchybar --set $NAME icon=$ICON_REFRESH\n  $(which terminal-notifier) -title \"$NAME\" -subtitle \"$COUNT outdated packages\" -message \"$(echo -e \"$OUTDATED\")\"\n  $CONFIG_DIR/items/brew_script.sh &\n\n  # Wait for the brew process to finish\n  wait $!\n  echo \"Brew update and upgrade are complete.\"\n  sleep 3\n  update_label\n  sketchybar --set $NAME icon=$ICON_PACKAGE\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\")\n  update_label\n  ;;\n\"mouse.clicked\")\n  mouse_clicked\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin script that monitors the outdated packages in the system using Homebrew and updates the SketchyBar item with the number of outdated packages and their status (whether they can be updated or not). It also provides a functionality to manually update the packages and notifies the user about the outdated packages and the update process.",
      "content_summary": "The script sources global styles, colors, and icons, checks for outdated packages, assigns a color based on the number of outdated packages, updates the SketchyBar item with the number of outdated packages, color, and status, provides a function to manually update the packages, notifies the user about the outdated packages and the update process, and waits for the update process to finish before updating the SketchyBar item again."
    },
    "plugins/front_app.sh": {
      "path": "plugins/front_app.sh",
      "language": "bash",
      "dependencies": [
        "E.g. the front_app_switched event sends the name of the newly"
      ],
      "content": "#!/bin/bash\n\n# # Some events send additional information specific to the event in the $INFO\n# # variable. E.g. the front_app_switched event sends the name of the newly\n# # focused application in the $INFO variable:\n# # https://felixkratz.github.io/SketchyBar/config/events#events-and-scripting\n\n\n# CURRENT_APP=$(yabai -m query --windows app --window | jq -r '.app')\n# CURRENT_SID=$(yabai -m query --spaces index --space | jq -r '.index')\n# FRONT_APP_LABEL_COLOR=\"$(sketchybar --query space.$CURRENT_SID | jq -r \".label.highlight_color\")\"\n\n# if [[ $CURRENT_APP ]]; then\n#   ICON=\udbc0\udd8a\n# else\n#   ICON=\"\"\n# fi\n\n# sketchybar --set $NAME icon=$ICON label=\"$CURRENT_APP\" label.color=$FRONT_APP_LABEL_COLOR\n\nWIN_TITLE_FILE='window_title.dat'\nOLD_TITLE=$(sketchybar --query front_app | jq -r \".label.value\")\n  \n  WINDOW_TITLE=$(/opt/homebrew/bin/yabai -m query --windows --window | jq -r '.title')\n  \n  if [[ $WINDOW_TITLE = \"\" ]]; then\n    WINDOW_TITLE=$(/opt/homebrew/bin/yabai -m query --windows --window | jq -r '.app')\n  fi\n  \n  # OLD_TITLE=$(cat $WIN_TITLE_FILE)\n  \n  if [[ $WINDOW_TITLE = $OLD_TITLE ]]; then\n    exit 0\n  else\n    sketchybar --animate sin 5 --set front_app label.color.alpha=0.0 label.width=0\n    # echo $WINDOW_TITLE > $WIN_TITLE_FILE\n    \n    sleep 0.15\n    \n    sketchybar -m --set front_app label=\"$WINDOW_TITLE\"\n    sketchybar --animate sin 5 --set front_app label.color.alpha=1.0 label.width=dynamic\n  fi",
      "purpose": "This file is a SketchyBar plugin script that dynamically updates the title of the currently active application in the SketchyBar menu.",
      "content_summary": "The script uses yabai to query the title and application name of the active window, compares it with the previous title, and updates the SketchyBar menu accordingly. If the title remains the same, the script exits without making any changes."
    },
    "plugins/Countdown.sh": {
      "path": "plugins/Countdown.sh",
      "language": "bash",
      "dependencies": [],
      "content": "end=$(date -j -f \"%b %d %Y %H:%M:%S\" \"Aug 1 2024 23:00:00\" +%s)\nstart=$(date +%s)\n\ntime=$(awk 'BEGIN {p = ('\"$start\"'-'\"$end\"')/2628002.88; printf \"%.1f\\n\", p}')\"M\"\n\n# countdown=$(printf '%d:%d:%d\\n' $(($time/60/60/24%365)) $(($time/3600%24)) $(($time%3600/60)))\n\nsketchybar --set $NAME label=\"$time\"",
      "purpose": "This file is a SketchyBar plugin that calculates the time remaining until a specific date and displays it as a countdown in the menu bar.",
      "content_summary": "The script calculates the number of months until August 1, 2024, 23:00:00 (UTC) and sets the SketchyBar label to display this countdown."
    },
    "plugins/app_space.sh": {
      "path": "plugins/app_space.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nSID=$1\nDEBUG=1\n\ncreate_icons() {\n  sketchybar --set space.$1 label=\"$(create_label \"$1\")\"\n}\n\nupdate_icons() {\n  \n  CURRENT_SID=$(yabai -m query --spaces index --space | jq -r '.index')\n\n  if [[ \"$CURRENT_SID\" == \"$SID\" ]]; then\n    create_icons \"$CURRENT_SID\"\n    BACKGROUND_COLOR=$HIGHLIGHT\n    COLOR=$BAR_COLOR\n    STYLE=\"Bold\"\n  else\n    BACKGROUND_COLOR=\"$(getcolor white 10)\"\n    COLOR=$LABEL_COLOR\n    STYLE=\"Regular\"\n  fi\n\n  # CURRENT_LABEL=&(sketchybar --query space.$SID | jq -r \".label.value\")\n\n  # if [[ $CURRENT_LABEL ]]; then\n  #   PADDING_LABEL=0\n  # else\n  #   PADDING_LABEL=$PADDINGS\n  # fi\n  \n  echo $CURRENT_SID \">\" $CURRENT_LABEL \">\" $PADDING_LABEL\n\n  sketchybar --animate tanh 10                                    \\\n             --set space.$SID icon.color=$COLOR                   \\\n                              label.color=$COLOR                  \\\n                              background.color=$BACKGROUND_COLOR  \\\n                              background.height=18                \\\n                              label.font.style=$STYLE             \\\n                              icon.padding_left=$PADDINGS\n}\n\n\ncreate_label() {\n  SID=$1\n  QUERY=$(yabai -m query --windows app,has-focus --space \"$SID\")\n  IFS=$'\\n'\n  local APPS=($(echo \"$QUERY\" | jq -r '.[].app' | sort -u))\n  local CURRENT_APP=$(echo \"$QUERY\" | jq -r '.[] | select(.[\"has-focus\"] == true) | .app')\n  local LABEL BADGE\n\n  # if [[ $APPS ]]; then\n  #   export PADDING_LABEL=$PADDINGS\n    for APP in \"${APPS[@]}\"; do\n      # Add icon\n      LABEL+=$(\"$HOME/.config/sketchybar/plugins/app_icon.sh\" \"$APP\")\n      # Set up badge\n      BADGE=\"$(set_badge $APP)\"\n      # Add app name for currently focused app\n      if [[ \"$APP\" == \"$CURRENT_APP\" ]]; then\n        LABEL+=\" $APP\"\n      # For unfocused apps\u2026\n      else\n        # Add a space if there is a badge\n        if [[ $BADGE ]]; then\n          LABEL+=\" \"\n        fi\n      fi\n      # Add badge\n      LABEL+=\"$BADGE\"\n      # Add a space between labels if there is more than one app on a space\n      if (( ${#APPS[@]} > 1 )); then\n        LABEL+=\" \"\n      fi\n    done\n    # Remove trailing space if necessary\n    if [[ \"$LABEL\" =~ [[:space:]]$ ]]; then\n      LABEL=\"${LABEL%\"${LABEL##*[![:space:]]}\"}\"\n    fi\n  # else\n    # export PADDING_LABEL=0\n    # LABEL=\"\"\n  # fi\n  echo $LABEL\n  unset IFS\n}\n\nset_badge() {\n  if [[ \"$1\" == \"Messages\" ]]; then\n    BADGE=$(sqlite3 ~/Library/Messages/chat.db \"SELECT COUNT(guid) FROM message WHERE NOT(is_read) AND NOT(is_from_me) AND text !=''\")\n  else\n    BADGE=$(lsappinfo -all info -only StatusLabel \"$APP\" | sed -nr 's/\\\"StatusLabel\\\"=\\{ \\\"label\\\"=\\\"(.+)\\\" \\}$/\\1/p')\n  fi\n\n  if [[ ! \"$BADGE\" ]]; then\n    echo \"\"\n  elif [[ ! \"$BADGE\" =~ ^[0-9]+$ ]]; then\n    echo \"\udbc0\udf61\"\n  elif (( $BADGE < 10 )); then\n    ICONS=(\"\" \udbc0\udc3a \udbc0\udc3c \udbc0\udc3e \udbc0\udc40 \udbc0\udc42 \udbc0\udc44 \udbc0\udc46 \udbc0\udc48 \udbc0\udc4a)\n    echo \"${ICONS[$BADGE]}\"\n  else\n    echo \"\udbc0\udf61\"\n  fi\n}\n\nmouse_clicked() {\n  if [[ \"$BUTTON\" == \"right\" ]] || [[ \"$MODIFIER\" == \"shift\" ]]; then\n    SPACE_NAME=\"${NAME#*.}\"\n    SPACE_LABEL=\"$(osascript -e \"return (text returned of (display dialog \\\"Rename space $SPACE_NAME to:\\\" default answer \\\"\\\" with title \\\"Space Renamer\\\" buttons {\\\"Cancel\\\", \\\"Rename\\\"} default button \\\"Rename\\\"))\")\"\n    if [[ $? -eq 0 ]]; then\n      if [[ \"$SPACE_LABEL\" == \"\" ]]; then\n        set_space_label \"${NAME:6}\"\n      else\n        set_space_label \"${NAME:6} $SPACE_LABEL\"\n      fi\n    fi\n  elif [[ \"$MODIFIER\" == \"cmd\" ]]; then\n    ~/.config/yabai/cycle_windows.sh\n  else\n    yabai -m space --focus $SID\n  fi\n}\n\nset_space_label() {\n  sketchybar --set $NAME icon=\"$@\"\n}\n\ndebug() {\n  if (( DEBUG == 1 )); then\n    echo ---$(date +\"%T\")---\n    echo sender: $SENDER\n    echo sid: $SID\n    echo ---\n    echo $@\n    echo ---\n  fi\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\" | \"space_windows_change\")\n  create_icons \"$SID\"\n  update_icons\n  ;;\n\"front_app_switched\" | \"space_change\")\n  update_icons\n  ;;\n\"mouse.clicked\")\n  mouse_clicked\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin script that dynamically displays the applications running on each space in a tiling window manager like yabai, along with their respective icons and badges (if applicable). It also provides functionality for renaming spaces, cycling windows, and focusing on a specific space when clicked.",
      "content_summary": "The script sources global styles, colors, and icons, defines functions for creating and updating icons, creating labels for each space, setting badges, handling mouse clicks, and renaming spaces. It also includes debugging functions and event handlers for various SketchyBar events."
    },
    "plugins/stress.py": {
      "path": "plugins/stress.py",
      "language": "python",
      "dependencies": [],
      "content": "# https://github.com/matin/garth\n\ntry:\n  import garth\nexcept ImportError:\n  print(\"garth module is not installed. Please install it using 'pip install garth'.\")\n  exit(1)\nfrom garth.exc import GarthException\nfrom getpass import getpass\n\ngarminCredentials = \"/Users/pe8er/.garmin-credentials\"\n\ntry:\n  garth.resume(garminCredentials)\n  garth.client.username\nexcept (FileNotFoundError, GarthException):\n  email = input(\"Email: \")\n  password = getpass(\"Password: \")\n  garth.client.login(email, password)\n\ngarth.save(garminCredentials)\n\nfrom datetime import date\ndailyStress = garth.DailyStress.list(date.today())[0].overall_stress_level\nweeklyStress = garth.WeeklyStress.list(date.today())[0].value\n# test = garth.DailySteps.list(period=2)\n\n# print(dailyStress)\n\nif dailyStress:\n  stressData = print(f\"{dailyStress}/{weeklyStress}\")\nelse:\n  stressData = print(\"N/A\")",
      "purpose": "This file is a SketchyBar plugin that interacts with the Garmin Connect platform to retrieve and display the daily and weekly stress levels of the user.",
      "content_summary": "The script attempts to load the user's Garmin credentials from a file, resumes the Garmin Connect client, logs in if the credentials file is not found or contains incorrect information, retrieves the daily and weekly stress levels, and prints the stress data. It also saves the updated credentials back to the file."
    },
    "plugins/app_space_simple.sh": {
      "path": "plugins/app_space_simple.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nSID=$1\nSPACE_COLOR=$2\nPREV_SID=$(yabai -m query --spaces --space recent | jq -r '.index')\nCURRENT_SID=$(yabai -m query --spaces index --space | jq -r '.index')\nFOCUSED_APP=$(yabai -m query --windows app --window | jq -r '.app')\n\nupdate_colors() {\n  if [[ \"$SID\" == \"$PREV_SID\" ]]; then\n    sketchybar --animate tanh 20                                      \\\n               --set space.$PREV_SID background.color=$TRANSPARENT    \\\n                           icon.color=$ICON_COLOR                     \\\n                           label.color=$LABEL_COLOR\n  elif [[ \"$SID\" == \"$CURRENT_SID\" ]]; then\n    sketchybar --animate tanh 20                                      \\\n               --set space.$CURRENT_SID background.color=$SPACE_COLOR \\\n                           icon.color=$BAR_COLOR                      \\\n                           label.color=$BAR_COLOR\n  fi\n  # debug \"update_colors\"\n}\n\nupdate_label() {\n  if [[ \"$SID\" == \"$CURRENT_SID\" ]]; then\n    if [[ -z \"$FOCUSED_APP\" ]]; then\n      LABEL_DRAWING=\"off\"\n    else\n      LABEL_DRAWING=\"on\"\n    fi\n    sketchybar --animate tanh 20                                          \\\n               --set space.$CURRENT_SID label.drawing=$LABEL_DRAWING      \\\n                                        label=\"$FOCUSED_APP\"\n    # debug \"update_label\"\n  fi\n}\n\nremove_label() {\n  if [[ \"$SID\" == \"$PREV_SID\" ]]; then\n    sketchybar --animate tanh 20 --set space.$PREV_SID label.drawing=off\n    # debug \"remove_label\"\n  fi\n}\n\nmouse_clicked() {\n  if [[ \"$BUTTON\" == \"right\" ]] || [[ \"$MODIFIER\" == \"shift\" ]]; then\n    SPACE_NAME=\"${NAME#*.}\"\n    SPACE_LABEL=\"$(osascript -e \"return (text returned of (display dialog \\\"Rename space $SPACE_NAME to:\\\" default answer \\\"\\\" with title \\\"Space Renamer\\\" buttons {\\\"Cancel\\\", \\\"Rename\\\"} default button \\\"Rename\\\"))\")\"\n    if [[ $? -eq 0 ]]; then\n      if [[ \"$SPACE_LABEL\" == \"\" ]]; then\n        set_space_label \"\"\n      else\n        set_space_label \"$SPACE_LABEL\"\n      fi\n    fi\n  else\n    if [[ \"$SID\" != \"$CURRENT_SID\" ]]; then\n      yabai -m space --focus $SID\n    else\n      ~/.config/yabai/cycle_windows.sh\n    fi\n  fi\n}\n\nset_space_label() {\n  sketchybar --set $NAME label=\"$@\"\n}\n\ndebug() {\n  echo $SENDER \"| sid:\" $SID \"| curr:\" $CURRENT_SID \"| prev:\" $PREV_SID \"[$1]\"\n  # echo $INFO\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\" | \"space_change\")\n  update_colors\n  update_label\n  remove_label\n  ;;\n\"front_app_switched\")\n  update_label\n  ;;\n\"mouse.clicked\")\n  mouse_clicked\n  ;;\nesac",
      "purpose": "This file is a plugin for SketchyBar, a macOS system tray application, which dynamically manages the appearance of a workspace (space) indicator in the system tray. The plugin updates the workspace indicator's color, label, and other properties based on the current workspace and focused application.",
      "content_summary": "The script sources global styles, colors, and icons, then retrieves the current workspace's index, the index of the previous workspace, and the focused application. It defines functions for updating the workspace's color and label, removing the label from the previous workspace, handling mouse clicks on the workspace indicator, and renaming workspaces. The script then handles different events such as routine changes, forced changes, space changes, front app switched, and mouse clicks, and updates the workspace indicator accordingly."
    },
    "plugins/wifi.sh": {
      "path": "plugins/wifi.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/colors.sh\""
      ],
      "content": "#!/bin/bash\n\n# Loads defined colors\nsource \"$CONFIG_DIR/colors.sh\"\n\nIS_VPN=$(/usr/local/bin/piactl get connectionstate)\n# IS_VPN=\"Disconnected\"\n# CURRENT_WIFI=\"$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I)\"\nCURRENT_WIFI=\"$(ipconfig getsummary en0)\"\n# IP_ADDRESS=\"$(ipconfig getifaddr en0)\"\nIP_ADDRESS=\"$(echo \"$CURRENT_WIFI\" | grep -o \"ciaddr = .*\" | sed 's/^ciaddr = //')\"\nSSID=\"$(echo \"$CURRENT_WIFI\" | grep -o \"SSID : .*\" | sed 's/^SSID : //' | tail -n 1)\"\n# CURR_TX=\"$(echo \"$CURRENT_WIFI\" | grep -o \"lastTxRate: .*\" | sed 's/^lastTxRate: //')\"\n\nif [[ $IS_VPN != \"Disconnected\" ]]; then\n  ICON_COLOR=$HIGHLIGHT\n  ICON=\udbc0\udfa1\nelif [[ $SSID = \"Ebrietas\" ]]; then\n  ICON_COLOR=$(getcolor white)\n  ICON=\udbc0\ude64\nelif [[ $SSID != \"\" ]]; then\n  ICON_COLOR=$(getcolor white)\n  ICON=\udbc1\udc3f\nelif [[ $CURRENT_WIFI = \"AirPort: Off\" ]]; then\n  ICON=\udbc1\udc3e\nelse\n  ICON_COLOR=$(getcolor white 25)\n  ICON=\udbc1\udc3e\nfi\n\nrender_bar_item() {\n  sketchybar --set $NAME \\\n    icon.color=$ICON_COLOR \\\n    icon=$ICON\n}\n\nrender_popup() {\n  if [ \"$SSID\" != \"\" ]; then\n    args=(\n      --set wifi.ssid label=\"$SSID\"\n      --set wifi.ipaddress label=\"$IP_ADDRESS\"\n      click_script=\"printf $IP_ADDRESS | pbcopy;sketchybar --set wifi popup.drawing=toggle\"\n    )\n  else\n    args=(\n      --set wifi.ssid label=\"Not connected\"\n      --set wifi.ipaddress label=\"No IP\"\n      )\n  fi\n\n  sketchybar \"${args[@]}\" >/dev/null\n}\n\nupdate() {\n  render_bar_item\n  render_popup\n}\n\npopup() {\n  sketchybar --set \"$NAME\" popup.drawing=\"$1\"\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\")\n  update\n  ;;\n\"mouse.clicked\")\n  popup toggle\n  ;;\nesac",
      "purpose": "This file is a SketchyBar plugin script that displays Wi-Fi connection information in the SketchyBar menu, such as the SSID, IP address, and connection state. It also changes the icon based on the connection status and the SSID of the network.",
      "content_summary": "The script sources colors from the SketchyBar configuration, checks the VPN connection state and Wi-Fi connection, and sets the icon and color of the Wi-Fi bar item accordingly. It also generates a popup with detailed Wi-Fi information when clicked."
    },
    "plugins/mail.sh": {
      "path": "plugins/mail.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/usr/bin/env bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nif [ \"$(cat /tmp/sketchybar_sender)\" == \"focus_on\" ]; then\n    DRAWING=\"off\"\n  else\n    DRAWING=\"on\"\n  fi\n\nCOUNT=$(lsappinfo info -only StatusLabel \"Mail\" | grep -o '\"label\"=\"[0-9]*\"' | awk -F'\"' '{print $4}')\n\ncase \"$COUNT\" in\n[7-9]|[1-9][0-9])\n  COLOR=$(getcolor red)\n  ;;\n[3-6])\n  COLOR=$(getcolor orange)\n  ;;\n[1-2])\n  COLOR=$(getcolor yellow)\n  ;;\n0|\"\")\n  COLOR=$LABEL_COLOR\n  DRAWING=\"off\"\n  ;;\nesac\n\nsketchybar --animate tanh 20 --set $NAME drawing=$DRAWING label=$COUNT icon.color=$COLOR",
      "purpose": "This file is a SketchyBar plugin script that displays the number of unread emails in the Mail application and changes the color of the icon based on the number of unread emails.",
      "content_summary": "The script sources global styles, colors, and icons, checks the number of unread emails, and sets the drawing status and color of the SketchyBar item accordingly. It uses a case statement to determine the color based on the number of unread emails, with different colors for different ranges."
    },
    "plugins/yabai.sh": {
      "path": "plugins/yabai.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nset_icon() {\n  SPACE=$(yabai -m query --spaces index,type --space)\n  CURRENT_SID=$(echo $SPACE | jq -r '.index')\n  FRONT_APP_LABEL_COLOR=\"$(sketchybar --query space.$CURRENT_SID | jq -r \".label.highlight_color\")\"\n  LAYOUT=$(echo $SPACE | jq -r '.type')\n  COLOR=$ICON_COLOR\n\n  WINDOW=$(yabai -m query --windows is-floating,split-type,has-fullscreen-zoom,is-sticky,stack-index --window)\n  read -r FLOATING SPLIT FULLSCREEN STICKY STACK_INDEX <<<$(echo \"$WINDOW\" | jq -rc '.[\"is-floating\", \"split-type\", \"has-fullscreen-zoom\", \"is-sticky\", \"stack-index\"]')\n\n  if [[ $LAYOUT == \"stack\" ]]; then\n    LAST_STACK_INDEX=$(yabai -m query --windows stack-index --window stack.last | jq '.[\"stack-index\"]')\n    if [[ -n \"$LAST_STACK_INDEX\" ]]; then\n      LABEL=\"$(printf \"%s/%s\" \"$STACK_INDEX\" \"$LAST_STACK_INDEX\")\"\n    else\n      LABEL=\"\"\n    fi\n    ICON=$ICON_YABAI_STACK\n    COLOR=$FRONT_APP_LABEL_COLOR\n  elif [[ $FLOATING == \"true\" ]]; then\n    ICON=$ICON_YABAI_FLOAT\n  elif [[ $FULLSCREEN == \"true\" ]]; then\n    ICON=$ICON_YABAI_FULLSCREEN_ZOOM\n  elif [[ $SPLIT == \"vertical\" ]]; then\n    ICON=$ICON_YABAI_SPLIT_VERTICAL\n  elif [[ $SPLIT == \"horizontal\" ]]; then\n    ICON=$ICON_YABAI_SPLIT_HORIZONTAL\n  else\n    ICON=$ICON_YABAI_GRID\n  fi\n\n  args=(--bar border_color=$COLOR --animate tanh 10 --set $NAME icon=$ICON icon.color=$COLOR)\n\n  [ -z \"$LABEL\" ] && args+=(label.drawing=off) ||\n    args+=(label.drawing=on label=\"$LABEL\" label.color=$COLOR)\n\n  [ -z \"$ICON\" ] && args+=(icon.width=0) ||\n    args+=(icon=\"$ICON\")\n\n  sketchybar -m \"${args[@]}\"\n}\n\nmouse_clicked() {\n  yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == \"bsp\" then \"stack\" else \"bsp\" end')\n  set_icon\n}\n\ncase \"$SENDER\" in\n  \"mouse.clicked\" | \"alfred_trigger\")\n    mouse_clicked\n    ;;\n  \"window_focus\" | \"front_app_switched\" | \"update_yabai_icon\" | \"space_windows_change\")\n    set_icon\n    ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin script for managing and displaying the layout and status of windows and spaces in the yabai tiling window manager.",
      "content_summary": "The script sources global styles, colors, and icons, defines a function to set the SketchyBar icon based on the current layout, floating state, fullscreen state, and split type of windows, and handles various events such as mouse clicks, window focus changes, front app switches, space window changes, and updates to the yabai icon."
    },
    "plugins/moode.sh": {
      "path": "plugins/moode.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\n# source \"$CONFIG_DIR/globalstyles.sh\"\n\n# music_item_defaults=(\n#   align=center\n#   # padding_left=$PADDINGS\n#   # padding_right=$PADDINGS\n#   label.max_chars=32\n# )\n\n# music_cover=(\n#   background.image=media.artwork\n#   background.image.scale=7\n#   background.image.corner_radius=4\n#   background.image.padding_left=$PADDINGS\n#   background.image.padding_right=$PADDINGS\n#   y_offset=-$PADDINGS\n# )\n\n# music_artist=(\n#   \"${separator[@]}\"\n#   \"${music_item_defaults[@]}\"\n# )\n\n# music_title=(\n#   \"${music_item_defaults[@]}\"\n#   label.font.style=\"Bold\"\n# )\n\n# music_album=(\n#   \"${music_item_defaults[@]}\"\n# )\n\nrender_bar_item() {\n  sketchybar --set $NAME label=\"$CURRENT_ARTIST: $CURRENT_SONG\"\n}\n\n# render_popup() {\n#   sketchybar --set music.cover \"${music_cover[@]}\"   \\\n#              --set music.artist \"${music_artist[@]}\" \\\n#              --set music.title \"${music_title[@]}\"   \\\n#              --set music.album \"${music_album[@]}\"\n# }\n\nupdate() {\n\n  MUSIC=$(ssh pe8er@moode.local 'cat /var/local/www/currentsong.txt'; exit)\n  CURRENT_ARTIST=$(echo \"$MUSIC\" | awk -F 'artist=' '/artist=/{print $2}')\n  CURRENT_SONG=$(echo \"$MUSIC\" | awk -F 'title=' '/title=/{print $2}')\n  CURRENT_ALBUM=$(echo \"$MUSIC\" | awk -F 'album=' '/album=/{print $2}')\n  PLAYER_STATE=$(echo \"$MUSIC\" | awk -F 'state=' '/state=/{print $2}')\n\n  if [ \"$PLAYER_STATE\" = \"play\" ]; then\n    sketchybar --set $NAME drawing=on icon=\udbc0\ude86\n\n    render_bar_item\n    # render_popup\n\n  else\n    sketchybar --set $NAME icon=\udbc0\ude84\n    # popup off\n    # sketchybar --set $NAME drawing=off\n  fi\n  \n}\n\n# popup() {\n#   sketchybar --set \"$NAME\" popup.drawing=\"$1\"\n# }\n\nplaypause() {\n  ssh pe8er@moode.local 'mpc toggle'; exit\n}\n  \n\ncase \"$SENDER\" in\n\"routine\" | \"forced\")\n  update\n  ;;\n# \"mouse.entered\")\n#   popup on\n#   ;;\n# \"mouse.exited\" | \"mouse.exited.global\")\n#   popup off\n#   ;;\n\"mouse.clicked\")\n  playpause\n  ;;\nesac",
      "purpose": "The given file is a SketchyBar plugin script that fetches music information from a remote Moode Audio server and updates the SketchyBar with the current song details, such as artist, song title, and album. It also handles play/pause functionality through SSH commands.",
      "content_summary": "This script loads global styles, defines item defaults, and sets up render functions for the bar item and popup. It updates the bar item based on the player state and fetches the current song details from the Moode Audio server. It also handles play/pause functionality through SSH commands."
    },
    "plugins/dnd.sh": {
      "path": "plugins/dnd.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\ncheck_state() {\n  DND_ENABLED=$(cat ~/Library/DoNotDisturb/DB/Assertions.json | jq .data[0].storeAssertionRecords)\n  [ \"$DND_ENABLED\" = \"null\" ] && COLOR=$ICON_COLOR_INACTIVE || COLOR=$ICON_COLOR\n}\n\nupdate_icon() {\n  local items=(\"weather\" \"aqi\" \"reminders\" \"messages\" \"brew\" \"mail\" \"diskmonitor\" \"diskmonitor.value\" \"diskmonitor.label\" \"volume_icon\" \"volume\" \"wifi\" \"notifications\" \"stress\")\n  local currentSpace=$(yabai -m query --spaces index --space | jq -r '.index')\n      for i in {1..7}; do\n        if [ \"$i\" -ne \"$currentSpace\" ]; then\n            items+=(\"space.$i\")\n        fi\n    done\n  local state_file=\"/tmp/sketchybar_state\"\n  echo $SENDER >/tmp/sketchybar_sender\n  check_state\n  if [ \"$SENDER\" = \"focus_on\" ]; then\n    mv \"$state_file\" \"$state_file.bak\" 2>/dev/null || true # Backup old state file if it exists\n    for item in \"${items[@]}\"; do\n      state=$(sketchybar --query \"$item\" | jq -r \".geometry.drawing\")\n      echo \"$item $state\" >>\"$state_file\"\n      sketchybar --set \"$item\" drawing=\"off\"\n    done\n    # open raycast://extensions/raycast/raycast-focus/toggle-focus-session\n  else\n    while read -r item state; do\n      if [ \"$state\" = \"on\" ]; then\n        sketchybar --set \"$item\" drawing=\"on\"\n      fi\n    done <\"$state_file\"\n    # open raycast://extensions/raycast/raycast-focus/complete-focus-session\n  fi\n\n  # echo $SENDER $DRAWINGSTATE\n\n  sketchybar --set $NAME icon.color=$COLOR\n}\n\ntoggle_dnd() {\n  osascript -e 'tell application \"System Events\" to keystroke \"\\\\\" using {control down, shift down, command down, option down}'\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\")\n  check_state\n  update_icon\n  ;;\n\"focus_on\" | \"focus_off\")\n  update_icon\n  ;;\n\"mouse.clicked\")\n  toggle_dnd\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin that manages the Do Not Disturb (DND) state and updates the SketchyBar's appearance based on the DND status.",
      "content_summary": "The script sources global styles, checks the DND state, updates the SketchyBar's icon color based on the DND state, and provides a function to toggle DND. It also handles different events such as routine, focus changes, and mouse clicks to update the DND state and SketchyBar accordingly."
    },
    "plugins/nextevent.sh": {
      "path": "plugins/nextevent.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nrender_item() {\n  sketchybar --set $NAME label=\"$(date \"+%I:%M %p\")\" \\\n             --set date icon.drawing=$DRAWING \\\n             --set clock label.padding_left=$PADDING\n}\n\nget_events() {\n  if which \"icalBuddy\" &>/dev/null; then \n    DRAWING=\"off\"\n    PADDING=\"0\"\n    input=$(/opt/homebrew/bin/icalBuddy -ec 'Found in Natural Language,CCSF' -npn -nc -iep 'datetime,title' -po 'datetime,title' -eed -ea -n -li 4 -ps '|: |' -b '' eventsToday)\n    currentTime=$(date '+%I:%M %p')\n\n    if [ -n \"$input\" ]; then\n      IFS='^' read -ra events <<< \"$input\"\n      for anEvent in \"${events[@]}\"; do\n        IFS='^' read -ra eventItems <<< \"$anEvent\"\n        eventTime=${eventItems[0]}\n        if [ \"$eventTime\" '>' \"$currentTime\" ]; then\n          theEvent=\"$anEvent\"\n          if [ \"$(cat /tmp/sketchybar_sender)\" = \"focus_off\" ]; then\n            DRAWING=\"on\"\n          fi\n          PADDING=\"12\"\n          break\n        fi\n      done\n    else\n      theEvent=\"No events today\"\n    fi\n  else\n    theEvent=\"Please install icalBuddy \u2192 brew install ical-buddy.\"\n  fi\n}\n\nupdate() {\n  get_events\n  render_item\n}\n\npopup() {\n  get_events\n  sketchybar --set clock.next_event label=\"$theEvent\" \\\n             --set \"$NAME\" popup.drawing=\"$1\"\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\" | \"focus_on\" | \"focus_off\")\n  update\n  ;;\n\"mouse.entered\")\n  popup on\n  ;;\n\"mouse.exited\" | \"mouse.exited.global\")\n  popup off\n  ;;\nesac",
      "purpose": "This file is a SketchyBar plugin that displays the current time and, if there are any upcoming events in the user's calendar, the next event. It also provides a popup with the next event when the mouse enters the bar.",
      "content_summary": "The file contains functions for rendering the time and next event, getting events from the calendar using icalBuddy, updating the bar, and managing popups. It also handles different events such as routine updates, focus changes, and mouse events."
    },
    "plugins/app_icon.sh": {
      "path": "plugins/app_icon.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/icons.sh\""
      ],
      "content": "#!/bin/bash\n\nsource \"$CONFIG_DIR/icons.sh\"\n\ncase \"$1\" in\n\"Terminal\" | \"Warp\" | \"iTerm2\")\n  RESULT=$ICON_TERM\n\tif grep -q \"btop\" <<< $2;\n  then\n\t RESULT=$ICON_CHART\n\tfi\n\tif grep -q \"brew\" <<< $2;\n  then\n\t RESULT=$ICON_PACKAGE\n\tfi\n\tif grep -q \"nvim\" <<< $2;\n  then\n\t RESULT=$ICON_DEV\n\tfi\n\tif grep -q \"ranger\" <<< $2;\n  then\n\t RESULT=$ICON_FILE\n\tfi\n\tif grep -q \"lazygit\" <<< $2;\n  then\n\t RESULT=$ICON_GIT\n\tfi\n\tif grep -q \"taskwarrior-tui\" <<< $2;\n  then\n\t RESULT=$ICON_LIST\n\tfi\n\tif grep -q \"unimatrix\\|pipes.sh\" <<< $2;\n  then\n\t RESULT=$ICON_SCREENSAVOR\n\tfi\n\tif grep -q \"bat\" <<< $2;\n  then\n\t RESULT=$ICON_NOTE\n\tfi\n\tif grep -q \"tty-clock\" <<< $2;\n  then\n\t RESULT=$ICON_CLOCK\n\tfi\n\t;;\n\"Finder\")\n\tRESULT=$ICON_FINDER\n\t;;\n\"Weather\")\n\tRESULT=$ICON_WEATHER\n\t;;\n\"Clock\")\n\tRESULT=$ICON_CLOCK\n\t;;\n\"Mail\" | \"Microsoft Outlook\")\n\tRESULT=$ICON_MAIL\n\t;;\n\"Calendar\")\n\tRESULT=$ICON_CALENDAR\n\t;;\n\"Calculator\" | \"Numi\")\n\tRESULT=$ICON_CALC\n\t;;\n\"Maps\" | \"Find My\")\n\tRESULT=$ICON_MAP\n\t;;\n\"Voice Memos\")\n\tRESULT=$ICON_MICROPHONE\n\t;;\n\"Messages\" | \"Slack\" | \"Microsoft Teams\" | \"Telegram\" | \"WhatsApp\")\n\tRESULT=$ICON_CHAT\n\t;;\n\"Discord\")\n\tRESULT=$ICON_DISCORD\n\t;;\n\"FaceTime\" | \"zoom.us\" | \"Webex\")\n\tRESULT=$ICON_VIDEOCHAT\n\t;;\n\"Notes\" | \"TextEdit\" | \"Stickies\" | \"Microsoft Word\")\n\tRESULT=$ICON_NOTE\n\t;;\n\"Reminders\" | \"Microsoft OneNote\")\n\tRESULT=$ICON_LIST\n\t;;\n\"Things\")\n\tRESULT=$ICON_THINGS\n\t;;\n\"Photo Booth\")\n\tRESULT=$ICON_CAMERA\n\t;;\n\"Safari\" | \"Beam\" | \"DuckDuckGo\" | \"Arc\" | \"Microsoft Edge\" | \"Google Chrome\")\n\tRESULT=$ICON_WEB\n\t;;\n\"Firefox\")\n\tRESULT=$ICON_FIREFOX\n\t;;\n\"System Settings\" | \"System Information\" | \"TinkerTool\")\n\tRESULT=$ICON_COG\n\t;;\n\"HOME\")\n\tRESULT=$ICON_HOMEAUTOMATION\n\t;;\n\"Music\" | \"Spotify\")\n\tRESULT=$ICON_MUSIC\n\t;;\n\"Podcasts\")\n\tRESULT=$ICON_PODCAST\n\t;;\n\"TV\" | \"QuickTime Player\" | \"VLC\")\n\tRESULT=$ICON_PLAY\n\t;;\n\"Books\")\n\tRESULT=$ICON_BOOK\n\t;;\n\"Xcode\" | \"Code\" | \"Neovide\")\n\tRESULT=$ICON_DEV\n\t;;\n\"VSCodium\")\n\tRESULT=$ICON_VSCODIUM\n\t;;\n\"Dictionary\")\n\tRESULT=$ICON_BOOKINFO\n\t;;\n\"Font Book\")\n\tRESULT=$ICON_FONTBOOK\n\t;;\n\"Activity Monitor\")\n\tRESULT=$ICON_CHART\n\t;;\n\"Disk Utility\")\n\tRESULT=$ICON_DISK\n\t;;\n\"Screenshot\" | \"Preview\")\n\tRESULT=$ICON_PREVIEW\n\t;;\n\"1Password\")\n\tRESULT=$ICON_PASSKEY\n\t;;\n\"NordVPN\")\n\tRESULT=$ICON_VPN\n\t;;\n\"Progressive Downloaded\" | \"Transmission\")\n\tRESULT=$ICON_DOWNLOAD\n\t;;\n\"Airflow\")\n\tRESULT=$ICON_CAST\n\t;;\n\"Microsoft Excel\" | \"Numbers\")\n\tRESULT=$ICON_TABLE\n\t;;\n\"Microsoft PowerPoint\" | \"Keynote\" | \"Google Slides\")\n\tRESULT=$ICON_PRESENT\n\t;;\n\"OneDrive\")\n\tRESULT=$ICON_CLOUD\n\t;;\n\"Curve\")\n\tRESULT=$ICON_PEN\n\t;;\n\"VMware Fusion\" | \"UTM\")\n\tRESULT=$ICON_REMOTEDESKTOP\n\t;;\n\"Adobe Photoshop 2024\")\n\tRESULT=$ICON_PHOTOSHOP\n\t;;\n\"Adobe After Effects\")\n\tRESULT=$ICON_AFTEREFFECTS\n\t;;\n\"Photos\" | \"Lightroom Classic\")\n\tRESULT=$ICON_PHOTOS\n\t;;\n\"Figma\")\n\tRESULT=$ICON_FIGMA\n\t;;\n\"KiCad\")\n\tRESULT=$ICON_KICAD\n\t;;\n\"JDownloader2\")\n\tRESULT=$ICON_DOWNLOAD\n\t;;\n\"SF Symbols\")\n\tRESULT=$ICON_ICON\n\t;;\n\"Steam\" | \"Steam Helper\")\n\tRESULT=$ICON_STEAM\n\t;;\n\"HandBrake\")\n\tRESULT=$ICON_HANDBRAKE\n\t;;\n\"GLMv4\" | \"GLMv5\")\n\tRESULT=$ICON_GLM\n\t;;\n\"Popcorn-Time\")\n\tRESULT=$ICON_POPCORN\n\t;;\n\"InDesign\")\n\tRESULT=$ICON_INDESIGN\n\t;;\n\"Adobe Illustrator 2024\")\n\tRESULT=$ICON_ILLUSTRATOR\n\t;;\n\"DaisyDisk\")\n\tRESULT=$ICON_DAISYDISK\n\t;;\n*)\n\tRESULT=$ICON_APP\n\t;;\nesac\n\necho $RESULT",
      "purpose": "The provided file is a SketchyBar plugin script that defines custom application icons based on the application name passed as an argument.",
      "content_summary": "The script sources an icons configuration file, then checks the passed argument to determine the application. It then sets the icon result variable to the appropriate icon based on the application. If the application is not recognized, it defaults to the generic application icon."
    },
    "plugins/battery.sh": {
      "path": "plugins/battery.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/colors.sh\""
      ],
      "content": "#!/bin/bash\n\nsource \"$CONFIG_DIR/colors.sh\"\nTMP=\"/tmp/drawing_state.txt\"\n\nrender_item() {\n  PERCENTAGE=$(pmset -g batt | grep -Eo \"\\d+%\" | cut -d% -f1)\n  CHARGING=$(pmset -g batt | grep 'AC Power')\n  COLOR=$ICON_COLOR\n  local DRAWING=$(get_label_state)\n\n  if [ $PERCENTAGE = \"\" ]; then\n    exit 0\n  fi\n\n  case ${PERCENTAGE} in\n  9[0-9] | 100)\n    ICON=\"\udbc1\udee8\"\n    ;;\n  [6-8][0-9])\n    ICON=\"\udbc3\udeb8\"\n    ;;\n  [3-5][0-9])\n    ICON=\"\udbc3\udeb6\"\n    ;;\n  [1-2][0-9])\n    ICON=\"\udbc1\udee9\"\n    COLOR=$(getcolor yellow)\n    DRAWING=\"on\"\n    ;;\n  *)\n    ICON=\"\udbc1\udeea\"\n    COLOR=$(getcolor red)\n    DRAWING=\"on\"\n    ;;\n  esac\n\n  if [[ $CHARGING != \"\" ]]; then\n    ICON=\"\udbc2\udc8b\"\n    COLOR=$(getcolor green)\n  fi\n\n  sketchybar --set $NAME icon=$ICON icon.color=$COLOR label=$PERCENTAGE% label.color=$LABEL_COLOR label.drawing=$DRAWING\n}\n\nsave_label_state() {\n  echo \"$(sketchybar --query $NAME | jq -r '.label.drawing')\" > \"$TMP\"\n}\n\nget_label_state() {\n  if [ -e \"$TMP\" ]; then\n    cat \"$TMP\"\n  else\n    echo \"off\" > \"$TMP\"\n  fi\n}\n\nlabel_toggle() {\n  if [[ $(get_label_state) == \"on\" ]]; then\n    DRAWING=\"off\"\n  else\n    DRAWING=\"on\"\n  fi\n  \n  sketchybar --set $NAME label.drawing=$DRAWING\n  save_label_state\n}\n\ncase \"$SENDER\" in\n\"mouse.clicked\")\n  label_toggle\n  ;;\n\"routine\" | \"forced\" | \"power_source_change\")\n  render_item\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin script that monitors the battery level of the system and dynamically updates the battery icon and percentage displayed in the SketchyBar menu bar. It also provides a functionality to toggle the drawing state of the battery label.",
      "content_summary": "The script sources colors from a separate file, checks the battery level and charging status, and sets the corresponding icon, color, and label text based on the battery level. It also provides a toggle function to turn the drawing state of the battery label on or off."
    },
    "plugins/reminders.sh": {
      "path": "plugins/reminders.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nif [ \"$(cat /tmp/sketchybar_sender)\" == \"focus_on\" ]; then\n    DRAWING=\"off\"\n  else\n    DRAWING=\"on\"\n  fi\n\nCOUNT=$(( $(reminders show-all --due-date today | grep -E \"^[a-zA-Z &]+: \\d{1,2}: \" | wc -l) + 0 ))\n\ncase \"$COUNT\" in\n[7-9]|[1-9][0-9])\n  COLOR=$(getcolor red)\n  ;;\n[3-6])\n  COLOR=$(getcolor orange)\n  ;;\n[1-2])\n  COLOR=$(getcolor yellow)\n  ;;\n0|\"\")\n  COLOR=$LABEL_COLOR\n  DRAWING=\"off\"\n  ;;\nesac\n\nsketchybar --animate tanh 20 --set $NAME drawing=$DRAWING label=$COUNT icon.color=$COLOR",
      "purpose": "This file is a SketchyBar plugin script that checks for reminders due today, assigns a color based on the number of reminders, and displays the count and an icon in the SketchyBar menu.",
      "content_summary": "The script sources global styles, checks if SketchyBar should be focused, counts the number of reminders due today, assigns a color based on the number of reminders, and sets the SketchyBar menu with the count, icon color, and drawing state."
    },
    "plugins/weather.sh": {
      "path": "plugins/weather.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/usr/bin/env bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nWEATHER_ICONS_DAY=(\n  [1000]=\ue30d # Sunny/113\n  [1003]=\ue302 # Partly cloudy/116\n  [1006]=\ue312 # Cloudy/119\n  [1009]=\ue302 # Overcast/122\n  [1030]=\ue303 # Mist/143\n  [1063]=\ue308 # Patchy rain possible/176\n  [1066]=\ue30a # Patchy snow possible/179\n  [1069]=\ue3aa # Patchy sleet possible/182\n  [1072]=\ue308 # Patchy freezing drizzle possible/185\n  [1087]=\ue30f # Thundery outbreaks possible/200\n  [1114]=\ue30a # Blowing snow/227\n  [1117]=\ue30a # Blizzard/230\n  [1135]=\ue303 # Fog/248\n  [1147]=\ue303 # Freezing fog/260\n  [1150]=\ue308 # Patchy light drizzle/263\n  [1153]=\ue308 # Light drizzle/266\n  [1168]=\ue308 # Freezing drizzle/281\n  [1171]=\ue308 # Heavy freezing drizzle/284\n  [1180]=\ue308 # Patchy light rain/293\n  [1183]=\ue308 # Light rain/296\n  [1186]=\ue308 # Moderate rain at times/299\n  [1189]=\ue308 # Moderate rain/302\n  [1192]=\ue308 # Heavy rain at times/305\n  [1195]=\ue308 # Heavy rain/308\n  [1198]=\ue308 # Light freezing rain/311\n  [1201]=\ue308 # Moderate or heavy freezing rain/314\n  [1204]=\ue3aa # Light sleet/317\n  [1207]=\ue3aa # Moderate or heavy sleet/320\n  [1210]=\ue30a # Patchy light snow/323\n  [1213]=\ue30a # Light snow/326\n  [1216]=\ue30a # Patchy moderate snow/329\n  [1219]=\ue30a # Moderate snow/332\n  [1222]=\ue30a # Patchy heavy snow/335\n  [1225]=\ue30a # Heavy snow/338\n  [1237]=\ue304 # Ice pellets/350\n  [1240]=\ue309 # Light rain shower/353\n  [1243]=\ue309 # Moderate or heavy rain shower/356\n  [1246]=\ue309 # Torrential rain shower/359\n  [1249]=\ue3aa # Light sleet showers/362\n  [1252]=\ue3aa # Moderate or heavy sleet showers/365\n  [1255]=\ue30a # Light snow showers/368\n  [1258]=\ue30a # Moderate or heavy snow showers/371\n  [1261]=\ue304 # Light showers of ice pellets/374\n  [1264]=\ue304 # Moderate or heavy showers of ice pellets/377\n  [1273]=\ue30f # Patchy light rain with thunder/386\n  [1276]=\ue30f # Moderate or heavy rain with thunder/389\n  [1279]=\ue367 # Patchy light snow with thunder/392\n  [1282]=\ue367 # Moderate or heavy snow with thunder/395\n)\n\nWEATHER_ICONS_NIGHT=(\n  [1000]=\ue32b # Clear/113\n  [1003]=\ue379 # Partly cloudy/116\n  [1006]=\ue312 # Cloudy/119\n  [1009]=\ue379 # Overcast/122\n  [1030]=\ue346 # Mist/143\n  [1063]=\ue325 # Patchy rain possible/176\n  [1066]=\ue327 # Patchy snow possible/179\n  [1069]=\ue3ac # Patchy sleet possible/182\n  [1072]=\ue325 # Patchy freezing drizzle possible/185\n  [1087]=\ue32a # Thundery outbreaks possible/200\n  [1114]=\ue327 # Blowing snow/227\n  [1117]=\ue327 # Blizzard/230\n  [1135]=\ue346 # Fog/248\n  [1147]=\ue346 # Freezing fog/260\n  [1150]=\ue325 # Patchy light drizzle/263\n  [1153]=\ue325 # Light drizzle/266\n  [1168]=\ue325 # Freezing drizzle/281\n  [1171]=\ue325 # Heavy freezing drizzle/284\n  [1180]=\ue325 # Patchy light rain/293\n  [1183]=\ue325 # Light rain/296\n  [1186]=\ue325 # Moderate rain at times/299\n  [1189]=\ue325 # Moderate rain/302\n  [1192]=\ue325 # Heavy rain at times/305\n  [1195]=\ue325 # Heavy rain/308\n  [1198]=\ue325 # Light freezing rain/311\n  [1201]=\ue325 # Moderate or heavy freezing rain/314\n  [1204]=\ue3ac # Light sleet/317\n  [1207]=\ue3ac # Moderate or heavy sleet/320\n  [1210]=\ue327 # Patchy light snow/323\n  [1213]=\ue327 # Light snow/326\n  [1216]=\ue327 # Patchy moderate snow/329\n  [1219]=\ue327 # Moderate snow/332\n  [1222]=\ue327 # Patchy heavy snow/335\n  [1225]=\ue327 # Heavy snow/338\n  [1237]=\ue321 # Ice pellets/350\n  [1240]=\ue334 # Light rain shower/353\n  [1243]=\ue334 # Moderate or heavy rain shower/356\n  [1246]=\ue334 # Torrential rain shower/359\n  [1249]=\ue3ac # Light sleet showers/362\n  [1252]=\ue3ac # Moderate or heavy sleet showers/365\n  [1255]=\ue327 # Light snow showers/368\n  [1258]=\ue327 # Moderate or heavy snow showers/371\n  [1261]=\ue321 # Light showers of ice pellets/374\n  [1264]=\ue321 # Moderate or heavy showers of ice pellets/377\n  [1273]=\ue32a # Patchy light rain with thunder/386\n  [1276]=\ue32a # Moderate or heavy rain with thunder/389\n  [1279]=\ue367 # Patchy light snow with thunder/392\n  [1282]=\ue367 # Moderate or heavy snow with thunder/395\n)\n\nrender_items() {\n  if [ \"$(cat /tmp/sketchybar_sender)\" == \"focus_on\" ]; then\n    DRAWING=\"off\"\n  else\n    DRAWING=\"on\"\n  fi\n\n  if [ \"$TEMP\" = \"\" ]; then\n    args=(--set $NAME drawing=$DRAWING icon=\"\udbc0\udf0f\" label.drawing=off click_script=\"sketchybar --update\")\n  else\n    args=(--set $NAME drawing=$DRAWING icon=\"$ICON\" icon.color=$AQI_COLOR icon.font=\"Hack Nerd Font:Bold:14.0\" label=\"${TEMP}\u00b0\" label.drawing=on click_script=\"sketchybar --set weather popup.drawing=toggle\")\n  fi\n\n  if [[ $AQI_NUMBER -gt 100 ]]; then\n    args+=(--set aqi background.color=$AQI_COLOR label=$AQI_NUMBER drawing=$DRAWING)\n  else\n    args+=(--set aqi drawing=off)\n  fi\n\n  sketchybar \"${args[@]}\" >/dev/null\n}\n\nrender_popup() {\n  if [ \"$TEMP\" != \"\" ]; then\n    args=(--set weather.location label=\"$LOCATION\" icon=\"\ued00\"\n      --set weather.condition label=\"$CONDITION_TEXT\" icon=\"$ICON\"\n      --set weather.aqi label=\"$AQI_NUMBER ($AQI_DESCRIPTION)\" icon=\"\uefa7\" icon.color=\"$AQI_COLOR\" label.color=\"$AQI_COLOR\" click_script=\"sketchybar --set aqi background.color=$AQI_COLOR label=$AQI_NUMBER drawing=toggle\"\n      --set weather.precipitation label=\"$PRECIPITATION mm\" icon=\"\udb81\udd8c\"\n      --set weather.wind label=\"$WIND km/h $WIND_DIRECTION\" icon=\"\uef16\"\n      --set weather.humidity label=\"$HUMIDITY%\" icon=\"\udb81\udf8d\"\n      --set weather.update label=\"$LAST_UPDATED minutes ago\" icon=\"$ICON_REFRESH\" click_script=\"sketchybar --update\"\n      --set weather.openapp label=\"More Information\u2026\" icon=\"\uf0be\" click_script=\"open -a /System/Applications/Weather.app; sketchybar --set weather popup.drawing=off\")\n  else\n    args=(--set '/weather\\..*/' drawing=off)\n  fi\n\n  sketchybar \"${args[@]}\" >/dev/null\n}\n\nupdate() {\n  # API key from https://www.weatherapi.com/my/\n  HOME=\"/Users/pe8er\"\n  WEATHER_API_KEY=\"$(cat $HOME/.dotfiles/secrets/weather)\"\n  AQI_API_KEY=\"$(cat $HOME/.dotfiles/secrets/aqi)\"\n  CITY=\"Wroclaw, Poland\"\n  CITY_NAME=${CITY%%,*}\n  CITY=$(echo -n \"$CITY\" | perl -MURI::Escape -ne 'print uri_escape($_)')\n\n  # get city from IP, sometimes pretty inaccurate\n  # CITY=\"$(curl -s -m 5 ipinfo.io/loc)\"\n\n  if [ \"$CITY\" != \"\" ]; then\n    WEATHER_DATA=$(curl -s -m 5 \"http://api.weatherapi.com/v1/current.json?key=${WEATHER_API_KEY}&q=${CITY}\")\n    TEMP=$(echo $WEATHER_DATA | jq -r '.current.temp_c | floor')\n    LOCATION=$(echo $WEATHER_DATA | jq -r '.location.name' && echo ', ' && echo $WEATHER_DATA | jq -r '.location.country')\n    CONDITION=$(echo $WEATHER_DATA | jq -r '.current.condition.code')\n    CONDITION_TEXT=$(echo $WEATHER_DATA | jq -r '.current.condition.text')\n    PRECIPITATION=$(echo $WEATHER_DATA | jq -r '.current.precip_mm')\n    HUMIDITY=$(echo $WEATHER_DATA | jq -r '.current.humidity')\n    WIND=$(echo $WEATHER_DATA | jq -r '.current.wind_kph')\n    WIND_DIRECTION=$(echo $WEATHER_DATA | jq -r '.current.wind_dir')\n    IS_DAY=$(echo $WEATHER_DATA | jq -r '.current.is_day')\n    LAST_UPDATED_EPOCH=$(echo $WEATHER_DATA | jq -r '.current.last_updated_epoch')\n    AQI_DATA=$(curl -s -m 5 \"https://api.waqi.info/feed/${CITY_NAME}/?token=${AQI_API_KEY}\")\n    AQI_NUMBER=$(echo $AQI_DATA | jq -r '.data.aqi | floor')\n\n    CURRENT_EPOCH=$(date +%s)\n    DIFFERENCE_SECONDS=$((CURRENT_EPOCH - LAST_UPDATED_EPOCH))\n    LAST_UPDATED=$((DIFFERENCE_SECONDS / 60))\n\n    case \"$AQI_NUMBER\" in\n    [0-9] | [1-4][0-9] | 50)\n      AQI_DESCRIPTION=\"Good\"\n      AQI_COLOR=$(getcolor green)\n      ;;\n    [5-9][0-9] | 100)\n      AQI_DESCRIPTION=\"Moderate\"\n      AQI_COLOR=$(getcolor yellow)\n      ;;\n    1[0-4][0-9] | 150)\n      AQI_DESCRIPTION=\"Unhealthy for Sensitive Groups\"\n      AQI_COLOR=$(getcolor orange)\n      ;;\n    1[5-9][0-9] | 200)\n      AQI_DESCRIPTION=\"Unhealthy\"\n      AQI_COLOR=$(getcolor red)\n      ;;\n    2[0-9][0-9] | 300)\n      AQI_DESCRIPTION=\"Very Unhealthy\"\n      AQI_COLOR=$(getcolor purple)\n      ;;\n    3[0-9][0-9] | 500)\n      AQI_DESCRIPTION=\"Hazardous\"\n      AQI_COLOR=$(getcolor maroon)\n      ;;\n    *)\n      AQI_DESCRIPTION=\"Unknown\"\n      AQI_COLOR=$HIGHLIGHT\n      ;;\n    esac\n\n    [ \"$IS_DAY\" = \"1\" ] && ICON=${WEATHER_ICONS_DAY[$CONDITION]} || ICON=${WEATHER_ICONS_NIGHT[$CONDITION]}\n    args=()\n\n  fi\n  render_items\n  render_popup\n  \n}\n\npopup() {\n  sketchybar --set weather popup.drawing=\"$1\"\n}\n\ncase \"$SENDER\" in\n\"routine\" | \"forced\" | \"wifi_change\" | \"system_woke\")\n  update\n  ;;\n\"mouse.clicked\")\necho $SENDER $INFO\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin script for displaying weather information, including temperature, location, condition, precipitation, wind speed and direction, humidity, and air quality index (AQI). It also provides a popup with more detailed weather data and the option to open the built-in weather application.",
      "content_summary": "The script sources global styles, colors, and icons, defines weather icons for various conditions during the day and night, and defines functions for rendering items and popups. It updates the weather data using an API key, calculates the time since the last update, and sets the AQI color and description based on the AQI number. The script responds to various events, such as routine, forced, wifi_change, system_woke, and mouse.clicked, to update the weather information."
    },
    "plugins/pia.sh": {
      "path": "plugins/pia.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env bash\n\n# VPN=$(scutil --nc list | grep Connected | sed -E 's/.*\"(.*)\".*/\\1/')\n\nVPN_STATUS=$(/usr/local/bin/piactl get connectionstate)\n\nif [[ \"$VPN_STATUS\" == \"Connected\" ]]; then\n  sketchybar --set $NAME icon=\udbc0\udfa1 drawing=on\nelse\n  sketchybar --set $NAME drawing=off\nfi",
      "purpose": "This file is a SketchyBar plugin script that checks the status of a VPN connection using the piactl command and updates the SketchyBar's icon and drawing state accordingly.",
      "content_summary": "The script uses the piactl command to get the VPN connection state and checks if it is 'Connected'. If so, it sets the SketchyBar's icon to \udbc0\udfa1 and enables drawing. If not, it disables drawing."
    },
    "plugins/music/Cover-Default.png": {
      "path": "plugins/music/Cover-Default.png",
      "language": "unknown",
      "dependencies": [],
      "content": "PNG\n\u001a\n\u0000\u0000\u0000\nIHDR\u0000\u0000\u0001\u0000\u0000\u0001\b\u0006\u0000\u0000\u0000\u07ca\u0000\u0000\u0000\tpHYs\u0000\u0000\u000b\u0013\u0000\u0000\u000b\u0013\u0001\u0000\u0018\u0000\u0000\u0000\u0001sRGB\u0000\u001c\u0000\u0000\u0000\u0004gAMA\u0000\u0000\u000ba\u0005\u0000\u00015IDATx\u0001]5q\u05ebV8&&1\u0013\u0012bP\u0014\u0002\u0002\u0005\t.\u0005\u0017\\\u0000B\u0011W\u0004\u0010\u0011H\u0011o8\u0236b+Y\u057fgs|Kz5k\u07ba^{f??\u000b\u0018\"?\u007f\u07bfv\u001b>|_\u0003s\u0001\u000f\u072f_\u0005=c|1??\u0003\u0002\u001dc^?h\u0223x\u000e\u0015B\u0017\u000b@+>i*\u001f!\u001fX\u04e4Z{9\u001ar\u0191l?*<u7<\u001eS+\u001e8\u0006>UdZ\u03b4N+\u0011t|fo\u0578oo)\n\u0007\u04a0R?'\u0003\u0013\u007f+|p?\u000fZq\u0161r\u0011/q5_\u0001.\u0002;\u001c4\u0002\u0018'O\u001ad1x3Iq1x!\u001ehT7]\u05dc@\u000f\u045e&H4E_GO\u0016LR*\u0003C\u03b46GtG8c\u007fC?\u000f&kOuI&\u0015[^\u07cfZLpuBtB\u008cq$]5,q\u001eu>\u0005\ni8J\u0013\u0017W\u0004\tC\b\n'1\u0007T'\u0014 s=bs2:\u000fgif@&\u0011\"\u05d0S\u0011-rr$\u0014|ZcQ\u0006\u0585}p\u034bNi\n&/\f\u0012\u0004\u001577\u0004\"/:2\u022flZQ'l?eF?\u0013:\u0015`@R5\"HE!c.\u001a\u001a.Y/\u001a\u0012QN*4!\u01b1,1bQUP5\u0441.j\u04ed5\u0002\u0007\fa\u8386\u0004^a'\u0017P\u001cGNkr=2\b\u001cxs}C&\u000f>o1\u000f\u044c-6\u00125\u0011\u0015:\u0004a\u0015Ri\u000eA\u0004)&\u0015M-o?+GQi1B\u05c59i;\f8iT\u0004p4p\u0006\u0261p\u00022!\u02987\u001d.s\u03d49\u0005|\u0005\u05aan\u001cT\u000bF}@u!y<J\u0000\u0010\u0016h%^zQYAOC/s_\"P+p|w\n\b\u0018\u0013)|Xy\u0004\u007fF}n\u007f\f\bCf6?X\u0011R\u076d8\u0005_\u0017\u0006\u000b:c:5+hX\u0013\u001f\b\bS\u0007#8Mda\u0000\uae9fG\u000bR\u0011n\fN|\fK\u0013RN8{5`o\\/6|F,\u00021[l|\u0253-\u009b\u02b8qN1\u0011\u07d9Ob\u0012\u0018\u001co\u05f9\u0005\u078b\u001e:\u0010|\u0007I}\u001e35L8MOc;pK\"\u0355\u0540\u001aR*\u0013W4&W\u0014\u001a:[9\"\b&[\u0762+?N7;\u001f\u0589s\u000b}6v7\u0005\fS5Iv?ql\u023aw\u001dKw81G+.D\u001bS$}=~\u0001E\f\nLnoxS\u0015Aa\u000eeqv<\u0005\u0002P\u046b\u00b9\u00182Zy\u0014\u0011+OLB1#08Y\u0006\\:g~\u0010xuN}d\u001d\u03c0@K\u0005y\u0134SH(h\u000bN}D\u001fd<F9J\u001cQ\u0007s`\u03a9s9[)ZcOy\u391bF\u000e\n\u001eo\u0002-\u0011JuUZ\u034dBiM\u0016|qt\n[\u0018<\u007f@-u\u000ee{<Q\u0018Y)\u0425\\w_h\tq5R+P\u031f*.=\u0018]\u0564\u000e@h`2\u007f\u05ea\u05c9\u07cb2\u0010\n\u0000p?\t\u0013k\u0003bg)I!vm\u0001j\u000bWo\u01c5eui\"\u000bci\u0000\u0113s\u0015Ipjh\u0004\u0013\u00159\u001fV&\u0010\u0005\u007fO\u0473\u0006\u0015:\\c\u0220\u001fE\u0013/&A;9b.\u0018Q@JH:@|\bL\f\\\u001d\u0130k^\u05d7XM\u001e\u017e&!\u000e\u001c]W#\n{f\u0007^}\u0621YVcw7\u0381&\u0081\u0007c\u0014\u0018D@\u00180('\u0464`\b\u001aePONFDqTV\u0012L\u0002O\u0001a\tE;\"rK\u0018*|X\u0017N5\u0006\u0011!\u074c\u0018t\fn\u000e2SF8Hy\u0018\u0018'^`?Q\u0013PN\u0003? zj 3}\u0010L\\\u0014v(Vc&h\u001c\u0003yDy\u0018A\u0019-\u000e\u000fe\u0010\\\u0004y\u0013o\u0018?iQqX\u0014%\u0016[T\u001ceUy=\u00193\u0373wuN\u001d\u000fB\u1953|\u05d0Z*@?+b(4\u0011a\u0002'-__\u0000\u0013X{NyH\\\u0005\u0013%\bh\u000bYcM \u001eE&T\u007f9\u000b\tuN$BM \fMs:m@0R\u0010N\u00172q\u00a8K%`rnUC!\u001e*\u03aa\n>bT\u0003vm\u0003Vd\uca3b0\u0000y\u0012\u0004u=;*\u000esl/B.\u000e{t\u0015\u001ahC,;>\u001bN6wh\u001c\u0017c\u0006\u05ac!p\nzxN[OWoodJ'(Qaj2bq\n[90s\n%z\"\u0019c\u001a\u0521\u3e80v-| X$Kc\u0000DNy\u0002_s\u0006\u001cF\u0018E4A;^pep\f]/O8?k!s\u02d6\u0002ksJ\u0005\n\u0013NOc&\\'\u03af9_v'oo\u007f_?=\u0016\u0002\u0019Dd\u0002\u0006UQ&}0tCB4\u001e\u0014'\nP1&\n\t4q\u001aX-p\u052a~\f\u001d$>\u0013rJgd\u001dsX]\u0013\u0013n8it:h\u0019IX.\u0001'5H\u000e?\u000e89\u0004\u00120W\u0003\u0011P=k\u001evK\u001b_o\u007fG_\u02d0\t~DY0(b\u0013f\n\u04408R\u0007\u0179\u0018C\b\u0004-i*\\\u0013,v\u000b\u064c\u0019:\u0007\u017ccF>\u001d3X?LMGy~e\u04f5\u001ep4@[.\u7b77K:\tijN;y\u001bixq}\u0015=s~\u0000Hh?qb\u000eC\u001fH:\u001a\b3\u0013\\\u0006X!sR9\u0003ik\u000b/s_\u030fJ\u0018\u0015]W\u001es\u001a;5L\nX\u05cc!B\u001ek3M^4/ju\u001aDyrNY<<\u07f6;\u001b\u0018*\f'\n-ZU:\n3Pl\n.`\u0012BA T1\n39Z\u0006\u0018\u0018Aj\n\u0011c\u012f|\u001eX\u001d\n9\u0017k2/dL\u01ca\ny8|*^?8I\u001f:d*t$B:{y\u001a@\u0016u\u00064d!\u040cy\u02fbw_\u0010\u001fo\u04ea\"F\n,`2DS+R}K \u000f\u0002.8j\u001e9cqy<B\u001fQ!8W\u001bgtTN\u0013>o}\u0545\u001d|\u001c\u00155>>Cv\"\f21=[\f\u0019t7>;\u0003y]\\)sd\u010au%\u0011\u0006\u5475(v\u001bRQCoX \"{\fHeEm`\u007f\u007f\u007f#n-NC\u0011\b\u0010\u026az\u0018h\u001aWN@SU\u0005q\u0001\tT\u001d\u001dh\u0003\u0016\u0018\u007fWSYu#6\u001c:C\u001aT\u0017yH`\u0017 \u001342\u055d_oW\u05fau{bs^@vlyjXO#[:\u0010\u066a\u0003\u0007\u0007za.x\tXlw\u0000mcz\u001c\u007f/Q+1\u001588d\b.[|dN$\u0702O\u00137y7\u0018\u0004e)\u0017C\u0013 :\u0018QO\b\u000eZ=uN\u0005*\u0010NWzjdu: PDux\u001b=L[p=c?\u001dQ~K3\u00045\u000b\u0012\u000b9&0\u07da-:\u0012\u001eK:,\u0010g\u0019+7:w\u046b42ag/\nK\u0005\u0011!\b\ng71F)C\u0019\"\tV\n,5\u007f\u00b1r\u0004%f}u:)^\fkM\u001aTa`\u001cd:\u0752gY7?:Z387y(\u000e\u01d4+h,yj>3\u0003J\u1b71+}'@}L\u0019&(o\u007f\u007fLP%eT\u0000)Y\bW7^*{EsRX8<\u001a.\u001c\u001ctZ?>h\tX\u0004\f>\u0018@\u0010r\u0006^T_\u0006\f'\u0003\u0013&q/G;& F\u001fH6w6|\u026a==N<\tLN\u009f$so\u0006\u03fb\u001b\u00ccE\u0013`\u0002BO\fO\u001c\u001a<\u0326{Bu\u001a\u001a\u07ca-dLB\u0002DO\f$@\u0018TB\u0003ME50a8v\u0006\u046cS\u03242yrYiS}0,l&o'mbWq\u000e$\u001fv01d$\nCom\"<s7l4\"vd<\u007f/Hl\u0014\u0010\u000bRn\u0015h\u0018\u0015\u0005\u0018JNC\u000e\u0000\u02a6A\t.z\u000b\bQho~\"^QZ#.\u0000\u001a\u0007\u0248$\u00178~.19Z\u0006\u0003]A^\u001b\u000b6Cq[T.4&GK=Fo19\u04eb\u0003\u0010#\"u8\u001f$x?MH5\u0006n\u024bU \u0001\u0007\u0013\u0002XDa0D\u0222\u0004?mP\\>m2<g.b,4\nIb\u001a\u0003^w\u0000?.:V3\u001e\u000b\u001e};\u0006HG^_t1LFS\u015b22a\u001aX\u0249\u0000:9\u04b6^TuVoq\u0003GTrM`\n1o\u9c6e\u05d8\u7cad\u007f\u000f25x\u07cded\u0012#2\t\u0000c\b\u0019N90u\u0005`L\u001c\u00053*Si\u0005\\\u0018a<\u01c2@Y*=-]O2y\u001f\u0004\u0013]Ga\nDSiELe\u001e\u001es\n\u0007.\u000et\u000b-:\u0007Kpob/x\u0011U,j\u0017Vg\u0017TQ\u0013\u0006\u001ewga$\u0001{@\u007f\u007f\u040bq4\u0010j0^)xV\u0013\u0001\u0006\" `\u00f1\u001f8R\u0011/Nh\f>Yt\u0014D\u0017\u000bt#1\u001e-\u0016/\u07d8\u022f\u0007\u001f\b\f\u0005FN5Fwu]\u02a04m\u0003\u000f>um\u0017rl5#\u0002?NG\t)POd#!>\u0012X[&\u001a[\u007f\u0431\u0006oo2a2tZTC8?A\u0015nwAV\u000eEhhM*9y?i*\u000b%t\u000b;k29\u0016\u055eC\u007fe\u001d0sFV~i\u001cA<#\\\u0686l:P\u0017\u0016)IrA8BO\u05f1th1 \u00179\u0007\u0003\u0011bV_\u0012wjsC|%6\u0001Bwm'__l\n\u022a5.\u001cQ\u001c)\u0017%h\u000e+pJ\u0010:\u019a\u02a3\"\u0014v'9-8\u0014\b\u0015\u00161y^]x\u0019NDys\u0004__\b\u0016\u000eB\u0002\t?W8mul\b~\u04891\u0015]hA\u03b8\u001f\fs\u076dcWs\u0013\u0007\u0002R'=M;\u0019`c+\u0016m?i#0\b\u0011jb5e`*\u0007j^+U\u0004\u001eHeLUj\u0492|\u0011\u001d\nOZ-\u05df\u0010\"\u001aYV\u001d`\n\u0011$\n:k\u0006U9_:Zd\u001a:voT\u001ca9nm^w\u0004&\u0000\u0014]:-+k\u0013\u0652\u0007\u0003\u0006\u0724_xUP<\u007f/0E\u0011STN\u0315~aVP(0\u0016\u0019\b,\u001d\u03aa\u0003\u028bR9'\u0012*YuG\u0005\t\u0388\u0014\u00120Pp\u00128_Si\u0010,\u001a\u0012bWq\u00c70e]4\tL[I\u0430\u0013Y`{z6]vH\u0013FA\t\u0007\u000e\u0006(\u067c\u06b77I)nce\\7f\n\u00018\u044eU+(?\u0441\u0002\uc617;'j'\u01a0ZYh)\"4$/\u0006E  \u00191u\u0000cuzS\u0001\u001d\u0001t|Ax8\u079bn\u0001<s]\\t[ts\u075aySk\\78\u0015)^My!\u000b\u0013t\u000e\u7b07.j\u00159\u007fbS5\u0015\u000e\u0003\n+\u001b[C\bnc\u000f<vx\u0568m\u0001\u000f\u0153\u0007\t|p)\u001b\u0011\"\u0013Ciu\u001d\u00e7\u0013kxw\u00069\u0011S\u00079O\u52f3\u000ed\u0233\b\u001a,;ytx\t0j.rN\u0001sU\u0015#`X\u05a5\u0005/\u001aii7tv''\u000eJ\u007f<\u021b\u0003uA\b\u0002vUL`<\u0000`j\u0017'\u00132f\u0001<&\u001cT,a\u0018\u00e0+k-j5G\u001d479FeV\u0000\n\u0016rw=e)\n1w <'^eMAf q0F\u0001\u0019'\u007fZ3nqI\u0013Q;+^p{U:]%;\u036a\u0012j\bkFTJ0\u0277,E[B&\u000es\u0004@\u0015\u000b.1:q6\u001au\u0011]Gt\u0007V~>\u0004Q?p\u0012>@e\u001e@\u0013R\u0010|<5/o8\u0007\u001e*XcZ\u0002M\u0017w\u007fu3n\u0007|\u0015\u0019snk\u0002&\\<?_\u0117:K\u06d0@3\u000eo<?\u001fiYHl\u0014yTz\u001eh\u001a=\u000ex@@\u00168\u0018dM8:Y\u0004\u312e!R7/\u001c-|kciUN\u001a xVA9\n\u000f`zp\t\u0006\u0013ef]G|Z\u0002e\u0003#\u000ev08\u0007\u0003\n:n\u0004\u0002aW\f%9e\u0002\u007f\u0016Q\u000e\n1\u0011\u04e8L\u001c\u0018\t\n\u0015\nJ$^SH%FH%+\u000e9do\u0016jKp2&\\E>lIvQ\tv\u0007\u0621\u001b9\uffb8gC9\u0006V:1\u0706/C\u038eqS28\u0006\u0011`j\u000f|:S%:wf\u0007s\u001b\u0666\u0004\u0018R7F\t\u0016(\u001b\u0013Zq'j\u000byq;\u001b\n\u0000D)\u001c'\u06228a0\u0120C\u001cQz}#\u001d\u0018CH\u0000E@1\u00032\u000er\u0004(7QI0zi|3\u001e{R\u0019x\\hL\u0015iw\u001c\u0012v!\u0006\u000fQE3z\u03550\u0002PFZ\u0018NvjRc~\u0005\u0007=\u001c\u001f\u0018's])\u0006\t\u044bbq~\u001cn}\u001e'yQ\u000eT\u001c>/wLrAh~V.Jp\u0010\u0006\u007f\u0013<w\u00c7Et\u0159J+P\u01f6\u0004;Rq\u0007\u0015W]^Dn\u0012\u0018d\u001f\blN.WeRo_,$Q9AW\b\u001fi+\u001b,A[\u001a4Nr;\u0013jc7\u0015V\u0019\\\t.\u0012qX\u03e9Q\u0014h\u00107\u0015\ncUV\u02a1\u01cb\u0000Z\u0015\n\u001cc]Kn_\u000eHT_U&dEG<\u001a\u0012Da\\\u0019\u0015B`L\u1af3Qo#OQ\u0012\u0004+\tP\u001b\u0ddc_+yY\u0005\u0004\u0012Fx/\u007f{\u001b&\u0013FT\u077cQW\u000e:8~Tf6\u0019\u05627X6|{\u0013B\u03f2D\u0001I|P\u000fj]b5\u000bI\u000e%\u0013:+0^L\u001c!\u0750\u001e'\u068e\u0016y;h\u0014p\u0000g4<zv6\u01c6\u07d91\t6bK)\u007fw|SV{>=\u07c4\u0013qf9e\u0017LGS!qMN\u2772\u0016i\n0X/9ur\b#\f\u000e\u0680%$\u0000hpv\u001d\u0004A[w#y&\u0268A:\u1e54YN\u000eI}u\u0002|\u067c5S.KtM+\u001e\u0016k2\u0794,\u03ef'xB{?s\u001e\u0017\u0019\u0784\u001aDy1:\u0015X\u0005\u0002e}Q}\bn\u000b}\u2714\u001e\u001cB>#2\u0006\u001d\u049bZ\u0018XY\u0188Z8}\u00119WV\u0006\u007fSLC\u0007.\u001bV@\u001d9z\t\u0011I H\u001a)M\b5qO\u0019u\bWu2`\u000e\"YI$m\u0190\u001bM \u001ap@aR\u001c,X<\u000e)\u000bnB+q\u0010Y\u00110\u000e|8\u039e\u007fU\u0010J=\u0001!a\u0017\u0019t2TN*<d:*O\u03aeI\u0003\n\u001d2\u0401u\t>G0H\u0018-M9\"u\u0000\u001eXtO#M\u0018\u051b\\d9tCh.\u0013O\u007f\u0011NZ\u8b05'\u000f\u007f77\u0010Qb\u0005YD{Of\bE'O^2\u0019U:+\u000f\u0018P$p\u001e?Z\f8?I\u0015\u01eaeK8\u0013|\u000f\u0015D0?K;vVk\u0007+C]*I-E\nc\n6\u0643+\"sk \u000e?\u0002N\u0004N{tc\u0005\u000bcm|f\u0001\n\u000e\u0006]\u001c@)FDr0%PV\u000bd\u007f?p\u0001\u001b\u0018=8\u001a$Fe\bQ)C\u0014F\f2\u2f4a\u0010_q\u0293|k\u060fqYI\ucb2a\fJ\u001e\u0006`gUGS\u0017xL\u000eaXb\u04029\u0005\n8\u001a2QL\u0016\u4d73)<tA(\u0017\u02ecvkW\u0006n\u0012\u0019\u001a\n!XB@lR\u0007\u0001F<[!k\u0019'^\fYc#\u0016\u0019lo_\b\u007f\u04f0\u0002u5dF(\n#\u0001Vj\f\u786c2\u000f2\"6*J\u0001z\u0013H\u0182\u0003{\u076e1$\\\u0010]/\u0012/\u0015\u0003Zq$a)^@\\Q-$\u000fY=<O){1UpL:b!\u0015;*{\n\u0527\u001e\u001bq=\u0497BG\u0376i3\u007fb(\u0001\u00185\u000eZ\fvAy\u0011J5x\u0399ESy]\u0010\u001a1\u000f\u0019\u001f\u00124\u0002\u0002\u001c\u00131o\u000er9\u0011\u001fZ4\u0007>8\u000b+Y\u000b\\U\\o'\u007f]\u0002j\n\n\u0014D'\u000e\n\u0019`C`A\u000bSP;dG&i}\u001a\u001e\"jrhk7xz\u007f\u001fo\n\u0002)d<:\u01baE6+\u000e*3\u0011\u04c3\f\u000f\u0005tC\u0015W\u001cH99-}P5N\u0015m\u0006k%'*uiX@r\u022d\u0015fqfK>\u0017zsqv}C%q6WIi\u0004&\b9q$|Vm9\u0014\u0007\"G2)#Nd8:9\nm|n\u007fG/\u017f2xtpH\u0018g\\\u0004\u000f4\u00f72`p1\u0000Syj+\u00068\u0013|ON\bkk\u00e5\u0011YlE$\u000e%LH@*5Z\u0017kt\t'\\~\u0011X>)m\t~z-lwi3\u000f^>\u0017\u001ft\u000fIs\u0019*)5\u0000R6\u0010p\b\u001c$\"'G]P6Rj\u0011\u0004C.9egW]}M`3]./+t\u0019KawRS\u046dA\tB\u0017<\u001d@\u07fbk\u076doY_Ftu\u05090\u044eq\u03fch>ceyNzJ\\z2Ub\u01b9\n-\nSaI#*0&c\u0002\u04e8:Y\u0002\u0019?9:=&<\u001fB90Do\u0007\u052b\u000boCFt\u001cJ\u001dmvnnd1\u000bGF;\u059bA\u0736/\u000en6R\u0015\u0016v%E\\)6\u001e/\u5d44\u0017spsljo8>\u00170H0\u000e!DY*3a\"\u0005\u0019U}'\u001f^J:Y=\u0015Q~N2\u0019p4z\u0129l\n,+Q\u0666N\u0018J,\u03a8\u0003\u00012\u000e\u0019mQM|7\u4571dX\u0017\u0019$] _\u001b\u0005uz\n.^!8:gf7\u001b\u0376Y3u^~q\";Oimh-q\u007f?m\u007f_\u007fs\u14a1 '\u001d\n@\t\u0007Q!YN\u0002%9.[|K\u0019\u0015^\u0011Ph\u032eNyw#\u001e\u0191\u0011(\n\u075cCZoL\\\u0007\u000ee\t<x\u0017=\nu\ni\u0015\u0019\u001d\u001e*\u0004\u0002+A_dO=\u000e\u001eU^\f\t2p1\u0000tU[\u0015>s9K.VGD\u001f\u0006\u0452p\u0012|B\u001f\u007fG\u0007o\u01d60u\u0010\u0017O\u02a2ag0\u01b88\u001c\u007f\u0720\u0000*A:fe\u001b\u0721\u0000`8\u001b5:L(A\u0007b\n\u0006NC~\u06d8k\u0006U\u0018S1:\u001a\u0019\u0000&Nc\u0018q\u7b190J\u0000uK\u0017\u001dxl\u000ev\u0000!;>u\u000f;,\u023d(>&;m\u035a\u0006b;\u0341`\u007fO4_@\u0018\u000e\b{\nUx 8>i\u0001\u0014h\u0110\u0011FcP!aV\u001eqC@3[o`\u00071\u0205,\u0006+wUI\u0019454N\u06b9V\u000ep_7R'\u07a2\tZ\u000bz9\u000bv?qN>Uro\u001f\u0018S\u001d\u00af\u001a\u000f\u0007u\u0225\tN\ufc07)a4\u007f/\u0000*-\u0007c\u0014\u0012x5V_bV\u001f>\u0011\\\bn.>\u0015;)^\bxggSQcQ\u023b\ud805\udfddAqM\u07cdD\u0015k6U\u0001@9U@L=pqfuu.\u03a9:\u0420_\u00188W\u0551\u00164p};\u053fr\u0002)\u0000\u0015\u001f?\u007f\u0011\u0014qb|\u2d05FS]\u0002O:\u0574h4,9\u0016Bl\u00148UV\n\u046fZ5\u0018\u001dG7~v.pik\u001a\b:I AM&i7{S\u0018\u001d\u001f\u05fd\\C`/rY]G\\U\u0007\nz\u0014`\u00bf\u007f7!NFc\u0006BtX\u001bs\fy.\u0003\b@WUM\\Q\u0019%@\u0005v\u02b63\u00025\ft\u0017t\\\u28154W\u0006\u0006\u001a~N\u0262MAQxH?:n\u0004&B8\u0006Io\u049f6U\t/rw|!X\u0003^;@p*h\u001a5\u0011l\u001d2K\u00072\u001eHX\u0001F\u001e(Ds}\u001aNnXXTKz^!|tR_l\f:\u001e@\u0018\u001eu(#j\u001b\u000e\u0005y\n6\u0007e:h1L\u0005UpT\tB.E!\u0016:\u001c4\u0010(@!:C+<\u000fZv[\u0002x&\u0003=:\u0014\u0005dOY;\u001boh2`\u007f%wH8\u0019R\tqo\u000f\u0014?OzUC>N\u0019K\u0005ZgPaY5X\fP\u0017|Rt$\b!\u001f8]uuk:\u00059\u001a\u0019\u001e7\u07cb{m+[\u0012+\u0001%~5w\u0011JT\u001e\u0016\\Q\u00159\u0015\u007f-U\u001fCt\u0116\u0011 ;\u0019\u00c5\u001a\u00124m{WywK\u0005\u0003,\u7f4cRu'2N\u001d&/*-\u0016\u01f2Z\u0273'\"A\u0007RXwL\u0297\u0001#q8ur\tM\u001axn\u001c[\u0211AGYW$\u0019oJq\u001e\u0005+\\\\\u001fv`\u0411[\u0015\u0017:\u0012\u001bl]o/\u0003\nc\u001at\u03b0(\u0006(6G\nuK\u0017!B*H\f\u001avQ\u0793S\u0005|*R\u0011F\u0004-A#;\u001d (@\n\u0001\u000b\u0445\u0006\u001e0d`DA!C^6\u0003yk\f\u000er\fdqnI\u0016\u000f\n\\\u001cA\u0003Am9[ubH^\u001fbVS\u001ap5\u0015Y\u013b8\u007fR\u001fH:Y16D\u0001\u0010?M\t]q\bxX\u0019ZPA4\u0002Y9)0g3\u0005&\u045cS\np\u0018<q|l\\;7(\u0016't0,Td&`\u0016Q]xN\\\u0018?m\u0017\u0017P\u02b6\u0015\u001cN\u651bNG\u00ff\u00002\u017bd:7:1&7qG \u007f\u0013E*QpfM\u0005\n\u0010W%\u001eB.\u0006\u04c0/\\q.;\\\u0013PC~\u0017\u00075 k*t\u0004_.i5A4\u0019Y\u0011j\u0019\foC\u001cm\u0012\u0018\u001b\u001b\nN<qPl\u001c(KUy S\u0003['L.AVW;7;/m1:/\u007f\f\n,\nc\nF\u0007\t\t\u0002`UAQ]%\u0016\u000e!hL\u0287\u001aYg+S^\u01e2\u0005qp\u0281\t\u001aW\u0007xSv ki4\u0018\u0004@\u0004A\u0179N2\u0004`1OKC0:\u06aa\u035dQtTW\n\\Wy=Lj7~V\u0013mqa\f>-`E9iV\u0013RSu\u02a0\u007fmBM\u0015HE5\u02a3\u0013\u0005\u0015L\u0015\u0007/\u00abBXS\n\u0083c\nv's-\u001cyZ\udbe3\udc15qV\\`S^\fFDy9\u000e\\*k\f\u0000l :\u0013x+:K|N<\b*<B\u000eI1t\u064eakip1'q^5\u000fy&s\fz/\u07daE\u001a\b\u0016\u01ee\u0011`cX\u0017gV_oc.x\b]*\u0015O\n\u000f5r\u0004DdZ'\t\u0256\u052e\u0002\n\u0018_ht\u072d{N\u0003#\u0002Ot@\bO3\u001d^\tf\u0006>I5%X\u007fT|d\bM\u001f\\\u0012k7;\u001f>S\u001e\"\u000fom\u001dB\u0019\u0011O\"s\u0004bhL\u000718:\f\u042a2\u0013\u03e4\u0018\u001ag-f5\u0010y+\u001fCCRY>3.`\u0000wo\u000bP+?Yv1\u8931v8 \u00b3+.xk\n2\u00064p\fK\u0007\u000e\nVftGc\u007f~_\\;\u0464sMT`\u0018,\u831a\nt/r)\u000e\u02e0P\u0004\u0007\u0002W\u02bb\u0198s8+\u0730*A\u0018]p|\u0003<i$9O\u0017:\u001ac\u044dl~C!\u001d8\u029a\u0004gSt\u056cu\u0019!P\u0019l\u007faS\n|\u0003Z_h\u0019]R{s\u00129$:\u02f6?e]\u001e<lT\u0309\u0007R\u0010\ni%:\u0019nVc\u0013Q\u0019G|Zt(%\u029a*N\u0017t)/e\b\u0005-\n( \u001d+y'Dx>$\u0013^Zd^qrvik\u0017\f\u0019zA\u0013\u0474\u0006\u000f\fs\u00006J\u0004C\u0369ky\u0004j\u0013\\LL\u001aFUA;l\u001a3\u073fl<9\u07ee`$8N\u036b?6\u0005')\u0006.nc9Q\u0014P\f\u0018?-*\u0326m\u0011\u001cH\u0011Sse\u0007<\u079d%n\\#\u0007\n\u001a(\fCRA9\u0006Ak9e\u22f9\u001a\u00a4\"\u0001*/7k+aY&:*\u039aE~9\u0019\u007f:\u001b,+!\u001d\u001bp56\u000b6\u001awz%_{4o\u007f\u007fs~hO!\u000b\bXEN\u0007\u001c\u0018 n'\nsh@\u0019J`Q:UzPH\u0016\u0006\u0013:\u0004@,3\n\u001a3Y\u05dfr^qZ\u0004Ak\u0004X\n^\uffd6\u00048\u024bj\u001b\u06c6g)\u001a[\u0018t\u001a9(/?\u0004\u0012\u0000#oo'\u0639K=`M|_0\u0178\\D\u0007bU:S`G\u0005v8Y-U\u0015)/`U8\u03b9:\u0761\f\fNRh\u0014jp\u000eR\u06e0#\u0259#\n\u0012\u05135@u.\u0005Jkx7@~ipt\u0012l\u001aP6=x'\t\f\f\u0004Iwo\u0007\u0126\u0019XGPh|)N[SE\tyO\u069f\u02b7\u007f]\u007f{?\u007fS\u0331)\u00049\u001cp8{wg\u0007@\u0002\fDeX\ua64c,juIWjL%p=<(NVF\u001e\u0170~.79U\u0006\u000bos^\bV-\u0004*\f\u0130C\u001acg\u001a1\u0013\fm(CO8fXFMb\u00069!\u027ev=y'Wt\u0001\u0004x<mO\u07b6O\u007f\u0249~Vn\u0012d\u0010!V3\bDb\u001es\nbA-6<M\u0006J\u0010\u001eAbYU.^'sUaE\u0017K]\\N\u0016J:Fi\u001b\f0*Gw\u000ef/gj\u0004NfNxF\u0018g2p+\u03e4$\f|\b\u00f1>\u04f9~y_u&>o\u007fo\u007fZ2\u0018g\u0005`g\u0015'\u0007F(C\u0005TRY<+K%&gC-Z^1\u001c\"ZtG8f;\u0002\u001aK,\"(\u000eHG\u0018]o\u000b\u0015\u007fd\u0011=A:S\ne%M\n<&[\u001eE/wifmg:\u001eoo(\nHh,\u0270 b\u00125Cx\u001et`5g4\u00050#t..k\u001a\u0681\u02dffo5V\u0018\u0006\u0016V\u0019\u0013s }\fk*\bA.`u\u000eA\\|\u0014X=.^F^\u0643\u07dd?^,s/F6*'\\\u001dP*<\u03e8[nTq-\u007f\u000bk\u00a6`HG#V\f\u0011\u0004/+f\u0013\u021a39\u007fB!?n:*t]T\u000eU'zQW9J3)\u00174\u0003,shqNZ|N;:,\u05adM\u06b6\u007f\u007f3w\u007fR!\n+d\u0013\u0018,vYj\u0018\u0007M\n{i\n\u000en/jwQ\u0792%Nm6\u001bw<8N79,B^/\u019d\u000eSM>Fl\u0007{q8\u0011g\u0012uK\u0004Pgc\u0004\u001b\fZ\u0017)\u007f\u0007\u001e\u04e1rl sLg~*=\u001a\u0018l\nN>\f\u000bX` &UI%\u0681(U\u039cu2\nJ\u0002W<\u07be57Juf\u000b\u0007nT.\u0018_\u0006CsO\tP'\u001f\u03a6AN\u0007\u001dNz7|I.|l\u0013\"\b7u7yn\nbSxQuX\u03a0kv\u000fu\u0006;.\u0013\u007fo\u07e5\u07e02\u0012\"\u0013TRv\u000b#7h\"\u0006PPLH0Jh;\f\u0013B\u0016V3Un;\u01b88Z\u001aS)bd]@.\u0000^@&G\u0013H:f#m\u00004\u0006\u001ftE.\u000fd(\u0004}\u000e)\u001e K:5\n\u001b\u001c0M\u040b\u00061\u001c-}pPkJl,U\u0002\u0001\u0006x~\u039b `onO\u0286\u00bcY,*2\\\u001cglTVdN\u001d$M\u0005zgLB\u03cf&\\_}\u0011\u0007\u000e;\u0016<@\n5\\4.{\u001dqKp,\u0016su\u001b\u001a\u0014\u007f\u0315pj}zTDs\u0000P>2\u037a\u0004@\u001b(AL\u00023t9%O\u050b+6A6\n\u001a\u000e\u001b)<oo| +o\u0007'\u007fT6\u0005'oJ\u0014x\u0002iC\u0011Bb\\GK\u0005)\u07a10UeZsKZ\u0019$/?\u00107Qx3T\u0375CJV\"u3\u001a\u1a82\u0018#y+kg\u0017\u0010\nW8\fX\u0004b\u001a?j\u0013\u001dC\\S\u001d\u04d9!G\u0003=\f19u\u0004\u05e7`HYsON:\u007f\u0017ob \"8u\\@\u001a\u0001!%?;8Q\b=A_\u001a~cWNFT9\u03e5E\u000e^}v\u001a\u0468]i\u001a>l\u0000\n\u001b'@\u0006<=O(/5Av\n\u0000 :\u001eV:\u0019St<*l[\u0006H~[^?&?),\u7a62\u00064(-v\f\u0003I\u0007F58\\~2\u0121:\u0193Z:6\u0006+\u0367\u000e%^ioW:f\u001b>vOs-\u000bA]l\u007f\u007f\u0003y?I\\\u01c7]0 gmL\u0006jp^)s+jJ`M+an\u0005\u001a\u001doRyWe:}rJJz\bPR>N\u000e\u0013gEw\u056cc>u\u0001N\u3b31\u03c6/\u001f]\\kCe\u001d\n\u0012\u05c2Je\fmY`Nm\u0005{\u06c1\u023cn\u07d0NT\u0003\u000bV,\u0000083\u001c[LGx)Z\u0004d\u0014f?+\u07fd\u065e\u01f5\u0010\u000b\u07fa\u04e3\u000b\\!\u06a0\u0015\u0012\u0004b\\]j\u000e\u00143\fz=\t\u001c\u0013/\u0010A*\u0102\u02704-\u000b\noY\n\u0017I\no75WO\"4=6WY!Z8\u001eFJ\u0001M\u00175]\u00041/{e\u00119+`EH>Q6;p\u5714y5)i]\u0001\u0343O\bgn\fpl\u000e\u001eCp['K\u0011\u011c\u000eq9\u00040_\u0013kxv/\u0017N\u055f'iO)qdv\u007fo'7O~L\u0011&y\u0413!N\u050e\u0001\u001ap.*\u031a@]AM!jUIz/TeS\ns@\u0016\f\u000bM:!j\u0011\u0018>Z\t\u8102\ube46c\u0000C4az\b\u001e^\u001f\u001aX\\\t\u0243ckM\u035bpq=\u0006_b|\u0006\fv\u0273\u0327_\u001bh%f`@\u0017qXM^EK}]E_\u01b1\u007f\u007f^~%\u001c\u0003\u02e30J\u0007H:NC\u0006M\u0015cdTq\u001b\\\u0016\u007f@g\u0000&\u000e\u0002:SE\u0000,\u04a4/:\u00047T\u0016V\\N0Fc0<>\f\u001e\u00044:\u01fd9K\u001a_\u0011k3\u18cf>}ks?s_/\u007fb\u001f{|6\u0015gqsk\u6f3fbg\u0005VOKG=\u0007?\u007f\u001f\u007f\u007f7-H\u000e\u0011W9q\u0016kG!fU\u026e{,t7x,\u0002\u0018wdI\tZ{x&#6\u0018@\u056b\u001a\u0007cS\u0006`A\u0016Mi\u0018\u001eTz:M\u001cK,sT\\\u0235\u0385T~a*/\u0012D\u0012_\u0016*s'____{2\u07f0'\tb\u000e\u001f8qR??|;qS\u007f}\u0014\u04cfs\u03b5q\u0014h\u0017qE\u0017D\u07594u\u00047%k\u0668E\u0498g\u01d7NxeL\u00137\u0005c*oRnN#M\u001a(-F\u000e\u0013t9\u07a8b.JH\u0015\u0016\u0011Kg7?gPzZ\u0014#)\u014d!8tx\u0005&\u0007\n8\u04a1AcK3\u001d\u001f9\u078d}[2t\u001b6|.p/&8\u007f9m\t&^\u02208\"g#\"\u0007q\u03d0.\u2e83\u0015?dA(\u000f\\&\\\u001fR\u0007$7A'j2TfDG\"F\"\" +,+\u001fq]$,A\u0014]\fC\u0015FagU\"D\n`\u001c#\u001c`\u0004F\ng\b~f\u0007\u00032p&\u0017\u001ew~wv\"&W~W\u007fO8\u007f\u0681bBxxG(hnK.\u03b3Y\u0012>\\\u0013JQ:#o \u0015R\u0012Z\u001aP2q\u001e\u0118BH?p\u0012\u007fn\fd\u01634t\u021f\u001a\nX3'0-\u000ei\u0010*\u001eh\"wz].\u055e5<uxH: \u1d53\u0018\u06ff{{;oxp\u07d6\u0017\u007f\u03d88c\u0469\u0002U\\F/<k*\u001e\tXi<\u0013R,XSP\u00141\u0007v5nTF\u0011fAD\u00040jet\u0213\u0012vn\u0002\u488djK\ngqX\u0014\u000eb_%R\n/NYF#xV>\u04b8sYy\u05c148;\f:Vw85{oo^~\u001e}1qR .*\u0016\u0006CfN_VD8\u0012h^%ka~q-J(g,\nc\u000ez\u02310;\u0010\u0003\\\f{,d\u0004>u<\u0017n\\\u0019T\u0011\nS\u0006\t\u0007\u00175b\u0006?,_URZt`\u000bL:!&o\u0004\u0014TDbQ&\u0007\u07f727lxop{#\u0014U\u0005\u03d0mXZ 7b@w\u0014y\u001eW-$&.1\u0010\u04a1Os\ni2;\u001c$r\u000ep\nI4@X\u0440Bh@S(b~\u0004\u0005\n\u001e\fC*^h!`\u01f9wF\u000e3u=Q\u000e}\nrzB[DIP\n3y\u0001\u007f7\u007f6lxpW\u007fG{3\u001e%,[3\tQdy\u0007K\u0007bWr\n3W@p\u0429dR,1*\u0012\u001aC1r,\u0017s+@Gys%\u0121KyO$rgqMhk\u022cFv?/;(?\u00171\u0522$u\u001d0\"]e=mG\u001af:\nK@\u00cb\u0011\"\u0497d;o\"\u074eD??yc\u00019\u0007\u0668D.s4#\u0019g\u000fY4\u013a`n4M\u001cy;?AR\u07b6p\u001e>\u0011Q\u02a24\u001dklaD~cc)4\n]R\u0005&j}{BxTR\u001a6\u001eE\u001c@w:b.\u0016h\u0007\u000f\fG\u0015q,y\u0002^Ps\u0003od8hy4\u001ec]Mw\u00c6\f\u00079.}+\u0019\u0005\u03b4^\u0012=\u038bnTA\u001c\n|\u053f\u0014C\u0011<|{ZsLP(\u0018l\u044cr\u0017f\u0013!`g\u0012c\u0010`\u001e$ReJ5W:l.\u000eh\n4(iPe\u001e\u0015\u04a9\u0017]\u0012/\u0017XmZ\ub771S\u0007]B(\u00062\u00101=h0\u0011Ly\u03bfo\u0606\n_\u0014?y\u007f\u001aw_\u001f\u0006h\u021cf\u078d\u0010qyF|`N\u05f0\u001d(sBc'H[\bJTS\nlaH\u001cB\n\n)`\f\u00100\u000eb\u0018VCfNZ*bNf)#d/rtstU\u007f2\u0016:.Z\u0015\\\u001d{\u0604M\u0007\u07dd|\n_\u0014.\u0017_p\u001c!>\nq8WePu\u04b8/0\u001aY3D&_\u000f\u05f4ScN)b\u00197\tdJ*V()\u000bR\t14\u0016DyU3\u0016Y'\n]l\u000f)ThXM59\u06346jPtZ|z7\u05ecl\u0645\u029fz%.5\u000b>T/\"\u0015g>9w!I\t\u0213-(\"\u001fpI\u0539\u001e\u001f\u001dm\u0014\u0007\u0491\\Syk|V8FT&+\u000b]8~[0\n\"_Q\u001aZj6\u001a~\u0004n\u0003)C\nk\u001c\u001f\u01dd\u0013-h;^V\u0646\u000b+'K\u0682s*~g~f}\u0017\u0012ri;9ty<^\u0397%k7ge\u0017||K\ncH\u0006uXkx8\u0014uM\u0006%\u044e)z19K\u0015'GYg\u001ad!\u0010Cm(h\u5263+p8\u01bcP\u798eWE]Wu\u0016Z/\u0597e\u06f0\nxo\u000b\u049c1\u0019wtI?C\u001e\u02e2UMZi[##3zE\u001f_-li<_\u0014N\u0018E\u02b1hgS\u00050\f2\u001a@\u0016%+<Par\u066a\u0011\u0006HuoGk\u0017\u0002\u0005\u028a(\u02ceF+\u00079?k.\u0006\u03dfnE\u000b\u0017oMq)[m:\u0007}\u001eKqd\u000bF|%]x\\\u0010\u0019'0\nX][\u03b3\u0786\u000enj@$\u0001\u007f\u0006`b`\\f\tIu,\u0013XTt\u00029Y\b\"\u00074.RvQ(\\xuqh.tzy3Kt7/Xumw\f_p\u001c?\u0019\u000eKn\u86bceO\u001dGX5Q\uf0662Bn\ua603r\u0000v\u0010kID\u00161w}\u000e\u0393M\u0017\u001bqQ)<0\u00003iN[A<[7\u0016J*]7\u000fB\f\u000fTO0ko-KfC\u001c8+h5j\u0007\u016d1p:+%'nK\u0426?NwN\u0017K!m1t\u007f\u001a^tSr\u030b&\u0014wE\u000f\u557c\u0016_hQ<CDc\u0013)]'\"w}\u0012\u0012m7`\u0004cQ\u0001x2!D)\u001c \u0000\u001f\u00185RX\u0014\u001cT\u0000(vDV\u0004,dK\u000bmxp\\)ne\u0014'\u001acY\u0003\u001a!uz<,8*_\u0001\u001a\u000f\u007fC\u000f~\u0005KPg?\nEhqZ]Wl>+p3>o:F\u001fWk\fG\u001e+9b n\u0017\u0017\u001e\u001d:W6c<G\u4715!w('\\?D\u001b8y#)?:\n\u0017e#\\Y\u0019\bTp\u001evF\u0013q@\u0005VK! T>&hd~N\u0019:VcTYi\u0115g@,1U<\u000b\u0017A9e6\u001bQN\u000f\u000f=\u0010C\u0000(7Z\u0003\u001fO\u039e9Doq/u\n\u001bs\u51f8E G]\u000b\u0006,VW$>\u000b/^h\uf06e>DP>\u001b\u007fX\u007f&yO^^?uS\u0005(\u007fz.+X{-[?pM9(v(-\\>R\u001f@T&J\u001d8V\nQ\u0004fN9\u000fyN+ve\u0119@\u0005r:Y\u001fQ~\u001a\u0018`\b_C6G&:)m0p\u0001G\u001f2\u0004nz?pIl\n\u001fac>KBu,2\u001au9AQ\u0309\u0011t6J\\S\u000b\f\u00123t(\u0003\u0016{ag\u07f6\u007f!F\u01a0TB\u0641\u0014\u01a98=uv\n0|\u0012<*\u0014\u03ca\\\u001a<\u0019!ZGQ\u9109G;\fRa\u000bRo\u0003]pT=\u0013wy\n9\u000e.3 VI\u00107;\u0013\u04a9\u02b25\tV_}39KD\u0003\u0018\u0001Ri{\u001d/^!c\u038d+\u0005{b\u00194=\u0007B!+fHeM\f\u0016\u001c\u0579\u0017t*nuB%E9p&\u0003\u0002\u01d3:&\u001eQ\nqq\n\u00198asU*dfC$\u0007yx\u0002\u000bZ\u038c&\u262b`9\u001a{'vmM &\uc427u&\u0000xc\u001fO\ud4b2<?\f\u001c<n*8aa8\u071eC\u0018q\u0014\u0010\u0405R\u0012\u0010\u0016xM\u0015*&<>f\u0017N\u0003oa\u0011D\\\u06ebq\u0019[~\u0012DG\u0000\u0012\u001a\b/DsL\u001eA\u000fz(x#m%vB\u001b\\\u001by^~\u0000+<OQ=+zoo\u0011A+\u00fcX*\u0015mcP8\u01b481o#]VBr>8mY\u056f*4#\u0006RB\u9635\u06c9\u000bO:\u00068^)N\fe%\u0004+8/\u001a\u000eE'`\u007fjP$y\ud737\tZk\u2ee2e#R\u0014fe<\u0010s7\b\u01d8y-y:\u001d'\u000b!Ud\u001aX,*c\u001c\u000f\u0003\u0013:.o\u0017\u0006CA\n^=V\u00a7\\<<\u0472\uda18\udeaeO\u0005T\nc1O\u0004\u001c\u0005cy~m \u001a[\u0018<+\n}\u0188(z\u3c14o'\u000b4s\u01d8@-\u05ad\u07acc:~\u001dXC\u001dg\u0007\u007f/@(\u0007\u000f\u0264\u0014W\u0016YXqnW\f_98PV\u001b\u0015kcR^q1x m\u0012C\u0010kSk\u0400\u0005\u0014TF\u001es5F\u0005QJ[\fPx\u01b8\u04d8Yi\u06a4-\u000en/9qf~J)\u000b^\u0006W=ev1F^5<_7|o9c\u07b2So\u007f>5B*v.a)O`0i\t~\u001ff\u0000QIy\u001d\u000et\u0011v\u001at\u007f\u0003(@2\u0264F@\u0018\fT\u00d8's|gPqw\u0001\u0011\u001e!fh\u000b\u0006m\n;\u0012^WY5[\u00156g\u001e\u0014XT\u001fg\u0007\\;5dA\u0013\u001eMP\u000fhm\u000b7:\u000ef\u0010/\f8sRUsbH\u001c\u001d,Pq5}2S\u00168w|B\u0001( r\u000f\u001a^\u0002\u001a\\%D\u001fd5Ez\u00111\u0005a\t\u001e4Y\u001c\u00acl[\u0006\u000f~\u001a*o;\t\u0013'\u0011\u0004\u7fdc+;owd\u000f_8U~nfjc:\u0013r>.+\u0256fo$BB~V.\u0005\u0003S%F\u00e2\u001ftFi<\u0017\u0007po\u007f\u0011\u0010\u0003\u0018L@nQRK\u001cXV|\u000e\u001cW}g\u0010a\u0000 \u007fi8\u001fS !\u0013\u0232/\u02ec\"\u0012E!b\u001b/5E\u001e4*[s}\u00045\u0004\"\u000b\u0379\u0019&Egk\\!\u00013\u01cbSo] \u07f6\u078dPjxVQhVjq\u001cr@B\u000f<b6\u0011iPr\u001dCC2]\u0000!v0mi2_2e5{\\sZ)Bt\\uN\u05f9?E\u0013 tmvo\u00196{|CwQPs\u091dk+>Z;\ub3ad\u0006\u0018\u0199d~p-zMm]\uef30Bk\u01e5\u000fCB*PSG` \nM\nT\u000bc\nL] idf1W\u0019:]X12G,\u001aZe\u001d\u0012%^h\u00029\u0000\u0017\u0007Eu\u03c4\u007fmV\u05d7MG\u0001\u0002\f92R6i\u0016otCf{Cm__[D{>\u0695 r\u00f9A\u0531\u0550(h\u0006NIfe\u0018\ns#PX\u02ac\u01a1>Y,T^\u0003<Zt\u0017\\\u001a\u0006d\u001a\u01f8?\u0000rr~;Y>3+O:@tU\u001f0\u0004Z\u001d^\u0015hxyDN\u0013;|U\u001aH<%0c5\u007f\u001co\u007f\u007f|* Om\u0001YX8,\u000eg$r?(q\u0016\u001e [V95F&\b%_.\u0006\u0018\u000biX9\u00024}\u069eQ\u001e\nyL\u00f4k\b8\u4ecec|\u0016_\u0343\u000e5l~\u0005qL/r o\u0117l\u0011$\u0000\u0016\udaa6\udefc\u07dd|\f\u007f\u000bxO\u007f\u0017oUfc\b\u00193V$%4>shx\u0005D[4e1{wCH0aAp<\u0013p%<5i&>3t\u0017'5U\u0006[W%),\u0178;GQ\u0019\u0018\\$d%;\u0004,aB/h\u001fK\u0444WozXt\u001c\u07da\u05f0\n\u007f\u000e=\u0019_\u001a;\n\u072arh4\u001ds\u0013PAh2\u0018z\"~nMs^iA..l1\u0006\u001e/d><\u001d/jPme8Uf9\u0017\u0012\u001cO>l\u0004#'\u007f]\"{\u0766,|\t\u007f%\u001cYcvC\u0005\u0004$\u0012\u0014AW.Ub5PuU\u03dc<NrE\nBf-G`zo\u0006\u001f-\u0015^o_{w\u007f\u000b|\u034a.@ <\u0198\u00157F7X\u0018*`8mccExa0n\u0738\u0016\u0010uVB\b\u03ed\u0012L9WAt\u001aW/\nLzv\u0018P~O7D+c:\u00176:gn8\u000f9\u001e/yC9\\\u007fV-W9o\u0006i\\sy\\_,K V\u001dii\u0003>\u0003\u007f\u001b\u001d|`\u000b7\u0005R]0plU \u001cR}\u0428.:F\u0010|\u014e\\IEaC\u001a4Z\u000e\u000er\u0003_\u001b\u03d3Ou\u0019\u0001\u000e\u0015g74\u0018+?\u0005&@~mK\u001d\u007f4:\u0002\u05ca8\u000e\u0010\u0012xt\u0010=\u000b]?hwT6V~*%y\u001229Lv\u000bl\u0017n\u000f\u001do\u007f_~Alz@\u0019\u0000l5FA\u026c\u00180\u00105<bp[PF:*Y\n\u001ep\":\u0012\u001cC\u0007\u0018x]d\u01971\\\u0017\u001aU_\u038d>0\u000e_\u0497&,&\u0018d\u0014:\u0004\u0013\u001ecVk$|\u000eiK]:<\u001dNW~]+O^ys\u001d\u0014Q:\u05af\u001c x22X\u001a\u04ed\u0019Y=fV\u001eg\u007f'\u007f_\u0018\u0007VG\f%\u0017H^(\u015bnx,CE7CLk\"(rNCc?n\u001a`m\u0576ZN)P&91|\u0012d0P* c\bq\u00108pgt\u000e1`lHx^9kd0.\n\u001d2GqO`p9\u017fo\u0617e_E{?oT\u0004%gE{\u0001_\u001cf'\u04d8j\u044f~w\u0007?\u065f\u007fc@Kw#\u001d/fpm7/7k3_7iCx&\u05dd6YDME\u001ew/s?g\u0011+h\u0012J\u01d4\u0002V\u0013\u02e4\u0018aMZ\u0019\f\u061a:j5*\u0016\tZd9\u0017/xnW2\u007f\u07f4{\"'\n\u001b6\u07b9\u001f\u001f\t~|M\u0012g'n.J7)0^;RU,n%O.]u>\n<5]6F\u001bs\u058c)Y\u0006BWS(\n'X-\u0014|\u07bd`4\u0005+c,L\u000eOQ\u001cG\u001f\u0677-G'a\u00c6.\u001f_&vOe\u067ai]O~IM\u07b38t12h2b|\u001dS\u001eel%\u000fuuC!\u0013zs\u0004X\u001a5*lH\n\u007fQ[\u000fJY%vNr?=Y?\u0016\\\u0016+f_w\u007fwv\n_=\u007f\u001e\u001dOzb<>\u02564\"\u0017>fTWc,\u0702\u0015?JCW\u01b9/_*r\u0003a\u0004R\u001cO\t\u5783U\u001f\u000b$\u0010\u000f;\u0006P\u0017:yYv\u0002B>:\u0013+\u007f|kqW\no\u0000~x\u007f6kt9q7<<j\u0002s\u0014\u0003W|;\u0005elLaM>Z)+\u03cfy|Q3vx1q\u0014\u001c^9I\u0012q+HF!TV5+#t\u06c0\u001dFcUALXe\u02c17+5.bzC\u000eCrNc5T[\u001e*SF\u00181l2QhEy\u0435B5\u0018\u001aLs}H\u0007m\u0630m\u001b\u007f'X\u001c|\u0619z\u000fIS&\u0005Kw\\\u0730]\u0555\u0013G\u0003\u0019\u001cgf\u05f7\u001e\u0016]\u0331!\u0014+d-z-\u0000\u0015*I6\u024c\u0131e=VGL/\n\u00188dY\u0016\"\u0013TB4X1BijHSNTt\u0001\u001cV\u7273)q\u0017\u0006B\u000b~\u0293\u000f\u0003\u0186\n\u001b&\u0013\u007f\u001eE\u001e7y`$m.V\u0019\u001bX\u07cf\u0352\u0004}>{bGp\u7e50\ub518\u0007+0+5Hz7\b\u02ca)D9\u0011Q'z]\u0018\u001fos/2/8\u0018\u0003\u0014T\u0004eV+@1>)1';nKE[\u000b5\u0000Qh\u04115>}\u00173\u07f0OM\u0013#/qD\nnu\u001btq&ll\\Hhj6w;5w\u0481B4yV@h\nb\u0001Z<yv\u000b\u029a\u07a2>#\u033aD$RQ\u0001Tn\u017c=1q]@mE_>LWYp\fV\f/\u0012au$u\u00120Ve(Dn\u000e\u0538XlVD}YuogQo&1\\\u0399:bM8\u001e\f\t9j\"n0Tm.6\ub845\u00059\u03e2\u0014!y'qwOxw]\\\u001b\f^H\u0001Uh\ntyHf0(\u001aD2OQjSQ/q\u0498z\u00137Do.N<Q+^)s\u0006u\fBy7\u001b6\u001f\u007f&of\u06b4E8\u0770-@\u000f\u000fo\u00118\u06c6r[\u001a\u0014~K\u000e\u0011z\u001a<Z4\u007ffa|O$/\"CE8c\u001d3)\u000fZ]{S\u014e\u02b4\u0015JW\u001e\u0006[R\u0000._\u0011\u0013\u0012;\u001f\u0015]~vsE}\n\u001b\u001f\u07adH^m\u05a6j'\u001a\n\u0739?9\u0002!^\u01c7rz\u0017o\u0017\uea064l-K\u001fQ.|\u000e?5\u001a/FQ\u0017vQ!\u0290FTjcR\u000f\u0011jR\b+\u0015X\u0019,\u001c\u0002bnR4\f]@\u0017\u0013<.T\tc5\u001epV\n\u000f\u07a58\u001fm<J8\u0007\u0004DC,\u0007%,\u001b\u0005]Y\u000fi\f8\u02972u=s\u001bc%/k7\u0013Y $a_-b7wtx%sq\n>m\u0007\u8f09\u04ac\u33feap\u007f\u0011\bVmy^~;*4\u0006|\u00c6\u000b\u001ba?wZ$\u0518G4x\u0001j#sW\u37e4\u0000\u0018=\u0000\u0017\u0673\u0010\u0006\u03b7v|\u031bx\u060f>\n\u0003lRaQdk\u0104P*\u001b\u0001\u0007..!\u0004sC\u0007eb\u000b\u0019O/\u0018\">_\u001e.\u027b1F?Gc>7lxp~il\u012ah\n\u011b/Jy'x+t/\u01b9!?H'=\u001e(p)3\n\tmt\u0007c*\u001dVnI\u001cM\u001bJ\fjb(as>j;Er1%\u0001\u0448\"9.\u0014y\u001bt\u0619\u0327n\u0019\u00138\u0005N/\u001d,\u001b\u001f2.\u0005tR;\u000b<\u0006Y\u07f4\u0013`{\n\u001b6of\u001e_8\u0018dC\u0007t\tL\u0640vBGsP\u0019jiJ|\u001f\u007fN\u0003O\u0004\u0017<{ \b\u0001]^\u0016\u0013eL`[\u0013q#\u001a\t30%V;+\u0000n\nB+\u000ff\u001c\"1TYvQUR%f!TO3w\u000bJ5\u007f9m\u00c6/\u0000|+_yt\u0006l~\u001c0uf6=DfRDO\u067dbgJm#&P/\u0014<^\u001f/F<><\u0016fU\u007ft%D!'i\u0018X\u0334'R:\u02d0-hMCAa6\u0747.\u0006`gq\u001dP\u0014!QNi|1Z\u01393=GZ\n/\b(3\u0014gR1GW7l\u0002=\u07d3'\u007f~?>N\u0010sG\u0012F0La\u048d3F4}J#\u0013h ~(WviOsiXn\u01e2833-\u001e\u05d5w^vI~n:\u0012Hah%Qo:YvA\u0016 d\f\u9071+?qGz1!*\u001f\u0017*\f2\u0018>\u0015\u0004,.7\u001d;\u001e_l\u00c6\n_\f\u000e\u007f?w\u0006G'\tI&4y\u001d'&(\u001b\u001do\t2/\n34/qt{@odWIY\u0012I{6wIU~\u0005M\u001aUe;`\ud80b\udf210`Sh%C\u0015@\u00026'\"me\u0445'\u001d\u001aTJb\u001fW+\b\"i\u0010S9Vz>*\u0272T\u001cEg\u007fa\u00c6/\u0006\u007f6\u0162\u0001Bj\u001b1\u07af\u0006?x>;K\u75bf|ja1\u0014h#v9G j^\u001a:H7;)Y\u0007\nB$Sz{a\bUu{C\nb\u072b\u7bb5$p=\u04e3\u0017IRQuM*8Uq8\u03a4\u0017!\".4~l\u00c6\n_\fo\u007fGX44y(Mce\u0233vov\u001fc-;o/\u001d-c|9&?.;\u01f9V~Qm\bcN]XrRZ$\u000f_\u1022MZQt\u0016\u001euUWx_VR1:\u02b5s\u06e7\u001bm{7Pv\ntN\u0016\u00118^\u22cb\"%O\u007f\u007f+e\u0738\u0006wYR*>\u07a9\u0000Y4ht<L\n>^Q==8Z:Nx:\u001c+)[x]!>\u1e32O\u0003Pxx\u001fsF]U\u0012\u0416>\u0144\u0005/y=y/$=U6N?\u000b'e\u001c-_4]\u007fx4a|]n\u000b\u0277/T.3{\u0521b@J@Tu,\u063cx2b{b\u0017AYP_tR\u0018Bv\f\u0013/V,t|\u001fkG\u007fGS\u1d20\u0017\u000bl1\u007f$O\u0000\u00aa]L<<\u000b 63|\u0019P\u0017J7\u001a\u031e&\ngIUq\u0012be?|-x63{W_EWh\u0017~\u0015+z5\u000f6>|Z7O\u000b<D<\u007f&7It\u0015#ki~\u0012{\u001b#b.^=wE\u03d1\u000f\u0007\u001d|F\u0003\"\u0018\u07cfj>41t\n\u0010\u0014SBs/8\u033aIu@\u0011\u0007\u0016QqnC9>x!V\u000fQn\u0005p_\u0019n4rPtN2N3eQ\fJKh\u007fk\u0013\u03c9\u038e\u0011\u0004\u0012\u01f8np/.9q*^Qq61_\u007fMos\u07f3\u0006\u04ca8.$L;z\u07cas<6k;\u0182zWjahp6#\b(N8L9\u001aq\u0016\u0007:\u0013:C\u000b\u0385#\u0293vB^\u0012\u0002z7zw\u0245_];V\b>oN\u0002\u0016yo\n#aR\u0017Rp5QMq\"P\u0001\u01c5Z=\u001c]X\bFL\u000ezi2@8\t\u0013mcR\bH\u007fAG\u00026*ss>\t\u0004ZA?>281/yb4yY\u000eu_\u0006\fyT\u00127\u0001<)|s}\u079a\u0000:6:\u02b5\u0016@\u0011F6I0\f$\u0517\u0010<\u0001=q$\u0011>L\ua36do\u007f_\u0016\n!V\u0013R\\<*)\u0001a\\tt\u0017\f o\u0004c/\u0179t\u0011<+\u07c5,\brT9:|x\u000e\u00bfS<\u01b6h$f^Pf]n4q\n:\u06d4\u0011sqC\u00072\u04d255H\u0446\"(\u001dt\u0520\u00153tt\u0018L\t2\u022fo\u0001\u07a4t2\nP\n\u0431\u0012IU\f\u001exM\u0017J5FJx\u00185\u0017U0jG[8\u0007\u000e`\u001e\u0018p$j0-Ov\b:\u001b^ b\\_~')\u0004\u047dg\u001e)\u001d)'\u0002j\uea0c50Q\u00078\f;$\u04fa5Eer\u0004buh\u001bY\u0013%~8\t`m\u007f\u02b5T$.su</E0\u001a\u0674-\u0011.\n\u000e\u065dvVD8\u0013R{3Q\fFT\u0006`Q\u0016N\u001d yj\n!F7Qd/h]j\u9a2cj\u0002\u001chk\u0010-8w8a-}$r\u03b0\u000e\"s(\n|W>>\u05c9H#\u007fZ\u0013\u007f\u007fK\u001a\u000f\u0002\u05ea4\u001c\u001d.4HxU\u001b\u0001hm\n*b\u0002\u2a26^vM1^;kg5Ax~/$\u00028`SJ':M\u001e;\u0007W;;\u001bX\u0004\u0015 oGg\u07d0)-^O[nE\u0011s\u0007Pi]\tS\t\u000e+^o7o K\u0005DI\u0018\u0011:U\u0006Fk`\u0004\u000eNq\u02c5%\u001a\u001cls\u0005nq\u0018\u0018\u00071y\u0014\u0789Fk:N-\u000eq\n\u000f\u0019v3~l\u2eef\u000eb\u0005[4%:\u0007\u0016K\u01d4\u001a\u06d5\u0000ukv<H@Ko{\u0017k\u034dn/so5iq0HPD6\f\b\"1lR)V\u001d; 4\u0394(O\u000e:0&My4Wt*\u2243=\n\u0001({nx7,kBIgVz\u0539\u0006!M,\u001a\u0769\u00d3g\u0132\u048ds>\u001e\u0006bjB|\u0002i}\u047d\u0011\u0006I\u041e%c$o\u07a6S\u0007\u03cb\nFq\n\u001cU`A/\u06cd04\u00185@\u0010X0P]P\u000fJ$ E\u5179&\u000bB`<D\u001a<2\u0006I\u02c5&a`~n\u0339\u001dI\u05eeb'Y\u007fN6!\u000eMo!\u001bN|n{\u001aPgo8u4\u007f\u0013\u0016\u07f71q8#y1\u0019nQ$\u0016{ \u0340!4\u0018\u0005\u001fADH\u0007\"\u0012|\u0007)\u0012\u007f\u001e:}t\u0000c(\u06cd&\u000eu\u0004rXpG>M\u0002F\u001f\u0003x\nfz\u0017c%U*\u0005?!|ijF^y+1\u0005:\u06bafg\u01e07e\u001aorLE\\\u0005I\u000e\u001a7ct?\u001foI6{\u007f3Q:\u0019\u00a8CV \u000e0\u6f2e\u0015cx\u001a\u0018\"\u001fw1\u0016~.-\u00128%\u0006c\u0447S\nB;s\u001d#0pk3uN\u04ef*\u00121m\u001fR\u02830XGv\u0014\nOR5\u0003\u000e1\fA\u001b\u00035\u000eH\u0263y`W\u007fv\u001cd\u0019Ag}\f8qA7HK\u0012\u0689cko\u0004Sw70X.x1\u8319J\u0004*{y\u0003\u0018\u04673\u001b\f\b\u001f\n<\u0010DI!(1\u02b1,\u02b1\u0017\u03bb8\u0016k\u000eE\u0016\u0004q.\u000bHlka.\\\u06d2/ujF;*.\u0006\u000flu&/9FH\n[V\u001e|\n>C\u001ah\u04a6\u0006\u001fxJtpBG:9\u06ce_2\bD\nVp\u06f6o\u007f\u007f>8E*08\u0002bNA\u000f\u000e<mH\u0000\u0018|z1.1@jL!\b-:r>h\\mAY\u0018>t:,^2\u001a\u0006\u2723/`\u0010\n\u009aLNB^f,\u0005@\u0003\u0685T\u0019h<gu=ny0\u07ee\u0001&{\u0002\u0015eWQ\u00137s\u007f?l\u007fB\u1128sQ\u0014YdP\u0002\f\u0012\b,tB\f\t\u0007r\\y\u0485C`*u\u0006@~K\u0018wFl0@G}\u062c\":\u001b\u5479JEN\u001fNuw\tzk\u0005J\u0005cZIu`6WWAr^b?\\\u024f\b=a_\u02accVOo\u07d3<\u0016/09tR\u001es\u0016h$\u0013\u007fq<AV$JU2\u0006\u007f]d.\u0012\u0005g\u0010p*[7q\u0005|P/,I\u0000\u000b5`\u0019\u00170`-Vf\u001d\u007fz\u001e\u0000 tdc\\-fs\u00180\u012e'Q\u000e\u02d0e\u0003oJ:?\"?]Uyka,\u0018uRqUX.3;\u001d'\u0019#\u001d\u0003B\u0002Z_\u02bb[\u0503f\u060bel\u00032Ru]W\u0011P6v-\u000f=P\u00110\u0011\u03e6$|\tx_O\u024f84E\u0018k\u06fas< b+\u007f\u023c\u00e5;G\n\u000fZj(O`\u0005a86jT\u0164\u00b9\u0010@\u0019R=H4sE\u001c\u0003w<OAU:\u0001OW\"\u0018\fse\u001c\b\u001a>+`j{5\u0005\u01a7\u0006\\@k*&y6{k})\u03b1\u001d\u07e4wO\u0017*Vl\u0549M*d\u04bc\u007f\u0013MPE*]Uwq~,!\n7\u0001L_V)JX9^o:\u001d\u001d<GZ'j\u0018gT\u0012I\u02a0\u000e\u0015W\t$\u0003}[~\\S\u0018\"&x)7c?yLf\u000b-iy\u07e0R)\u032aJ;,z\u0007`N^\u0016\u0006\u00a7\u000fq'(\u001fN\u0001\u0005tVAqS*Ou\"\u0003b1yw C\u000e,A7%\u000f+\u0003z\n\u001ck2\\g\u0003!I@\u007f\u000b:\u001cE\u0001\u001d\"/U*u\u01c0O^3Y\u0001$/\u001a4q_qqMm\u0005)\u0011\u05dfl7:Qjer` \tP=b]%qi\u001c\u000e9PXW\u066fB\u001e8N!\u0010\u0004x\u00058\u0005b>HQ\u05aa\u000b5%\u0001%MSq2\u0589[\u0002wAp\u0410\u5ac0\u001e{cN\u0018ta\u000fLZ+dj\u007fZd4quL4g;P\u0006\\f=M\u0012:Lm\u0018\u001b\u007f;\nB)\u001c\u0011ySJ\f\\d#\u001ea\u001f*\u0007J\u0016\u0019\u0087w:9P\b$!\u0013|u\"j%\u001aipIPj dGd-\u0014<g6tC!i\u000b*\u02a0zt?`\u0005,2:F@\u000ftf\"\u0016^BqwH?0~<v\u0011\u0413NW~y&K\u007f?\u03bfW\u007f1s$J\u00071k\n\u0003\u0012\u0007\u001a\u00154\u0397\t\u00c5\u0004\u0005\u0005\u0014<^~kXA`\bx9\u001e2L\u0001oS-u8\u0010e\u000fZTrf_\u0497+_\u007f|l\u001f}\u001d2&,{+u\u0015\u05eeh\u0158\u055ck?\u06b1k<\u001bO?._s5\u0be4km5\t??c\u000f\u007f\u01ff\u007f~|=\u044f~wJ!w\u001f\n\u0005\u0132\u001cgZy^;\u0011WC:U=i4\u0016\u001bd\u000e\u0019]!\u0017yvo\u001a\u05d4W]\u0017O9\u01bc@1F\u0006\u000f\nrN\u0016%\u0016DV%K\u0002\u0181Vg\u0014EHI\u00a6\u0005\nhdv\n\u0012!]\u0014)\u0013=\u0418\n+]\u0017\u314f%E{_e8?\u07c6\n\u001b>?\u0017\u007f\t\u001f\u0017\u0770\u0011g?Nv\u007f|\u03d8>\u0010q\u001biuMn\ued49.G\u04f5k2& \u046a|K\tK\u0019H \u0680Nc5\\\u0014LC>7r *\u0017nR*)*\u0003:\u0002t\u0012\u0003(IU\u00170]\u0000$\u00147uW-H]\u0019,a\u073a]'yB\u02faMz\u000f\u0014q\u0012__3v\u001b6lx\u007f>\u007fE\fhb0I\tH$n7w\u0002\u0017Lv\uf10eC]0\u0011Yc4^)\u0368v\u0003,.DXQ;r%\u007fOI4C\u0015*W.&\u046e\u0016^Iw\u0357Nl\u0000N\u0000!\u0002_\u057fW[N\u001b6\u007f\u0002\u0011gY\\[CBqu\\z\u0015,p}x\u46adj7M\u0005O\u0004\u078c-H,\u0007\u0017 \u0005\u0011)\u0015T,\u0014v\\*j\u0139r\u001e$\u0003::eA5\u000b\u0017^\u0017cD\uf7f6a\u00c6]\u007fqn\u007f/>:\u0005&n\u05644l\ue127.\u007f_$`}>)t\u05e0-\u000bdoV9Xr\u0016/\u0016;\u007f\u00fdC-\u0005tr\u04c5OA\u073d<lJ\u0007k\\l^i\ub4c4:nc\u0013\u001c>?;v\u001576\n;o\u001b6l\u0014\u000f\u007fo\t~7$X\u0013:WXz.\n\"Eg%m\u007f\"\u000fq\\\u0521N\u02d1\u00a3iN\u0018[O\u0012\\}R\n\n}K\u001a|@\\o\u0019\u0015\u001cw\u0122C^\"\u5655M\u0002\"'+\u007fww\u001b6l{G\u007fGm\u0006f\u019b\u06ee\u01d8\u001bOnmj3\u001e4^es.;>dNs\u00199@\u01d0\u0006+\u000epL=5\u0011n'L'c6oY]\"\nQ\u0004\u02905\u00166M\u000f\u0011*>&>.~Dx.z\u0176\u0014'1[e\u06ff]\u0770a\u00c6\u000e\u000f\u000bV4\u001dg5Iy$\u001f]+\u01cdJt\u0019xr$)\u04b9lg3|J\u001e\\*)-c1i\u0013YU\u0011#\u0005A4\u007f/\u0001\u4152;bch~JaILE;)F4\u001e'O\u001b\u001f}\u0019cV\u07adzI\u0012~.Ft\u0018#=7l~K\uefa3w\u007fJc0)f$dM\u000b\u0005I\f\u05e6qje,\u0002G\u000b\u0006v\u001e\u0004b\u0006BB\u0002M\u000eqs\u00056\u00105\u000b\u01ec<(tI.\u000f)\u0010\u0013t\u04a7BHcs5T:jW]\u0018\u001aC3C\"#yQ\n\u001f\u06c6I!?^\n\u001b>5o}\u0014\u007f\u0007\u007f\u0602\u001865x\u00124\u001e\u0007:wI\u001dU\u001cP\u001a\u03a4I.\u000eO\u050eK\u0273/L7fU\u0010L8\u0015dGN\u0741\u01fb3\u0011\u0019\u0012/8;\u007fsE|\u001f[\u0016W\u001f\u001ck_*=;H)G\u0418W\fj\u007f\u001f1\u001c\u05e2\u0000\u0002I\u001b\u0006\u0017,j\u0017o\u0016_W\u001f\u007f\n\u001b~l@sP\u0012\u001d|Rf\u000e\u001e\u7e0cfT]\u0001n{ScrGCs4R92\u0001FB.?ig\u0463\u0005N\u0013Pj9$|w\u0002+0au\fze+Q\u04c2S1E\u0013\u001c\u0013>\u01fa\n\u0756\u05f8?p\u0003\u0698'Hw7lY=[\u029aX$\u001e\u001bl$e1w\th\u0698\u001e,\u0011%\u03876^j\u000f-phv\u0001\u001c2=SuCB\u001c\u05547} \u001c\u001bw,U:Pt\nSy% \fQT/8&dGuBE?\u027e\n\u001b~\u0012zuO;1A\u001bOi\u03bci\u0002\"bz+\u013b]`\u0011f1y3pIQ0o^\u001c\n\ftK,4\u0001B\u0018-\f{]\u001aA)g\nh6ShA\u0012gWFF?J+S\u0005Jv2\u07f0aO\u001aS\u01d9lp\u06754I\u0011C\u02eb$\u001a^yvo/\u001b\u001fib1\tui:w/\u0356\u03d8``W\"\u00161Y\u001a.:\u02402'0A<S`n\u000bs|cBLS)~y5)\u0019'e^4UV1\u007f7}9n`\n=\n\u001b6!'\u0019Y\u016blVylucl\u001fF\u001c}\u043f>])?Z\u0718\u0014\u001d\u7ae6w\u00009Q(\t~\u0001y[}DrO<\u0001Je\u0013\u0016'd;\u007f\b\"I\u0005\u05df<01r\u0153\u000ez!>\u0016[\u001f9$7\u000ff,o\u007f~wa\u00c6\n?\n?~\u007f\u0002$Es{R\u0395D\u0004@wMq\u0012\u0016q\u064aoy@M&?I\u0091/Yc>d,Mz>r\u001d\u001f\u001e;\u001d70 v$X\nI\u6fda\u0016g%`\u001c\u0002\u0018\u001cO.\u0019w\u0004LIU?1_\u001f\f\u0019I7.;T&m!\u001f\u0012}o\u037fi\u001b6l\u04c4\u07c2w[5~8\u06de%Evq\nyD\ud327-\u000e\u000fl\u0005~)qEa\u001a^c\u007f-K\u0007Y\u0016A8\u0013v6\u001e\u001dzn,OI=`y\u001dD8m:8Y\u0004X/\u0017\u027a\u0005?0\u001c\u0006v0C:uO?J6\fO|\u000e?Ga\u00c6\n?mG\u03ed\u0003H%A\u04a43\u001275.a|w6q![^d/O\u0013\u001f`P0O@9kvl\tlD;sn{.\u000f\u001alS1?_:.Q8\u001f\u0011OJ\u0376\n\u0012\u06a1l\u001f\u0006XdS\u0016!|0\u001e=@8/%\u001b6l\u0016^CW1H|SPf\u06d9\u034d$)2\u0013eqHVr\u0017\u00134`p\u0241CV7\u043cXd\u0006\u001bt;|\\i;ZheQ\u056e\u0553\u02d6aA\nb8\u0011\u0006Hr.rhS\u0010EeQV\n\u001b>oo'41\n&Y\u001b1\u054c.}:n\u07d5\u000f{dQea\"fqu)W^O\u0010\u0347ZX(yv\u04a8(tJ \u0004X\u0012JihV\u001fzX\u0001'\u041cuql\u000f5;8|\u001fP\n\u001b>o\u01e1{<=\u0002%/L\u00176&eQq;\u0015\u0019W#=\u0003{[c|[\bXMq]R\u001aL\u0298!&r!\u001b\u0014\u0012M/zy\u0004([;1o06p,\u0014:c\u007f&wttvwa\u00c6\u0002\u0019\u0010\u001f|vr^$\"A\u0002s1g\\2k_mc2^>\u001cY-?ht:~EG,\u0015\u0539!v%o8[\u001cv\u05dbb@%hduQv\u0000\u001a)\b\t{V;\u07f0a[{<+\u007f\u000fG\\C\"2;6F\u0354\u000bN4l;f\u0015)mnc\u0011\u001d\u000f$\u0007G\u000f\u0006N\u0003\t~\u07bb^vR!\u0019\u0005b{\u04e4=u$\\i{1{0S:\u0019\u03a2\u0018h\u000fP?\fa\u00c6\no\t{S2t$=?\u001ac\u000e\u0438;w`%7\u0014z \u00196S;]\"O\u06f6\u0002;\\\u0018uW\u001fg\u04640j ,.\u0013_*\u000e\n3\nIp.`Z\u0005~\u0007/!<|?A\ufc68DV'\u001fG\u0012\u07b0a\u00c67\u0003G\u001f=\u0017<?-vm-F&{\u0013\u001fP3#M;M,'\u000bX03\u0005Op~jN>'\u06fc:>u~1.a0@iq=+~\u0004#'\u0015L`ln=4\u0005#jE\u00180\u001e;>]~\u00038dO\u0013[\u0015)\u00032D6l\u0630-\u01fb<\u1d7eU(Ecx\u0011\u001ae\u000b\u06acyk'\u0007F\u0314\u0544\u0015\u000b\u007fW\u03d4ME!).n8b~X\u001d:+_\u007f\\oC=S\u0264;yi\u0001\u0005jX\u0014|\u0019\u0004\u001d\u02a4a>\u01cdJ\u0740\u0174\u9980\u0227I7l\u0630\u02af\u0424SO:RI4l-\u001dsK%1\u01bdN^\u001b6&wLGC\u0012Qw\u0007\u03d0M(tWUt[1H\f::\u0000Q\u018egz\"\u073d\u043f\u0014\u0004q\u0787PfY9\u0014\u0017Sm\u00046Ml*0Q\"Vy\u0012eK\u001er_:p\u001d\u000f\u0007p-D^^^v\n\u001b,}o5k\\w\b\u0649\u5e4c^\u007f\n\u0773. WcLwn'\u06d2w\\\u9675;\u0011\u0001\u0019_|m*\u00028\u0015\u001b\u0006|\n1v\u0228V\u0016\u3fb9V <|~\u0550b0BZ\u0015%9^*\u02adcY!\u0017dx[\u0371\u000fl\u0630-u_W8\u0016Z[{|\u06f3V@r#g\u0729\\o\u0001OM&\u007f-8R7y\u0002`2N\u001d9gwYL\u077f\u001aA\\\u0712X;I$Ft\u0003t\u000fu\u0018\n\u000f\u0005\u0001'*.]@Bv\u0004R\u0002tR\f 5h\u00127l\u000ehw]\ueb4eC:S>\u0014j\u0006^{\nV4KqG3w[C,s]D\u0002\u0005yU\fh\u0005GR\u0004o\u0016&tXj\u0015`e\u05e93\u0016[0Ag?\u0010a\u00c6\u000e(\u053dvA\nadS_}nl3\u05facm\u0789GyPxVD/V6\u0303T\u0013\u0000`\u0006K\\\fsA,h\u00041\u0002$8\u001e\u0793VQ\u001e\u0018DG_\u0017c\u001a7lS,RB\u05cc\u0005\u0013T\u000fxmm_wG>kAhqtcVyi:\u007fU-\u007f*7N\u07e2jJ\u0253BrL\u0005{z!b>a4*Sf%\u0001B?o\u001b\u0741O'&S\u001b6l\u001e\u02f03N\u000fp}%\\v\u001d\u0672A\u0524\"f~9`+`\u9787Xb\u001e\u00024Ix\\\u0003\u007fE;A\u00169\u000e*P(>$Ge)#\u0005.Fe\u02f9lC\u000b\u0014%\u001e4IuR\u077e)O<m,YSd\u0012O\u001e>\b\u0122@q\u007fqIw\n6l\u0630s{\u0774\u034d{}M\u0388Z\fc?i\u02c4\u001d^\u001f<x}M\u0018+;\u000bmp\u001c+o\n!\u0018y\u000b)\u0014X\u0000\u0012u[\u0006L\u07ba\u0014F!dPv\t\u0011\u0007cv\u00117\u0756gg>&z\u0007\u00d9\u0016 bd?8|6l\u0630=@YyH<jIZ\u0013]g;4wyG\u03e9my!i\u0011g0K\u001e`n)7@r\fu1$\u0019\u056fLj\u00a4\u02df\u0013T(\u6b30X$>(Lc\u0000\u07f2\u001d|\"&Bhw\u0005\u000b\u0402\u001cV\u012d[n\u07f0a{\u001fkA\\}@]ey4\u017c+{\\q\u06dc\u0011\u076e15XI5\u0326#O\u0714glQ1^M/ )\u0015\u001c?R6]ms\b\u01ed(/\tw\u0737q,\u000f\u0210\u06faFq1\u0016|\u007f]m\u00c6\n\u0005\u0001\u0478\u0016Yc\f\u062cM\u0740C\u0017Vl8'\u0395B\u0003\u05e3gXDBf4\u009cP\u000fQ\u001bI/_\u0007n\u001f[V\u0005toi*2]\u0322$F o\u000e\u0162BT)\n\u001fo\t}\u00c6\n\u0005#!!\u0018\u001cG6x[!M\u03b3\u0005?m\u0017.\u025fk\n|\u0013MkGkHs9#whlYv62\u001c\u001d%<J+4y\u007fQT!\u075cx~\u000e\u007f5Fys^h\u001c\u0002^FC|a\u00c6\u0002\u0006Dsi\u000e\u0005\u0002M\u050f\u000fCx\u022fb oX\u001enAH1\u0007h^^:^]v5\u000f?(9f3L\u0011Cf\u0000e\u001e\bOD\u0728K\u0018YU\u001f\u0002}I!\u001a\u0011v^G_l_@\u0013\n\u001b\u0013hdcm;\u0005j4J\u0013\u001e\u0019U>\u00ef\u00122\\ OyY\u0018^\u5f70Fo\u0017 \ue85b\u007f\u0013=d=\u001eqT#Q'\u0017rE(ECn`2O\u0017|E5>b\t-\u0003\u001fj|\u0019t$a'\n\u001b6\u0017\u01eb&\u000f\f\u0418\\ro<\u0007&\\InMlUgC\u0018u;oh.\u0017\u0019#p\u0797_\u0016N\u0004X\u001b\\)V6\u0003q\u0017c\u0000S1_&T7U{r.\u0016|EQLE[7l^\u001e\u0016\tv[:\u0007(\u0462{U{P\\Xl?V+yH\u06b7.\u06c93\"\\\u001e\u001fu\u00140\"\u0007\u0017hw>hB#\u0003\u0012\u001dk3\u0014\u001b}59\u001ds\u03667uX@\u0007\u001dkd\u0770a\u00c6w\f]'PSr%\u056b8qsyz<\u01bc<\u001aH*?/J\u03d7T.\u0016\u000b0\u001e:f\u001d%1\u0017\u0005=\u0006\u001b}\\&n>y8Z@,\u001ab>\u0015\u0010?{Q&6\u001d|;\u0001\u0011/9ua\u00c6\n\f4'h\u0012zg411F3{G.HbI\"\u0019G\u0003&5\u035ct7Am\u0004M\u0013ruwKN\u001b\u007f\u0015cMf;\u000b\u000e|\u0007OqPBF\u0005r+?RG\u0003Z>hu`\u00181?Y\u0018\u00108.C\u0017Y%v4\u001b#vd\u00c6\n\u001b\u000b8\u0014W\u4eedo=\u000e$2R\u0735\u0011cpn\u02fc\u0018d\u000eOn\u001b1tZ@@Q\fD-zaN\u0002<K\u001eD\n\u061dS\\\u0632\",\u0007c.\u0015F\u001evr^8\"\ua4d6Z\u0014Lqv \u027b5*-bs\n\u001b\u0017D\u0771\\b\\]Ex\f\u0011\u001am#\u0019r/\u0005l/cf,sVx\u0011G^\u00a6\\cKyR\u001cn}\u078d$9e|r\u000b.\u007f *\u0015V*T\n_v\u07fb\u0012\u02ab\u0000Yn7?hu:\u0670a\u00c6\u0006F\u016c9N\u01d87WPVkbrGg\n\u0004@=dLYx}3oq\u000f\u0007\u02c6>wku'^\u001f1&nt\u0381m\bvG\u001c\u001b#\u0019-\u0005h\ne\u06ddE3\u001e}1`5a\u00c6\n\t$3\u001ffN\u001aX*]\u001b/=K\u001a)]</$\u0003zxx\n(m;;iGM[\u001bV\u0004\u0013}0wzD*$&\u0015S24Um\ucf0f8\u000b\u0002>B+Kq\u0000\u007fR0awn6l\u0630\u0740$n3lz\u0005lw?q\u04baq\u0017|d\u59613\u077d\"\u0001m6S|wB\u0010(\tf2\u000bz\u0015\u001f\u001cB7!\nE0^}tb#y\u0002Yg%kQ\u0017e6l\u000f\u007fC?w\u001d\u007f>\u05ffu\f'x{=j\u001bH6>zs_~\u0019\u0019EGM%\"vKrr^%\u013c{\\|\u007f@_,,*\u0007\u001dw&\u0007\u001eo2'\u007f\u001ch\u0017\u0015\u001eS\u0005z(|>\u0227\u7527P\u0019D\n\u001bpO\u011d\t\u06df\u025fgn\u001b\u000f<XM\u0012/\u0013b[\u0272\u0015c&\u000bC]\u000eL6\u0004scc~\u0017[f/\fg_i\t9d>u_\u000fP\u0006\u0004\u001eP6\u0014\u0011^@4Y|[b\u00c6w\t}\u007f/\u001f~OD}O\u001b_\u0005Wj\u001b>\u001cr%]+\tq\u025c:+)]@3\u0014\nO\u001c^|\u0014=Ll}+\u0007pU\u01eb\u0013Q&% +Fw\u0017\u077dV:B\u06af\u0012nk4^\u001fx\u0019\u0006\u0005!\u000b}t\u00140U\no\t8y?>\u000fO?\u0007\u007f\u06c6\u0005M\nn8}26\u03f9\u007f6l7\u000el&a_~-y+v\u04df_?m\u0002<\u0007J\u0001\u0012U]\u0001)\u007f9^\u0011+JswU,9h\u001eVKE\u001c\u001e\"j}t:\u0016\n,m|\u07fdy\u0000\u001d\u000bS8*c7\u0090Fa[{J'Y\u01f4vq@c6L[B\u049bnKj~\\w\u007f[f={I\u0018W]|{?\u07db\u000fMIrROo\u0005\u007fe$\u000f\n_\u0004\u0019?`](\u0004ub\f2g\u0203g]5\u00143sE#\u00037O\u001a\"XD\u0007R\b\u0000o@:x\u00c6\u000b\t;}Gcz;#hn'.\u0005 X[,o\uda11\ude75\u000f0+\u0006WvK\u030b>p\u0553\u0016!S\u0015Q$C\u0001B:QoS\u0015\u0006#b8&S(C\u0005,A%\u0017Z~h S\ud8c0\udd62>N\u001b\u0000\u07373\u001fZw>B\u001b\u000f L\n$%\u007f*\u0018\u9495nWljb\u057cs;\u0007BIScy%C^2Euqgk!\u03dds9x\u001a*\u071f?4-\u001cEJ)5\u000ei\u00150Q7JaO\u0012L=\u000b\u000b\u001e\u001f& sx\u0017W\u0366?4Lh\nj\u0006^S%_m\u0000Jr^f\n7}\u0017%F\u0007[9U%,\\\u000beJ\u0005\u0011A\n\n\u007f9J\u00061n127J\u001d\fjW\u027bi\u00c6\u001f\u001bw>\nom{\u001aj<\u9213Z\u0000\u0014{l{E~u}\n~k\nKI\u0003\u063b-;\u06fc\u0002b\u001dd\u001dgq\\\u0005\u064a\u001e\f\u0017cV[O\u0015c(])w{?g\tmiy\u007f|l\u0250r\u001d7\u0004!p\u001a\u0195d.\u05e7vAk-~*\u0017{'9aq=\u0019S\u0013G1xm\u03f9X/}\u0005H:!\u0003IiR:v,\u0010]7\u000f\u0019?\u0017m;Mc\u001dKf\u02d7\u04f4*U\u021f\u000b0\u0002_m\u05cc\u0670\u007f\u007f-vCw\u0014\u0017}Mw\u0003f\u0018{\u000f}\u000e|ve\u000f\t\u0006\u90a7q\fI\u001d\u0013]F;\u0002Z\u001cH3\u00154\u0017&,,nn6d~\u001fo\u001aK58cP\nIOXhVO _aJWlS:;N.8l\u00c6\u0012W*_\ua489\\\u0016~V\u007f\u00fb^\u001dk\u007f\"\u0016eK:[\u04ceNq'\u0013\u0e55\u001a1='|O\u0015\u001dlv;\u0131}g\u0013\u0007\u0002W$Q\u0015\u000fF\u0013\u05e7\\\u0016L\u0011\u0003f!8K0\u00b5.\u0016\u07b4+`u\u018e\u001fM;\u0003\b\u06d0C_f-t,\f\u0002V\u0018|\u15cfzI\u067e\u001e@@w0m\u02bbE&\u0015z\nM\u0373(5)Z\u000b/3vlu.\u00175ji\u0016CZ`mdp\\T\u0097[\u001dT`l\u00fcj\u0004\u0007$\"\u001a\u055a**\u000fA\u001d6|&p\u000f\u0001~Vv\u0010\u001dv\u007f\u001b~`wZ-D\u0014}\u0004cg3\u025b\u000f-\n!w:bCVw*\u00176IW\u0010QvC#?\u001aR\u0004b0\u04d5\ua778-HS\u0017*^~R3\u0019?=SCcM+\f>|sk$:U\u001b6|Z8O\u007fc^o7\u001b(q\u0391\u0010GLN\u06f9*\u0004c^\"q\u000e8Y,2IG\u0000)\u009dqa.\u0155\u0019&\u9a2f|={\u0004\u012a\t}{j~WT\u06da4H.J\u0007t>p\u0005M6M\u0002Y\u001er?gS\u0003R\u06d9}\u00e7\u001fG@m\u0352D}z\no\u001e\"['%i\u077f'|o\u0000i<u2|\u0011yN@cQtv'YYt-\u0005F\u0010n\u0012\u007f\f\u000e\u0007\u000bTa\u0016M\u0017\u0004\u0000Uv\u0015AA&k\u001f8S^:\u0019obY\u0014Ma+X\u0005\n\u001b^\u000bQe^fg\n\u007fCIiSM7l6\u0013u\u06fcg~=k'\u06b99\u000b\u0016#z U\u001c]+O1\u0016=)/JK_-)u@\"\u0016+k\u037dqYVHTS*)\n h\nt\u001d-y8+7l1\u0296\u001c$vOom\u00fb\u0000/Mug<@\u00161{v~SD\u000e\u04d8~\tkr[\u0003M\u0011r]N&D\"/}a,)Y1\u0105\n\u07e7\u0001Y\u0014\u0006.!2Lb@HBkd}\n\u000e^\u001b>CH[\u0002;U\u0013\u001b>8Gir-b8\u0002@O\u007f\u0016)\u1609V\u001e\u8e9bd}bP\u001c4c\u00eagT\"T\u0641\u000b$W\u00061NU\u0019EQx-\u00164-E2pHs\u00c6\u0000pq\u001cl-\nWB\u001fvv8[v\u0326?|AGkhx\u0018\t7&,v^`V_cL,'>N&KDG%T8gu\u0015V\u0017[\u0000o0k+|v\u0089yaBT\u000688-hm\u0019_)s\u001b\n\u0003\"C\u001bE,e&G\u000es\u0018V\u0014\u0013G+<\u0013QwRH\n3\u001d&'N~\u000fy\u010aD\t\u02a0 ^F\u00150y]_Z\u000bAV(_\u000e)I\u0012\u001f8\u001ac\u001d6|f\u0010A\u0011\u00188\u07b6ox]\\w\u001f||\u001cSF#0\u000fC\u001f\u0007NL\u001a!\u0016\u0014\u001a\u001fi!7OwLr\u0013\n6\u001f\u0005R\u00174Z9nq>\u0016N[)\u0007\n\u0003\b\u0014\u000b]:;\u001eY o\u0011\u0000\\.\u000eD;\u0017\u001d2\u000e]uLZ\u0679\u0012E\u06f0a\u0005K\"\u0018V6+\bV\u001d\u000f\u017ck\u02a7\u0007<z;gt\u14b0\u0556G\u001c\u0015,6Cx+>\u001c\u05eb7d\u01f8\u0014#9\\eK}Q\u0016-zC\u0005LN\u001b\u0004?/_y{zp%D4\u000f4&7p&O?C\u001b\u0016OWYs\u001c\u001f.[^7\u0001:,\u001cL\u007f{\u01c3&N/;xk\u00c5&n5<lG\u001c0\u0013$\u01969PK\u001ev\u001fZt\u0010Yf\"o\u0012\u000bAXpIn9PS\u0002\b\"TT9\u001f+&\u0015\u001a$oE\u000fa\u01390t\u052a\u00194\u0017a'\u0002\u000e\u0343\u001b\u00078\u0525A\u0019$q\\\u001e{7m-gRmT\b\u0012Zdvx}p3BWyy\u0017ZC\u000e#/1wcg!y['=&O\u000f/*N\u0018\f7&\u0306I\u0000$ACF\u0007?\u001d(r`\u0726\\P\u01ce\n\u001b>\n06\u07d6\u07a2ox75`5\u001e\u001a\u0012aK\u0012|@\nq\u0017;R\uf273\u026a\u0010\u034e\u0004II:GsI\u0012r)p^Hr7:e7P\u0019qlP\u0018yZ1\u0012*5>w\u04d6J<\u001am^_a\u00e7\u0005\u0016\u0326_b\u0004>\u000b5n8mdJMa\u0275\u061f}\u056fS!\u001d\u0710\u0010SM\u0012~=\u000e5aK>\u0661X$<\nm\nael*I\u0017i\nh\u0012dj*\n\u0003\u0010Ox,\u0016\u0002g,c\u0499\u0634\n\u001b>\u0003\u042a\u001fI# x\u001d\u02f6^ob_jce\u04f1>1|\u0465\u001dc9&.\uebdfegy\u000f\u001f+B_*+7;\u0015zVcHlH\u000b3\u0017a:\u074c*?K\u0005`#\u0015W\bD\tn\u001by5VmG\n%\u0004w+v\u0167\u079aox?\u0010L:q_\u0017sxma/#5\"\u0017$<+l\n9b\u0016ug6/@ykq\u0006\t;XMN\u001f\u0010V:TR!\u0015h\u001a\"\u0010$u\":\u007f\u0004\u000e?V~\u0012\n\u001b>-\\v$97\u001b<dl/jK\u0016\u024a9\u0013Q%\u001bsc6[.y]_\"spj\u75b89I]7\u076b<5l/h\u0015\u0004~\u001c7\u0012M5\u042b[+\u0017_0Os{\u0194\u7152\"hQ4]Ju*\u0005\u014eb\u001b~l\u0010\n\u0004E\u05f1o7\u0003%a)9\u0005\u0364kW\u001cw\u000e=qf.b~1=\u001b\u02e7<]\u001cHCn+\u001dU\u0015\u0000\u01c3jx\fxCl\u000eU\u0015-w+\u07cb&c<\u0011_pxN5\b'NvW'\u0001'\u015fE>\u0000\u0014fOL\u0015-q\u071aK%M^\u007fF\\S'gA'VS\u0010\\\u000f\u0006\u007f\u001b\u000b;\u001fy!(@Y\u0011\u001b\u0018Zuivt\u00048\u0006\u0010<e\u04407&%F6K\"<\u0014]o@\u0017\u001ch+\ntom\u00fb\u00004(\u0386)}I\u001b;5lN\u000bGZ8\u0010GJJWB\u0244=\u0015\u0016/&\u007f<e\u0015\u0015+Au\u000e+)9QX^ \b&\u0001\t\u0011\u0016J\u0202ESyo\n}yQ\u001dv3\u00dfA\u000f\u000fO%\u88cfl\u00fb0<NOq\u001a\u0005&\nM<\u06a6}\u00197\u0003BIxi'\u000bW\u001dC\u0015\u001f\u0001\nNn#~}\u46a1\u0017:oK9.oqGpJd\u00164Zr]vx\u074e9\b\ud91b\ude3b1d]>0@,d\u0000b6lq \u03c377hnxC6B`WF\u062f\u001digG\b\u001fh\u017c\u0005s)o\u436epdq\ng\u01ff,C_!\u0013\u0001c}\u001c\u0017|}?M@ZV;6\u00078n7c\u0409\bq\u0002\nQ;\u0499s\f O\u0002\nnG7c\u0017~\u007f\u007fw~6\u001b;vGge[\u0004 ys\u0016E#;UP'\u007f5\u000f\u0701&;fB\u007f\u001c=D\nU\u00144:\u001aOR\\.\u07e4|\\%</\n\u04fe|]m\u0758Ol\u0006Iw\u00c6O\u0005]OW;\u0019{#KK\u000f?\n\u0003\u075a)i68gW&\u0648\u014e\u007f!phH\u001dI\u070e\u076f1^\\io3_\u0210&(%fU:O[/$Y0Zu\u0564\u0017L\"\u0007\u01b3:2S\"i\u0167!G@Y\u001a0|g\u0003SxJ\u0018>7\u01ff__x$\n\u000e\u06a2\u0012\u0015\u0005@{?/\u0003\u0003\u001b_\u007fq[oM\u000e W\u03eaFek1H\u01fc\u0269*$7\u0014S\u0094@:~$Y3\u0004.Yj\u001aJ2~JA%0=\u000fPK!\u007f\u036e-[r\u0016\u001a1h024\f4\u0001\u0001\n\u0010\b\u001aEwd:\u0006\t0`\f\u0012\b\u0003r\u0011.#W\u0015R\u001bw<\u0019#\u001b9gSkmGH{93OD\u001f#sh302\u0005\u0007?5_%O?t\u24c9\u007f\u001e@\u0001\u032cf\u001b@ q:9.,{lc\u0002\u0012&n`\fNVp\fDbEt\n\u0013?Oxl\n\u0015\u001c4'j\u000f\u0007\u0014\u000bRJ&\u0459P.8'#\u001a`~y\u0002E[\n|{[lB,\u0002\u000b?\u001b\u0012\u050doB?:ku\u001f\u000e>:#\u00039Y\u00b2uot_4\u0001`\n\u001c>O|\n\u00061X]$;b[\u0685\t\u0007\u0015\u0004\u00074>BW\u000fM\u0004\u001b\u0001m\u05fd\u000fP\u0241c\u0006\u0017\u0018\nnOr\u0006dZ/)\u00838'Hq*\u001ah>0jI9HI/\u000fc$>|U\u0010{_W?|Nc}\u0001Y}A\u01b6\u02d7wl\u00079\u0016R~\u0012}r\"a\u046ba9kA$\u0017\u0003\u000eF8\ubbe2? \u0409u\u000eO#\u3921-\u0014\u07d8I#s\u072fBa\f1(E\\Mo6rNSR1 \u0007\u0017:=\u0011\u000f\u000e\u0004y\n8\u001aT?d__g\u0002:iv6\u001cL\n'V2m\uc9e63O8Un|Sua1!mWt\u000b\u000e\t\u0001n!g\u0015O\u001d\u000f.ic7b`\u040aT\"\u0001\u0005gb2J*\u0018dVK\u001b[g\u0000`\u0000\u02d3H\u001d\u000fNBdJ\u0003\u0003_\u0017(-\u00062z^:ry?\u000f\u001eH`\u001e}bqj.i?\u001a\u0014QiLUF\u06ca\n6\u0013_%ne,y2C\u001fs7\u0012W\u001a\u0018<\u0000\u0002\"N\u0446J\u0000\u0006\u0002>\u007foc\u0014\u0001\n\u001b=~u[m7%K%\u0003\u0003_\u00156p\u012d\u001e\u0007m2_E_g\t}``\u0007\u0003 I{#Up\u0003cW\u0000\u0018=Qdgj0GJJMHcc]\u036f*%`@\u51a5\\mg;\u0018q\u0016M1@ JvEX\u0011IEf\u001e\u001cDc%tBA0Zl\u001c9n`,}kBDt\u0001P\u001d\u001f\u0019;'\u001e2\u0000\u0019<z9Y6\u0013c\u001b\u0007\u0002\bO.|\u001cUR\u061cr\u0011!\u0010Zw,\u0011\u0012Q< :\u007f\u01e83-c\u0007>\u0011\"\u0081'DWws]a\u001eE`\u000e\f|\u0015Ly)\u0004\"\u000f=/q\u0019 \u0012e[\u000eJ\u000ee-|\u0003C^ZN%\nj\f5&\u07ec?D\uf814\u06b9.E\u001c3~MW\u0010,\u0014ZtY\u000b\u000ekeVP)S\u0701\u000et\u03e8QNZ48C/s\u001b\u0019\u0017\u0016Bs`\u0015\u0000KX\tzqW\u007fW\u01d9\u000f68;evv0T\\|G{n\u0013}7g\u02afwP\u0005 d&\u07aeY\u0015~\u0015\n>\u000fX,\"xPje\u058f\u0013\f?wV\u001f*\n,\u03b1N9\u001bz\u0002*\u000e\u0713$\b]3=\u001610uakxm\u0d41~cgJ\u0019r\u0012!\u00073y<9\u001a\u001c`<$zq~dR:z\u0013\u0001\u0006%z\u00117\u0007~\ua1f9s9q\u0012\u0014\u0001p\u0291\u0003[naw!3\u01ac-\u0019\u0010\u0004\u0019\u0000\u0000~\u0379p,8Nx\u0005;v<\u0018\u001c\f\f|\u001dH\nQ48rd\u0003\u0003\u0004\u0001&8bW\u0477%Vk>s\u0397/'&;[1n\u1638x=(fwDg\u0011q\u0004~s?}\u0003;\u9583\nJ\u001d?\u0007lLc$\"%\u0003G\u0000b\u0016JF\u0015;F\u001a\u0017\u0017t_Df%6\u0011TR;\u0004W\u0002*\u0019\u0006W~\u000e\u001d>Z\u0000\u000e*H8y\u0004\u0011\u0013G/9r0/\u0001rWm\u0001^\u0019X\u0004G\u001a{W%|q]\n\u03ec#\u00113<l\u0019e\\\u0007\bc1\u000222Q\nb{,!8g_E819{{h\u007fm\u00143t1ZB`\u0015I-b`a`+\b\u0011F\u0006^\u001d\\\u001f\b\u0184Fe.\u001c\f=,0\u0002_V8M/O\u0014\u001dME~D?XXhg\u001a9\u001fDh@\u0016\u0011D-'`Ns/QUk 82~ i \u0018}@AXx4$E\u075dJN\u0018qF|Z\u007f`\u000eH>UU\u0006\u0006*(g\u0014^\u001c\u0592\"D\u0014\u001c\u00078.\u0637Vx?@[\u0481\u072fXLv\u0002\u0012,\u0018T(Fl\u001eH\u001d\u0004\"\u06b2V@^\u0007f\u0169oU\u0003q%\u0010\u00067(p$G3.\u0011W%$W\u0001h`U@\u066e\u0019`'\u06f3k\u001c\u0003F?#m0$l\u03ca9\\<n\n^\u0003\u000f\u008dywA%Dj\u001albS\ufc5bY\u02018#\u02bbhqr5bXD>E \"zE\u0010\u0013^\n\u0017\u0014\u0016\f\u001c\u0013O\u0004g\u0015\u000f\f\n\n/;+N\u0018)yRczK\u001cm],>\u0007~{pM\u0002|[Ne2\u001f|hx9{y\f\u00001]?\u063fP\u0006J\u0010\u001e2+9\u0002\u000b\bW(\u000e`<T\u0466\\AqHq\u001d\u0018\u0002Fo60\u0290h\u0737\u0015jozJ-\t\u001e$|\u0001o\u0014q$'tp\n1\u001f\u0000\u0006\u0684\u0015&|\u0013\u001e|!^j;k\u0148\u0012\n\u0017\u0016^)?l\nC\u007ft0Z@\n\nZ`@\n\f|)HE?N\u0006mW\u0004e/f]E'rZ$hc\u07b6aLu]D\u0012[zbk;\\m/\u0015~<\u0003F\u0018\u000b\u00022\"`\u0004\n7\u0006#\t%z?DdZn\u0018_ ?\u0007}+\t\u0013o\u0004lc\u0002l/\u0003\u0003\u0004\u02d081\u00197\f\"K@}o\u000e\u0019q\uf118\uc8c2U?aD0dy\fK\u0005!]\u037ecb\u03ddx\u0019\u001crbxX\u0001&3l\b\u0635YQ9(N\u001b8\u001d@ S\u0006tU~!\u000b(l`\u00006\u000f\u001acY6\u0019B)a'B9f+K A\u001aUfB%e\u0010\u0010r\u0018w\u00057V\tYm\u0397\u0130\bH\u001c\u001af8q\u001d0:=pLjt8Md+>]C\u0012\u00117y}\u000eh0O\u001dIS:lxtJ\u001cG/\u042e-9%90U\u0007\u05c1\u0000.\u0013;<e\u000b~Z~\n2:=\u0579{e>\u001e\u0017_/wi2M\u048aI&6uBGCWN\u0007\tc\u961c\u04ba\u00071<[W}0x\b/E<\u0007B\u0017~p\uc899(\u0635H3\u0000\u0003\u0003_\u001aP\u00ed\u0003\u0003\u0001v\n\u0012/\u001a#l$CV\u0014byBD.y\tT&\u0395_Uqn\tIs\nFh$\u001f~?\u0014\u04edbU2h$64!9Rw\u0003kL\"1q5`\u0012?z*{qk\f'\u074b^:\u0298\u000f-a\u0007^\n{ xkk`5!f?<\u007fC\"V\u0680-J\u001c+z~5gJo\u001b(\u0018^\u001c/\u001c\u0012X\nS\tOI\u0003\u0006\u0007\u0018 ck*:`\u0007\u012f_,\u000b\u001c^>1W`zV\n0:\u0017y\u079fE9g-\u00183\\}\u0127f`\u000eX<T\u0006^\u000b\u00125%gIAr\u0016T\u001d*\u061fAGmfYvE&9r\u000b\u001c?3\u0018O\u0001B\tO\u00f6gyS\\v\u00143D\u0013pWF^sfu\u001f42RI{6(\u066806WJN\u0017*c`\u0007^\u0007He63kN>SV\u000e|\u071b0]N\u001cu\u0019S%i8\u0018q5n=h+k9\u001f+/Y&\u07054o~ls\u0001M8\"\u0012B^C}$~\u0005UuP\u045cq\u0018?{eJ\u001assBBE\u0003\u0003_\u0015n\u0002'L8\u02b070!k=}\u02fb\u0014h}i\u001a\u01e4*\u0000&g\u074bA\u0001\u0019X\u000f5\u0013D^~D\f\u03dd)]4=n\u001c*\u0015dA\u0005\u0000\u0005])a0Q\u000eGp\u04209\u0007\u0017\u0014\u001dgwg:l_8Y\u0018%\u0013\u0003\f2\t1+Cs\u0006R0du\u06b6eU\u0006\u0018\u000f\u0002Q\u04d6Y2\u001ay=R\u000e';<y.\u0013Wc\u001fO}~E'`\u0016u\n\u001d\u00158|\u014c\u0001\u001e\u0005\u0018\u0017\u001a*\u000b\u001eQs\f\u0019)Cn%&,\\\u048fo?0\u0001\u0006jw}`+?\u0092rF6/\u001d\\\u000b\u0096hw>i\u0007_@\u0010E\u0012[\u0012\u0017\u001d\u001c0m^<y\uc70f\u0015Fx?azGg \u0014\u0004^\u0013a*\n Z\u001b\u07d0\u0001tAts\u000e%\u0003J0\u0018`?>g=x\u0018\u0018x\u0015W\u0005J|Dj]O,\u0017I%=1\u0004\u000e\njg\u018aA\u0011`\u06e2\u03fd>lz\\{e<|\u000b+\u001f'k\n$_\u0015\u000b\u001ea\u0018 3t\u000b^K/\b\u00123\u0017\u0006 J<p\u000e^\u0010U{\u001a>`\\n]!A\u0000\u83dc?\u000ff1\n\u000e<B`*\n\u0005t4hcs\u0188\b\u0010-ClS\u0012g\u01b4p^,?ab\u0012<\u0005\u0003\u000b\b\u0010Z\u0002+_>aB\u001cU'\u001e\u0011wL_DS\u001c\u001e\u0010\u00140f{\u001cR\u0002\\\u000bF\u000e\u0001\u01c5('#j\u0003^\u0007\u001a\u05a2\u0002\u001f\u00131\u0003_\u001b\\<\u00027{\u0003\u0003_\u0005J\u0473\u000e6ITq`\u07dfMr))p:u\u0006yhmetH:;yXu\u0011K8KP\u001e\u001cmhyab\u0006G,\u0012t@-\u001b\u0007\u001a\uc2b2\u06ce\u000e\n\u00184Rl{}\u001dv\u001e``K\u0001*;\u0005%\t\u001e\u0007^\t\u02fcf\u001bjVv\u0013(Z\u06d5\u00041Yb|Vs\u001cCn\u00b7\u0014@N\u0017[\u0012D\t~\u000fI{{\\sX\u0018,\u000bY2y\u001a\u0003\u0005K9hg\u0082J787\u0007#*B\u0004-Lr\u05f9\u0012\u0019s@JS\u0007\u0003\u0003_\u001aDZ\u000ed\u0007\u0006\u0016.;9\u049e\u0013 *\u0017tn8:;B[+KS0a\\)X?\\C!\u001bDhDc'\u0198m\u0007M\u0016\u000ee\f`f(:\bieH-q\u0005CGN+\u0001ku\u0006\u0006\u0006\u0004\nd\u0003\b8\u0007s6:;DhDg\u04d9S%\u057ckb\u0019Q\u06a0\u000fv:?\u1c5bPVcg*\u001a(eete\tl\u0004\u02f5\u0019\u000ea{zv\u000b\u001a\u02ea^\u0016{*q70!reV\u001e\u001c>\u0010WmO\u0018GnSn~+Y\u0010\u06e28.xP\u0001s26&R\ty\u0015k\u000f#b\u0016\u0003\u0006\u0001\u048f\t\u000f\\@\u000e\u0018vN/\u001af*\u0004/\u0005\u0004,\u0610gm+\u001c\u0000\u00158\u0000aX?Zf00u`\u0013 FpsZo\u001eGHS}lo3?Iqnim\u00137tAx:9O?\u00121A4 @|\t\\CeY\u001cd\u0014)\uf6ccnW)c\u03efS|y#\u07ec=\u00174\u0002\u0011\u02b2\u2341\u0018\u0018R-}}u\n*\u0004\u001e]\n\u0684\fOZ(\u000bp\tp}\u0017bK\u001b\u0003:/I\\?\u0017dJx|og\u0001e\u001c\u000f\u001c\u0006\u00163v:dA\tg<\u001b\u001f(x\f\f|\u0015w{|Np\u00c6r`5\u0000ow(+^foU%\u001db{<``f\u02c8;Sxab\u0007\u0015V\u03aa\u000374t@C oPGFL\u001cY\b#\u000e\u0135M~\u0003#us~(sbSn7\u06ff).9k\u0004twq@\u0017\u0015yn\u0003\u0003\u0007\u0013\u0016k\u0001:T'8\u0003+\u0011+\u0012jVJm\u000f:\u0014gH\n\u0002_qb%P*\u0750$/g\u000b}~\u0017[`\\\u0002>WW>y`G\u0015pZ+\u0013\u0000Au&4f\u02e4\u0142s\\J+\u0003V\u0019\u0004\u05d0ql\u0018\u001efV-h|\u0006\u0006>\u0005VE60P\u0005q\b4 \u06eaNw]8Y=Z\u001b\u0011\u00194\u0015L'O>|\u0013cb'\u000b\u0004~sL$,}g\u0014!\b)&C!@G+Vl\u007fJ\u0011N%\u001ec2o\u0016\fq\u001brcHc\u0002#wl6\u0337\u0012-c7\u0006\u0016|\u001f\u000e\u018c_\u0002g\u05cf^\u0004\u0019\u0001>sr[x\u0336\u000b>@\u00029\u0013\u02253\u001a\u0012#\tZ!\u0017\n(XB9\u001abl#\u001d+C|\u0019\u007fH\u079a[r\u001b(\f\f|\u0015`{-[\u0019\u0018\tV^\u072dk\u0016lx(8+c\u001d.cp;\u001f\u0003\u0337ko\u0001\u0000\u000b\to\tf{\u007fHE\u0010]Vh(DF*:/N\u001e?\n\u001a/\u000eb\u001c/,\n`8\u0018Ec\u000e|c\u0010/\u0007\u0003\u0003_\t\u0019J\u000egp\u076bDi\u000b\u001e\u00fd}.r\u0529c\n\u0002Vv \u001a%\u0007\u0017\u02c4.\u000fS+\u007f\u5d22\u001c \u0479\u0016iH\u0011\f\u0012\u001a\u000e*J\u0005Pw\u0016\u00176\u001f1\u0003$M0=0!L\u0000dxM&\\\u012c\u037d55uk_k+\u01f6o\u001f2Q\u0012=\u001eRxnt'<\u0010\u0001B(#\u001eY\u0014\u039cWlTi\\h&\n,,\u0016C\u0004\b\u001f\u001e\u0000\u0003\ud8ec\udc41\u000b\u0014\u03efW\u0011\u001b\u0018vT<I\u059eGY\tKV{yI>~\u000e%\u007f\u07e2i]\u0016uiV1?<p04\b9\u001fWE\b\u01c6-zA^~@\u001d '\u001a\"\u03fe\u001c\u001c1\u000e-r9[\u0001\u01b1|cfM\b\u0007\u0006.\u0011\fQ\u0004\u001b\u0018x-P[\u001cq)d\u0446J}\u07bb}{\u001a\u000ez\u0004\n\u000fIK\\&&K'\u001biO\u0003zK`re9\u0007q\u0016.\u0019\b+`bC\ts19:[S\u0012\u0016i\u0014Bbpo1\b\u0007\u001caU\bC0Vci\u0007\u00168\u001dV\n\f\u001e\u0004;oy\tAeVeh]\u0015\u0000\u001a\n2%6k[\u0018.B|ap$q]#\u001f\u025f\u001b'`<6}U\u0007 ^^b\u0010y\u0000b\u0018U3C\u0002\u0011\u0013AC,\\\u001c\u0000|mt\u0012\u0012\u0441\u0003u]7\u001d,'\u0000\u000e\ud5445p\u0003\u0003\f($*\u001f\u0018:\u0680\u0013\u0013ng2rv:gLP\u0019w9\u000b\b2\nN^t\n\ubf83\u0002\u0263J\n#\u0019\u0002\u0016X\u000fC]\u0015 \"\u00b8_'\u0002[d136+N8\u0010#\u07b8cb\u059fv\u0120\u001c\f\u001a\u0014A5c\u0278!\u001f\u0007\u0001*_#g\u0003\thov\u001dvvD/\nt!?\u001d\u0000g0N\u03c8Ccw{ci-\u0298vS5.\u001e\u0693GC\u0005\u0018=c+B\u0002\u0002\u0018\"O\u0526Of\u001a1C}\u001d^)\u06a7/\u00b33>?K\u058e\u0007\u001e\u0003%fi\u0018\u0018\u0010<\u0018Y\u0006\u0011$\u0013,\taQ;JZ\u0016/s9&Q\u000b1\u0012j\u00054A\u0003;z\u007f?\u007f~\u0015\nux/je\u00178\u0001\u0011v\f\u001c&b(\u000f-jg\u0014`\u0000\u0017D<\u0005\u0006L\ft/\u00117\u022c\u001cO4\u041bu\u000f\nl\f|}-zL\u0007\u001f5+~pR;oq{d\u0013gS\u0013A\u0007\u0758.\u00132FeU\u04ceq\ud987\udd42o%v\u001890bk\"\u0002\u0004\u001c8Zn\u0013TG<jPXY;'_\u01f1[=\u001ek`P\u001b\u0018\u0006 @\u03b8\u0001\u001a\u0018\u0010<}\u00019RM_MlwBl\u001c1$\u007fkgR\u0005bf\n,h]>x5h<\u0005\u001f\u0001er\u029d'\tDg5A(GHr\u001fWm)R3N]NpZ\u0000?\u0005\u0010\u0727EaA\u0012\u007f\b\u0005\u00142%\u0007^\u001b=\b>G%l] @>6v9=\u007ffK7y;zt2W\u0006/39\u001e`\u06792\u0012f+\u00181tl\u0011\u03bd\u00125mf]\u001bj@b+\u054b\"Dq\u001d\u0018#;*pW=1(\u0003\u0003_\u000bZ\u0287\u044a=x*<T*\u00bb`=\u001a\u0732s\u04feVr&\u0018\f\u05788]'\b^<x9hD89e\u0005*\u0001\u00188\u000fG-]\u0006f\u07c8rEah\u0012\u0010\u0012\b\u0003\u0016\u0005\f]Vo|:0U\u0013eh\u0004m9`\u001clps+zq\u001c[\u0019\u026c>&\t\u0014v\u052f\u92d3r\u001c\u0014\u0007<qk6>e\u0004<N\u0617QJ\u0014$bPFgH\u0526>(y\u0005+w\u0016\u0004\u0010:vf=[Sqt9?\u001e8B\u001e=W:\u001d\fo\u0000\no#/\u000b6io\u0017G:Hzh:o\u0001\u0004:=\u007f/F\u001b\\=e\t\u0007o\u001en 3NPCT1xPDk\u0003\\/q] 6&z=j\u6fd0\u0002\u001aT2+\u000fpp\u001c\u0016\n\u07df4Y\u007f\n`l{\u000f\u007fP@bs\fk\u0003\u0004lg`\u00008]*a\u0363$\u0011\u001crr(;tU7\b;9\u0002m8!\u0015&Dw\t`\u0019^\b\u05af\u0439\u0014ns*'D\u0016\u000b9q\\\u001fD\u0002##j\u0666\u0019t\n\u0005\u00ac\u001f`\bS\u000b\u0011Q\u0013#n#\u0004\u0005,A6|@\u0005E}A\u0003\u0004%(X\u00026\u0665brm\u001cvf3$!\u0003q\u0006b\n\t\u0005\fh\u0461\u0012\u001e\u017e{?\u0007~\u0180\u055eAg\nAG\u0002\u0002\u0019H@U2e\u0013f\ue078\u0011QY\u0006jY{l\u001d\\\t\u0000\u0016=9\u001f/P(\u000b\u0002\b9>z@F\u0018\u0004\u0003\nN\u001a8\u00046N%]9j\u0712TH\u02e3al\u007fYSu+\u0016\u0003/O 9Y<O\u000b \u0007\u03df\u05cdy8\u001f\u0000GY*\u0014\\z_|\u0546;\u0003\b#AD\\]\u0003\u0019@te@~Bt'H+;\u001c\u0018\u0018\u0018x\u02f0KF.G~kITV\u001fF\u0001J\u0013)\u0169!Z}UX'0A\u0015\u0002\u001ag]\u007f8~Cn\u0609\u001bd\u0011O|=z*\u0002u0\u0017(\n9`#/F\u0010\u0001--q)}b\u001b\u07cd?0?\u079b*7\u0001N\u06e7\u0005&v`M-g\nZvb\u0000@nF\tX\u047d5>\u0001qd\u0007;E@`!.O29;\u0006r\u067a0w63\f*&1Qu0:\\C4Temq\u001a\u0018T?#\u007f\u0016=<Sl\u001e]\u001bx\u001d\u0010IU`c\u0651Md6\"al\u0784sx\u0017\u0000\u00188\u001b5}!a\u026a_zf(c6\u4098|D&\u000et~\u0017\u0011\u00051B1}gqx\u078b\u001b!-@L\\\u0019\u0018T8\u06af\u064f\u007fc\u0014;\u00035\u5801\u05c6\u001c+'\u03c9H\u000e_\u055b\u00022Z>#|]\u001co!|]A\u022d>*!|j#\u0017n6\u007f\u0010K\u0002\u001f\u0000V|F`*\u000b\u0339X\u0000J\u0010O&\u03ccVc\u000f\u000e%2\u0575QTHz`P\u000ey>??x\u007f\u007f\u0523\u001e\u001cr/3}u`B:hM\u000f7\u00d5v\u0006sf_+ \u0006}J*o]VI\u00063>y\u0003rv#pB\u001a4\u007f0\u0258P\b\u000e8>p&|Evi\u0012 \u0006a\b\u05daS\u0019\u0007:\u001c\uecc0q\u0019\u0001/4@'\u001f?\u001f?:O\u007fZ\u0011}G9/2?6Z\u0257I\uc61fUfn:YZ{K\u0393#\u007f\ua955\u00028\u02a1\u0000e\f/+\u0015\u000btNO|\u001d\u05c5\u0004\u0010P\u001f\u001c\u0010#\n\u0004\u0012U\u0006v\u012b,\u001e+E((\u0001\u0005|.*2L\u0002\u001c\u0007I\u0002\f\nZ\u001c#^jX\u0003\u007f\u0236\u007f~_\u00c1\u001fH/9,F\ftCk\u0013Nx\u02ea}]?tqS:\u001c\u0017U\u001d\u0010r\u0012f\u0016\"[\u0017\u0487\u000f8\u0006'%!|\u001f\u0011;\u0007\nH\u01fa9\u0019#Tw{<\u0019(p\u0104\u00193o\u0012@q9$!P\u000b?ya\u0006x\u000f\u0449\u0017\u0003`BOCc\u00c1\u00057~2#\"=c+v\u066d\u001a2Gf\u03db`\u001d\u001a\u001bj1=\u9c11\u0006\u0017\u007f\u007f\bwC^\f\u06b7\u00053\u001f#v\u05d2\u00100H-\u0007\u0194Rn\u001c\u0417\\L4Eg~Ga&\u0710W\n\u001b\f/<3r]E\u01a2\u0002A\u01fd\u0007\u0006\u0006^\u001b\u04f3\u001d5;\"\u0011}(w\u001c,z~Yjl\tp\u001d-D!hk\u00120sY@m@L\u007f \u0016\n\u0002;J \u0006\u000ff\u0004Ne\ntv\u001c,PX\u0000\bS\u001dg\u001e>fZTpw] hq\u001f\u0007\u007f\u0017L[\n\u01c0\u0014N\u07fel\f2|\n\f\u013cM g->8\u0006O\u0398o\u06ea?`\u07e8|[\u001fW\u000fpN\u0017\u00d5UG/\u0007F:C^8\u0003\u00030E{@Fx-[\u0014X\u001c H\u07c6.\u0013c&\u07dc\u0002\t\t?\u007fg\u0000%-\nvD-&f^\n\u0007\u0006^\t.4QNK\u0016g-[=\u06ff$%v\u0015[8u:o\b9`_'|-\u0003M^\u0000jO\u0017;\u0000rkTBO\f\"Z\u0011\u06cfm\n:z[2y3DT\u0015\u001b~\u000e|FpdG6~8\u0013\u00156y\"\b=yf#D\u3dcdW\u0002g|GA>t~l\u023fA%4\u0497.6b:\u0007\u03bfqps5>N\u0463cY\u0014#B\u0015\u0003\"n\u000e\"\u001cX=\u007f^\u0006\u0013\u000e4bG&\u0010fpF}i\u000bAe/q?K:\"J\u0004wr\u001fT\u058c2WbF.dmc\u0017~8\u072db-iqSkc>v\u0001\u007f+\u0001\u0007SjO\u000e^\u000b\u0006-dC%\u0018J\u0018J#Z\u0015det\u0017u\u007f\u0017\u0005'.Zq!\u001cY\\E\u007f(CG[|\u000f#Y</\u0017 y=\u0011k\u0003\u0003\ni\u000f\udb5c\udc6c\u00034~\u0013Tj<\u001b{+w\u001am!;mm\u014f\n#/m!\t)\u0160Hl1\n\u0003\u001630+\u0016sT\"B\u0359X$\u0014p\u0003tvF`P\u001d\u000b\u001c{c$L4\u0004q \u007fd\u04a4\u0010\u031fk\n4w/?WdN9qh\u001fb\u0781W\u0001A\f\u0013g\u0299\u39dd\u0006\u001d(#d\u03ba\t\"4O\u001am[\u0007\"\u000fv9+}g\u001e\fr$jE0(\u0019\f\u066c\u001dl3\u0001\u0018\u0005\u7e42\f\u001e\u00127\nD#n\u0010l\u0004g\u0018\n\u05c1\u00053\\TP\n/F\n\u0001\u0004}@0\u0332_d\u0016\u01cds\u001b\u0003\u000b\u0018%g] Lvd#K\u007f|B\u001b\u0007}W8\u0018\t~I\u001c\u001e'\u0000`g\u0014t}r\u001c7X,\u0144XB\nrQ#\u0012&\uf85c\u01c4\u001cy\u0773\u001d\u0013\u00071\u001ce\u030buG{o,a{S\u0015\u0000\u001d]\u0006w`5\u0001l;}G6L\u001f@4h|\u00133+uAF\\\u0019{C/\"F\u0001C?G\u0016P'p\u0004\u0017\u00003t\u001248GD\u0003tb)?w]&_2jq`\u0012EZ2<^8-#2t\u0010\u001a\u07ea/\u001c\u0019WO\bi\u0006c9N7C\u000f\u02b4\u0376O -|0J\u0018\u0383\u0000\u000b}@\u0006\u0019f4\u000e\n\u0001\u0007ux4\u001f;o0X8\u001c}\u001a)\u0015\u0011}N2;e\u0018\u00186.8\u0004\u001fH\u0019pq]\f\u0014\u0019\u0017c/\u0004\u001dq}B\fDT\u0006^\u000f\"]\u0267nf\u8b73;X\u0007\u0000Y'ws\u0006\u0016[\u007fB)=\"%}\u0011R*KSi\u0007dbhl,\u001c\tJx>\u007f\u007f;T\u0010,w|mT&\u001f8W\u02ac\f=vh`U `\u06841\ufda9&q\u0010\u001a\t\u0016'SF<B0I\u000bLF\u0018oB\u001f@}\nQyo\u001c\u000b\u06abr 2~)\u001b\t\u0007->\u0011*\u0000O\u0518>G\u0017\"+\u0016\u000e:\u000b\u001718\u0004w#w\u00135SfE88\bD&c\u001cp\u0893#k\u0003\u0010`eVU\n\u0003DdW\u0646x&\u0012\u0015\u0014x$~\u0006q%35.Va=hD{=,^X\u0004n\u0011V\\x5_\u001c\u0018\u0010PJlaCK\b:\u0012\u05c6K6z\"Tfo\u0003\u000ep\u0007\u00113!dZ\u0010\u001bS\fy%\n=\f?'l`\u001bf\u0000\u0002T;N8 u\u000b>Vm\u06ea/\\#\u0007\u0003NLL\u0003:~Lc\u0007\fm\u0013\u017a \u001e\u000es\u0017F\u0331f$q7\u0014*\u0007q,G\u0011t\u000e\u00138y\t\u001ed\u0653\u0001#x\u001e^3z[~;\u07f1W\u0002m[\u0011\u000e\u0005tZ;\u007fV5IsEt\u001f5)\u0019,N?C9\u0407\u0002=b\u0017#\u00001\u0018y\u000b\u001c6\u0124dA(s\u001fr;|\u0000A\u0016\u0001&\u001e$Z\u0012=r\u06c6O\u00124\u0740\u0012a`\u0017\u0013 \u001fj\\7NOjaz~\u0006\u0006^\tVz 5&U\u0446\u064bU\u001c/6\u001d\u0006\u0006\u00152}9\u0012\u0011\u0014#<\u0015\u0399mM\u007f\u00061\u000e\u0000\u000e0>\u00050rpI\u0014T\u0000\nsgJf\u01f5(~12+@/pU\u0000qV\u0007\fk\u018a\u59817\u000eO({k\u0014H\u001f)h;\fn/\u0000c \u007f\u001f>P\n\\$6\"(6\u0014A\u0004\u0000;\u001c#qt\f7\u0017zIoE9t\u0018B2\u00151S\n:NlA\u000b7\u06d88w\u0012Kc\u0014c\u0017z~WtXd\u000e\u001ex~w$\u001dm\u0006\t'?IpUzf*\u0017PX\u001e\"zF\nl//\n&\u0014t]vyQINd\b9:f\u05f3o\u001e#QK~:E\u000f\u01a8\u00157\"\u0012\u001d\u00143\b\u000e\u0282\u0002c^WQsk\u001fW\u00053\b#z\n?a\u001be\u0012_\u00100x\u001cF%SfQ\u001cdhih|C\u0002Jr\"(iKOl\u001d9H)8W\u052d\u0018:^([5n\u0002{\u000b`x@C\u0015\u0013EA~y?(\u0018AvL\u0005b^.00=b;\u0007>\u001c\u007fk@\\%\u007f6d_!\u0011\u0085\u0682\u0017\n\f|\u0013\u00002{tL~P\u001d\u0002\u0673_SWx2l~&|k@\"^p|*d[\n\u0019\bl\u001cBET'F:\"\u0000\u0011\u0011\u26cfK5;\u0004osh\u0002yN)_Cd?\u0018\uc1c6l7<\u0000?c\u0003\u0003\u0014\u0006%y[K\u001e#\u0382\u0013<\u0006;w:K\u07a2?\u0003\u0000p-m\u0010@M\u06fbF<(!$!1\u0010?m7\fQ:*\n h\u0002;\\\u0001\u001d\u001a\u001cj\u0698\u0017\u00105\u0648^\n:Jy?7'\u0007^\u001d\u000bH\u000e%Fm6T1t}c\u001b\b?\u0015S}\u01f3\u07a2\u000e\t\u0014ND!reBFTn4\u007f1\u0015>-8,|_m/*@~d\u000e9Btkld%=:5T\u0678\u007f/e\u001b\u0018xmHy\u0007\u048e\u001dW\u0012{v\u00122Xo\u001c=&x\u001c$+WjxoI\u001f8pr\u0013/F/y6_tZbo\u000e\f6{\u0010k~\u001a+\bVuU\u007fR`57\u06371\u0004\u0001w4\fm8^7\u0017u\u0006\u0014\u0006|#\u007fG*\u0397u\u0018\u0010\u0007m=/Wl`$$,\u04f1\u025eso\u04f1oer\u001b)\u001dwK\u03ac\\\u0006\u001e\u001cd5\u007f[fW,w#\u01adJ8,7e{~I@y\u001c\u000f\u00161`\u0001\u007f7i\u007f$niVN#\u0002\u0016\u0004 \u0017\u007f)\u0019x{p\u0018\by\u053a<\u000f,qVF)\u02c9P\u001f|i,\b7\u07f4o\u0000<\u0011z=(\u001cJ\u0002c}\u001ak\u007f]6RiS`@p\u0737\u000f\u001c\u0003\u0004\u0017'3\n!\u0006s\u0345.$\u0010\u000f\u0015![c,{\u0012~\n\"M\u0010N}-*<\u0003\b=\u0004\u001fv$fUfYK\u001c3\u001dg`[\u0011\t\u000f|&1a\u0012\u0013\u001dM\u038e[;9f~JK\t\f\u001b}30k\u007f\u068do\fKCQ\t/$\n*I\bFc`PNW\fb@A\u000ey\u0005~Bx\u0331=\u040b\u0004\u000bA5x\u0004\fY\u0019^rdypu\u001d>M*fFho\u00013\u0002}`\u00196!a\u0004\u0015L\bwN2\u001f.O~x:u|CI\u079a?m\u0002\u000beH\b&1\u0001A\u001dpb8M\u0002. c?Gae\u001e*`$A\t0R\f\u0002\u0017f78?fzA\u000eD{\u07e1dM\u0001j13\u0007AhN\u001e8\u000f\u0002\u0012$\u001cypa\u000bB\u0014E\u0000{3^,s^X9;D8a\u6251\n\"\b\u0004';/wos\u0013]D?P\u0018@\u0019T\u0001M\u001f\u0004\u0011pEn\u0003\u0004\u00131{\u0011>fh\u0012z2#(C\u000e*T\u0002|Xj77\nh\u007fIf3:\u0388c8Q2x/Y\u07cdD_g6\u0013}\u007fnX\nU\u001a'\u0001B82GU\u001cbx\t\u001eynW\u001c~\u0a1f\u0671sD\u001b;DF5G_Ub;5\n\u0016\\WoV\u007f\f:VXn\u001d7\n;\u0002~/\u0007\u0012\u001c\u0006\u000e\by\u000f3.?r\u07ba]FMH}\u001d7\u007f=t\u0019\n\u0000\u0012~c \u00177\t\u0006\u000fpcg\u0015Qr\n0>V[$WDU\u001f*\n\u0016K]\u0251W\u0006'\u077fwrMrl\u04ae\u0004)SG89\u001e\u001b\u0018\u0016W\u001fv\u024ezE,\u0296CxX\u0019ais\"b~*CsR\u0001B_v~wm\u02d8 0>;.R\uc7fe#N9hUnw\u000bT;\u00a3\\(^Etx!\n\f|\u001b\u0000\u0019+UI9\u03b9\f\u0016\u0013\"\u0018/=|\u0017o\u0006~Z\u02c6reUBs\n2ZFu&\u0004\u0017.&\\N61nY#hh\u000bN\u0017\u0017V\u001e\u0016cjq#\u0003\u0004\u000e\u0007\u001fn,)\u007f\u001b\u00c6?m##X!>\u0007Eh\t]\u0017$\u007f&/\u0005/E)\u0000e` \u001dN@\u0004\u001d#G\u007f~\u000em\u000byA\u0007#'.\u0006?\u001c\u06ba\u00003\u0016aZG\u05c2p=3f-D\u00060I7\u0007k4)Gl\u0013\u00104\u0014<\nq8J\u001f\u007f~R\nc<a'_f]V~\u007f\u000f\u63ef\f|\u06c0v\u000b@riMgklf\u001ex/9;lrRnU Asc,\u059c\u001bJ\u07dag !\u0006D>\fvN\u001d^J~\u007fF\u0016n&\u000f4,Ne;t1\u0295.V0\u0011E 0@\u00048\u000b\u001e\u000ec8)\u007foI@Qo_\u03ecw`\u0006R\u001f\u014ayi\u000e$fd\u0004GX]v=|6\t\u000bnI\u007f-{\u0006zuG<^`\u0529Lx7)\u0012\u0018qF\u00160\u0002\u06c7!c`pi\u0011x/\u0019\b\u001b%l-j\u001e)b?\u0004\u0014\u0001\u001c\u0214\u017f\u0017l\u0770\u0739\bwAB|\u001cz;o\u0003?/8mtIe]l:Er3=-Y\n;[CdQ\u001b\u0013\u0007oJ\u0015>S6\u001a:du\u030b\u00134kqG\u0007bA\u0013\u0005a\u0005\u5280{= M\u001ca&m\u0082\u0002s\u0005^#?;8\"w8\u001f}{\u001f\u0019\u001cR]0(\u001c8\u0002^\u02b9Ku-UK\n$\u000f:\u051c7\u0014\u04ef\u0019d\u007fox.r\u001c\u0004prxT}0\u0001!\u001bI`2I2D&shS\u0017s6\\XL\u034fdm?@G'J\u001e&ms\u0013iEe\u0006>+8J=\u007fp\u0007\u007f\u0007\u0001`Z\u06c61x>8|77\blU8~9 \"swi\u01d5\u0007\u071e\u03f9+\u0547t>%tpI\u05d7\u007f\u001ez\u0003#\u001c<-\u0166\u001d\u033cc\u0013\f\u0017N\u0570}Cbx\u001c.;F[\"3\u0015(Z\u0015\u050fi\u000e\u0010\u0016\u0016\u0003k+1S\u001f\u0007\u001fg??]2\u001f%1q\u0003o\u0018f\u001f\"[F{u\u0015l\u0014m\u0181\u007f1m\u000fUU\\\u0011\u0005|E\u0260\u00067%hQA\u0002\u0006\u0001.*v\u0005!+a\u0013>P\u001b8\tfqS29d]]dA\u0019;\u001f\u001cUZ2{\u0013|R<6\n,Hc\u0016g\n>2v~\u0016\u000e\f\u0007sXv'8'qlK\u0013~l~]_\u0239\nb;gI},96\u0010qaP>[>Qy/Eh\u0010k8\u0002,o@F]8'\u000b=\u0012\u0017'\u0013i\u001cI43K$flG\u007fG6000\u000e!\u8cc0/>\"TmQkhl&_\u000b<WV\u007f9I3/\u0010\u000e\u0669ACj\u0578.\u0017<\u0001jD\u059d\u0014h\u0001ds9ZY{\u0013u9m\u0015!y^CU\u0011\u0012q\u0003\u0003\u0003\u0005\u0002d\u001au9\u06fd&S\u0234-\u0015e78s\u0411=r\u05ae\u074cs5\tQ!\u000f\u0013\u06f9\u0003\u0010Q\u000f\u007fX\u0016v5\bR&?HI8\u0010L\u000b\u029a9\u0019U*\u000f~\u00011\u001f|5O\u0006\u0006\u0006\u0006\u00194\u01f9qX\u001fA \u02cd~\u01a8U=fUYK>\u0005\u0017\u001a\u079c*\u000e\u0416cI}]p\u001d\u0011g_[t\u001e\to3UpBk C\u0193j!sNKB\u0013d\u042eAB\u0013K,h`<V\nZi'Fv\\N8_9Xs\u0006f\u0017\u000e\f\f\f9P\n\u0013.\f\u0007g.G(*e>MTNtI2'\u0003\u001ar\u0003 \u0001|q'R\u0011\fskkmoK\u0007\u0010E\u00181&\u0476c*\u001a\f-\u000b\u0007T6GZ\u0004\u0000)Z:i8\u0007\u00047\u001ch0>P\u0000:\u001c!\u007f~\u001f{\u06db\\]\u001e$jOB801\u001bW\t~\u001b\u0014\u0013'\f \f\u0012;\u007f`\u0003}0DO{o\u001c\u000e\u0006\u0019\u0138xs\u0001\b/\b8X\u001bt\u0003[4!\u0011\u01cf\u0012c.\u0005\u0018O\u0013\u0011y\n2q\u0015\u00155\u07b0 \u0019\u001dd%d```\u056duwbmSk\\1\u05b5y\n41\u0016@\u00180f[\u0436\u0000Z\u072cW~\n\u0548C_\fL\u0539qF\u001b0Z:A\u001c9v\u0001\u0004\u007fw\u0006DWaL4\u0007\u0013\u001c19e+\u0002b&\u0001}k\u000e\u000b_\nEWf\fr)\u000f\f\f\u00178\u000f\u01a6R\u0015\u05efTJ6>&`\u001c%1Da \u0080ce\u001b\u02fe\u000eg\u0007\u001f6H&7j\u001a\t*p$v\\/}\u0015.~8Dj\u5f9fQY}SO|\n\u00119vx\u001c\u000f\f\f\u00178zH+Dl\"cZx\n\"`OSR\u0001/?\u00038\u0014CW[r\u0010- \u0102~aef\"\bPer_u\u00fe);=Ry1bx\u00057x={??tBq\u0006\u001ax}n2>{t@Klh)!3\u04ee\u000fb@\u000e/\"\u0013c\u0010B\u001d`z89\u0017o>\u001a\u0007\u00031d|O~\"\u0003\u0003\u0003\u0003o\u0001W\u0017[-\u000frv&e\u0259D8~\u0004tu\u0004s\nq<f\u000e3W!iw{\bun\ta\u001d\u001e\u0000\u000ev\u0018t\u0004\u000es,\u05efa\u007f#\u00179Y\bYw\u0137m\u001bWR5\b2n^\u04dfO%\u0019\u0018\u0018\u0018xp)Xnn\u001c=;\u0013\u0012sb\u0592B%\u0015t}okr\u007f\u001d\u0001.)T\u000e\u001b\u0010\u049fj\u0012\u0000&IJ;$S4\u0011Tx.`\\\u001410b\u000b\\-\u0004\u0371 6\u000e/\bH\u0012SD\u01ce\u051c\u01c3\u0017\u000e%\f\u007fo\u001b\u0018\u0018\u0018xppz8<a9=t9\u001e?'\u0558]\u001d\u001eM~n\u0010>3\n\u0004'\n\u0007\u00108AV\u000ed;gD>4B\u022e1!r*\u0012di\u016c;A\t\u001f\u001cx`?\u0003\u0007k$\u0010\u0001[\u1af1Z=\u07d5H@z\u001fc\u0013\u0016\u0140]@\u0014{g\u0003\u0003\u0003\u0003o\u0019~\u001f,;\u0006\u00183Z\u010c\u06bd\u001e.\n^N\u05ce-\fJ\u053aOa\u01cf>thfDvAH3_`sM`;Lv\u000f>\u0003jS\u0002\u0006&cKF\u001eT\u02490AD?\u001f@{\u0013&\u0016]y- 0eR\u0016\u0003\u0018@s\u0001P\"6\u0011k\u007f60\u0019\u0018\u0018\u0018yG;\")\u0588zd\u06f47>\"ms*t\\kU]Q3\u03834S@L\u0007^|<@\u001d\u45cb\u007fD'f~\u0006$B\"+7Tr!9;p\u0005WX\u0014\u001d2H\u001aM6q\u001c\u0004\u000f\npu\u0017\u0002-cG?\u0007\u0006\u0006,\u001c[-\u001f6m19\u0001w$G 7\u001fE\u06ee?\"Xa\u0000=9\u0004\u0014X.4\u0011\u0012\\d:\u0000?#_Oq\u0015\u007f\u000e?7\u001cV$\u0000bqDQ\u0013>\u000e\u0000 /9|3\u000f]b_x!L.Ho\u00115??y.k7(h```\f\u0000K]\u0013>9w\nxe|\u0001s\u0014qe<\u0007$8oH!,:9.<?Mq9\u056e>/0pf\u0004SKf(A+k\u000e\u001a'`DJ&/\u0001RE\u0010mp\u0498r\u0010#8}qCw\u001b\u0018\u0018\u0018x>\u0019\u0011\u000f\u0011\t >\u0011'\u00117\t\u001a\t\u0459.4m\u0011\u0003}\u0017[\u0012;*Gz\u0163\u0663)v.\u001eB\u0014/\n\u0011\u0014:sr*a]p2wGD\u0018<VA=\u000eF\u001f\u0018\u0018xkpl\u0007\u000b2\tc$e\u0003K2\u0006m>\u0015B\u0012\u0505[-d\u021dK\u0002cs^>dG:=X\u0007\u0010h`9Yv\u06f5j7(\u0010M{d.S.(u>\u042a\u0011\u0017 j\u0001\u0229y~\ubdfe0\u000f\f\f\f|\u001b\u001b\\.VI\ua2a5h[5)&\u0012\u0010{=z\u000fW\u001d6M8)<v/'\u0007|J~;|\u03e4U\u0017\u0012\u001e0\u0018E\u628c)\u000b\u001cug\u7d57\u0014\u0007\u001b>xIhA^ft\u001d#b@g\u001c3{\u0017D+@oon#\u0007/DUmlkfu\u0017L=j\u007fEO\u001fm\u05f2\u027eaL~\u0001Oa\u03e7.T\u001e|~:\u00e8\n'KD\u03f7!npbp%\u001b~0n*\u0003\fx\u001c(05\u001a=\u0015\u000fc<Z*H h^x|~fn\u0002%wJ,/>2s3Bf3kelK/cG#K5;\u0000KB\u0014\u0200\u0011\u0000'\fV0\u01a3=\u00ae\n\u0014\\lt\u0614\u0019#\u0018\bl5M9=\u0001\u04ca&p.`\u001e\u000f^\u045bA`]Xqg\u007f\n\f\f\f\u00058.\u00035J~{=4\u0012R^7\u001f\u0015[6CIJAf~9\u0016}S\u0002\u0010\u0004\u0014!\u000eJv87e\u02b3|\n)\"X\u000e5ft>F=`PN}[/c$\u05dd\u01c3y\u0334/%\u000ew\u0002\u001ep\u000e\u0000\u0011-)X\u001f\u0007?,}``\u000eL4%&D`+\u8b31\u007f\n\u0002meI\u001aa{te&('~#~%pQ~\u0002@A\u007f[\u04cb~J/&m\u0007\u000eh\u00125B73+\u0018V\u0016\u000f\u0016\u0010{\u0010\u001b\u001a;\u0010\u0018\u001e\bI\u0001m4o \u007f+g\u065cx\u001f\u0018\u0018y?fhoKc5K|\u0002:ntv\u000e\u001e ` \"\u0007$B\u001c=\u0013N|\u0012\u0007\nV}\u001cB#:Xo\u031f\u0006/\\\f%u('\u0018 3^pf\u0171;,q-&O0(\u0000*\u0005HO\\\u0007\u0018p!\u2135(8a]M\t/\u001dod\u0003\u000es2\u001a:h\u0161\u00186\u0158:Ua\u000b\u03c7G4\u001apQVgP%4\u001c1u\u001f^nxB\u0015\f\u001e:2.\u0012+\u0004~oo\u0007\b{s\u000byX\u001d(/\u0001}\u0402\u0017\u0000R#\u0013t\u0019oY\u0018Wt;[8\u0014j^\u0007;00m\u00f1\tED;]\u0011mV {:*O\u0018A_}\u0012 \u02406\u0018qXRF\u0015\u000els\u001c+\u0007F>MU\u000bg<\u001f\u0019:2*\bs!b\u0004$Xx\u001f\u0007;\u0002'V\"L\u0010H\u000eZ\u000fqJE4Qr'L}``[#Wd\u0000qgny9d'\u0004\u000e\u028e?h8M\u0001Fk\u059eD*A\u0015\u0004?^:I@2\u04f3/}r\u000f\u0001\u0004\u0016$(B+Q\n\"Jw$n,\u0001n\u001f\u001b\u0007\u0016iB e&@\u001c-\u0006v,R\u0002Mece\u0005g.\u0000:m\t\u0012}W\u0019g{hE\u05b7P9\u009f4/\"Mm_l\u0002\u00043hU\"\t^\u00014.f#{\u0017\u0018\u0004zq\f:eDT\u00fa2D\u0017Gl78}\u0017Ga\u000bcp>00\u00d1<\u07da\u018a$'\u001d\u000e\u0007=|_({~eq\u0005C;\u00125Hd\u0012y%,9\u0018\u0017\u000eV\u00baO^\u0359\nz9q<\tU\u0013e\u0010I|\u07d35D\u07acT_cP.\u001b@\u001bX\u0017lco,i.8\u0007U)D$\u0238Hak\u000f\u00044\u0010\u0016H|?l\u0003\u0003\u0003\u0003\u0004\u001c_\u007fcr3C'Kn\u0626OJp\u0000!!_rf`\u0013#!m\u0006\u00c7\u007fb?@3^\u0011\u04f02U\fd%\u0000x\u000f\u06155J!\u0001\u0015l\u007fC9Yt\u0005$+\u033b^\u033b\u001c\u0603\u00059-Zs}0C|9:{zj<\u04f2xXX=\u0001s__q\u0003\u0003\u0003\n3\u03ed='O\u001b\u0289\u00196NhCi=/\n*|a>?>\u0002\"<\u0005\u056aVo7V/9FI\u0010\u001a\u4dc2g\u0007vh;\u0695:E\u001d&\u0011Z\u0018E80t\u0001s x>x\u001d\u001d;\u0017\u052e\u0013\u0230F\u000e[pI\u0011\u0012%_7\b\u0294\u0007\u0006\u0006^\u000b\u0499/\u0017n%ecx\u001dJp\u076aA]H@&7&\u0006c\u007fLVrxx&\u0002\f\u0000kyn\u0017'#G~\u001fQ\u0019\u0421d=bFm]7J \u0011\u0000\u06c1#l\u0581\u0001\u000b\u0005AG+\u0017t\u0005w\u0003\u0019\"j,4B'$IxDc_\n\f\f\f|\u00158l\u020f3:\u0007a\u001bMv\fmJNv\u0001\u0007v\u001d&\u001c\u000e\u3d6c\u0017+5xWI\\\u0019\u0017c-<\u001bpw1\u0002~\u0003L\u0018\na1qP\b*9?vv9^\f\u0018\u0631\u000f2%\u001a\u000bA/N8'\u04c2\t\u00188ji\u0004qe2#)m<~\u07f5__~6000p<?~>E\u0003\u000e$/'\u0014mf_hm\u001fFNZ\u00005\t[U\u0002v\u007f\u007f\u0001$r\u0005c\u00140\u001f\\\u0005=\u0017vs\"/ H*8&!\u007f?/e<\u0012\bF\bfF\u001c\u06b83\u001bd|\u0019\u03ee\u0017E\\k\\^\b0\u0006ta\u0019\u001f.\u0013\n\u035dLu)\u0521w\u007fY\u001b\u0018\u0018\u0018x\t-\u007fOh\u06b2`o\u033aE`{tGN\"^{x\b\u0019i9s~\u073b}}b{\u0013\u0018UxEg\u05cbU&\u0002\"\u001d\u0019)l\u001bUJW3\u0005\u00052\u0010Ms%\u0017|\u0017T}'\u007f\u007f<,w<j\u07dbl}``@Qe'\u047ez='\u0014*&lj7i;l8\u01eeryd\u0005[\u0005.98iN=\u0116\u0018tGO_L{\u077c}@\u001e\u000bq\u001d\u0018T331\u0326/\u0003>x-}\u0016p9bCZl\u0019p z$\u000e>|<__c\u001f\u0018\u00188x8\u03d6E\u0007m-D\u01ddUQUf6\u00183\u06d6!\u001d6\u000frM\u0000s9\u00d5ws/.H\u00073\u1a6a\u0003V\u0011$L98\u001f_]UIF\u033b\"*%@(\u00149Uq,\u001d3k\"dsK_\u0006\b+X\u057fjs\u000b\u007f/\u001f?82\u001b)\u01db7FBTZ<\u0006U\\1#&FE\u0013m\u0002\n~sW\u001e\\4\u001c*A6 \u000f\u001cDT,>pt\u001970z;\ue8d3<^:\u0000\u0003\u00112\u0490\u712bCxd\u001c\u000b\u0016J\u0005*D<F\ub6bbchp\u001a6e1y'R\u001c~v!\u001e\u0016%\u000f\u007fO\u051fS_z:g\u001f\u0018pUSd?x<>O\u000f-;6HlOh\u0007:c:'\u0005\u0001\u0005g^\u0017\u0fca-N%HV\u0007gx\n\u0007%5\u0001'g|e\u007f\u000f}\u007f?\u009bj\\\u0014S\u00168;\"\u0016>\"j+S(\u0011\u00047|\u0018\u0730lp\u007f)\u001a\n\u0001\u0019Hr5~@\u001c?tG|\u0006\u0006\u0006/?}n\u001d\u057f{\u042d]\u0623%]M$2}we_\u047e\u001d\u0006>\u00071\u0004pj\u0013|Y]\u0011%\u01ea1\u0007|\b\u068f0bzLqbFt\u00d8VkUD\u00b884!|g2hD>^\nbV\u0003l\u0788\u007f]X8i[<G<`}pV`\u001dn\f\u0003t\u058f\u2471\u001fN<\u001d8~`??|~\u001e\u000e<M;?6{\u0000\u0010,\u01b9c\u001a4#o=8\u0001\u0013f`\u07edvYY [d\u0007Cu?\u0013\u0007\u0133}_J\u0002\u0001p\u058bi\u0011 \"s7q\u0012l=\u00180D\u0014X\u0010\u001d[\u0016\u7936z\b$p ,`%2~\u0006\b A+>z\u0588c\u0000\u001c0\b\u01ff\u0011>\u0006P'|:q{~~_\u8cc0o\u001cs_\n\u0012\u007f\u001f\u060fO\u03bcE\u001bM\u07db\u0003\u0004LA\u001c8!pj\u001epiOA\u00068\u04d1)\u0007~{P\u0696gPY\u01e7\u0003\bO\u001cHw\u0016\b|[E'@\u007fKV|CPp\u0001\\;[f\u001a\u000b\u0018J,|SZB'!pQ98|\u0016}gBl\u0010@\u0004EDW)B9Z|4\u001ei@Ri\n%nO{\u001c[#Ex_y,fK\u000br{;w6\u001a=;lqRiLi5J\\Bd1/?pJ\u007fGN\u000fwxpP2)ov\t$\u0010;\u01f9m%~\u000e69\u06a9#\u000eA:A:\u007fn|KI\u0104)2xd\u001fMw'\u001f!H\u0012n-y$j$(+\u05c5h\u0488;\u007ff[A\u000bzNz\u000bgPp_N?v\u026c\u000f~\u0007(f\u0010o\">;H\tZ;\u001fK\u0019\u0012\u0007#6J5vE%\b5a\bQ\u047cG@3\u001c\u001f\n\u001a\u0730\u0105mN`+0mv9?i_\u07a8?\f\u0010\u000e\u001a\u0000B\n4!\u0018\u00103[\u0019;}\u0205\u0010\"\u000e%\u000b{\u0019?=&\u0010<4\u0005v\nhO0\u0013\u000b\u0012\bzNXAQaq\u000e4#\u02c1u\u0011\u0014lr\\\u0529W\u0006:\n\u04012?\f\u000bg\u007f\u001bg\u001aF;Ox\u000f\u0010\fTjV\u000e,#/\u001e\u0015 9>\"^A\u001f\u0006g`\fZ\u001b\u000b,\u0005KY\n\u001f3V\u0472j\u0668kw]s\u0010\u0018k\u001a\\9!\u001b4\u0011_E\u00183;(C\u0016Gq\u001f|\u0019+e<\u000e;6\t5\\>\u007f{&.\u000fgz\bJ!1\u0002\"\u0013v],\u001a\nq.(3\u0019\"\u0019$\u0015]v\tov\u0006n\u0014l\n~dN\u000b\u0019Q2.\t\u00124^d}hg\u001f\u024axyF&\u0016 \u0005O;m2q\u007f1)\u03f9\u000e\u001cU&\u0019\fs69<\u001bCG2C\u001f\u0001\"qkB=b4b~[SX2Mk\u0430m\u001b\t6nB\u07ddNp\fXxepP\u0003\u0018J@T\u0010F\u0013\u000748 \u007fT\u001a\tHq\n/\u0002\n2sa*\u0006/(jvcY\f\u001b\u0019g\u00164jo~$G\u037aw}Q\u01d2a_qy1|\u0002\u00112x=\u01226%GOJ\u00af}2$CH, \u0005}\u001cE/6aD<v\u0019Z8\u00182\u0006|Y<E_dDhU\u0000_K\t'zF*d\u001bW\u010da\u0004>\\l\u001cj\u0015Xivm\u0015I3f)0\u0013\n4\u001c\u0018D\u04614HD\u001b\u001a`Cr\\\u001f\u001f'<F\u94bd#\u007fs%\tQP\u001dj\u0012\u0006fR\u0000@\nO\u29cc\u0011P;)|\u0004C>\u0018(\u0011u\u07c3\u0019\u001bQ\u001e`A\u000b\u000b\u001a3\nKQ\u0014jNv\u0019b\f?4n\u0017\u0010J6r=b^\u0002B\u001cz\b\u001ei^\u0018q\u0017Shn|\u029aW\f\u0007\u001d3b\u00005/\u0007\u0005\u00d9m\u0018q`5\u001f4\u000f\u0010\u0014 W\u0016\u0012:R\u0010L^\u0003\u00bb\bg~(%kQXivB,D@3*\u001fL4\u0012<0\u0010\u0018\u001bEy\u0002xolDf2&xb|\u000fN\u0013\u001a{\u035f4Q?\u0007GZ\u001d\u0005\u05deq5R\u0003.g\u001a&\u00075q\u0017>o@jXqCS\u000b\u000fe_\u000bz\u064c\b\u8fd8{\u035f4m\u007f\u0000D,\u01e0@\u0005M\u0480\u0015Fa\u0011\u0476xl;\u0018\u0005w\u001aN'\tA3T\u0011r}dD\u001f>i\u0011\u0001eV2u\u0013h(\u0002\u0015`\u0016\u0001e#x\u001d:|\u0010O\u000b0B\u057c1\u001c=\u00134\u0015m\u001d1ei\n\u0014P>\u001a8\u0004\u001d\\fM/M=\u007f\u0007f\u0004\tBQR*\u0015:by\n\"\u0017J\b\u0093\u007f\u0011{y13T`!w8$dJ<b8\u001e\u02f90q^Qm_X4}.w\u0011255\u007fhJ|H\u0011_;%\u0018\u07cdl\u00159)7\\B\u000fZ2\u000f\t5.q\u0006\u4a2cdo\u001b<\u000e#\u0019\u001fO\\\u0005>o\\\u001f0\u0012\u0000{\u0004U\u0004O\u0014~E^*R\u0004W\u0013\"\t\u0001C\u0013yVnsw\u0007*[@oFC\\\u007fy9\u0019r)(\ny{vg\u05a3t$.leWl<\u00b9a\u00155j\u001av\u0019\u001440V\nq3\u007fB3es\u001e4>3\u0016/%\u001d?G\u07d1?8\" \f?\u0017)\b'\u00022,\n\u007f2\u0015\t2l?i\u000bpH\u00a1\u001bK\u0019\u001b\n\u001dF\u0018#\n_XK5?\u001bl{>\u044c|\td\u0019\nR\u068bqd\u0005;\b\u0013Me$M;2p'\u001e\u0002YG#\u00191,\u0002\u8fc9\u8ffd\u000f\u007fD/\u0001\n\u0003\u0003\u0003`C\u0018\u0001'\u001a2:kbfc'9c\u001f\u007f`^\u0013B \u0005F\u0003\u0015\f2\u001b8\bf\u12382#\bBf\nb\u0013\u06e5\u0006\u0003\u0005\u0015LL\u0019VM6m\u0018\\N\\ql\u0013}\u029c<\u007fY#p8ws$qC\u0010\u001b/z2\u0001k\u045dC\u007fj\u0003(Oh\"\\hZv\u007f$\tRxwW\u0002g:\u001c\u0014b1)\u007f\u000e\u0012,\u0001PqExFs,\u0012\u0014?i\u0330:`a\u000b\u001e=(SH\n|w\u0014\u0018y\u0005\u007fAB{PtNPFJA\u0017;p\u001bG8*g%\u00196\u0475q[}\nme\nl\u0090\u0018k\u001a\u07a3?p\"b #9\bO\u07b0\u001fF\u0016\u000e%\u000e\u0002\b/HP\u0011^`1I,+>\u0018& ^\u000fI0\u00cb@GT8x\nP\u0005Y\u001dPk\u001e\u0017\u0015\u0005\u0004k_j;y\fUaf\u0003\fYY\u0013w) nV5\b| e\noR% ;\u0001\u000fZ2t\u0013;\u001b\nZkA;!/syuFGG\u07fdCR\u0002\nHAk\u0016!O,>\u001ae\\\u001f\u0005wG(_1\u0000,Dy/\u001c\u0002\u00175){{\u000eQ\u0001XaW\u0007\n-.23S\f\\\u0000|\u0636\u0019l/\u00195\u0004i\u10c6\u0007hv6?rL8\u0019\u05863\u0002\u02ad\u07caw9o4\"\u04ba!\u001d\u0460qKr[~^u\u031b>\u00070\t(F\b\u000f\u0013p\u0001\u0004\u000bqJ$\u01ac@yFXEpq;3\b =\u0000;F\u07892\u0016HK3?'f$X'kl\u0000\nx\u07fd\u001cA*c::\u001a\\?*<2B\u001f(B~\u0001hj,\u0016h\u0002A\u020f\u05cc8\u0017\u0007j'c>w\u00012G56<\u001e\u007fG8'^!R\u0011\u0003\u001eDYt\u0012f\u001c\u066d.4\u000bG\u0012\u0001\u001f\b\u0003~'\u0013\u0018$1o\u001aG^3\n\u0794\u0014i\u001a\u026d\u0005-Os\u0017\fXaC\u00114\\\u0014\u001d\u0217F^N\u0001@\u001c\u0015\u0005?qo[QrR\u0003^ggs$\u0016}\u0002~<\u007f\u0316+k|\u0018\u001f\u001f}opo\"\u0005\u0001D\u0019@\u0214v\u0018l\u0018\"GbR\u0013\u0016\u0010x8\u000b\u03a0\u0001\u0013YlW&)I`x\u1797\u0005_\u001a/7\u001b\u001b\u0521dz5o[HP\u001a\u0015q&\uf66d'vPM~0\"\u000b<\u0018\u007f\u00019;S&\u0003|G(\u0000\u000egOvk\u001c\u0013!A0\u0001E8\u0003\u0697\u001cg`3,e}\u0004JThS8\u000b\u0004}xv)\u0741Cts\u06e7CZh(~\u001b\u0017\u0001\n\"\u001f\u0019\u001f\b!\u0002%\u0016\u0015\u0016C5{sG+\u0001\u062c+;\u000ec\u0019@\\\"F-b%9\u0436\u0019;o6!&\u037bc\b\u06ac?N<\"\fQZ\u0006lo\u70ab\"|W\u0000\u001d\u007f+\u0007b{)K\u001581Q3j Z;?\u0003\u01cezD<D;\u07f5~\u0011:R/k\u00191\u00159Ph7S(`\u0000X\u0014\t9\u000b\n\u07b3(gsa|%?+J/\"\u000brBD\u0005'nVO\u0007C\u007fhV?O\u0001\u0010nX\t>\u0010D\t\u0004\n\u0001B\u001a\u007f\u000b$\u0010<Il>\u0002c\u001dpS\u0005\u03f8a72(i\u019f\u00073h7(/\n9~.G\u01b0eBl\u0018a/nWq4\u0005y-'\u0006,\u0000\u0105u%Iy\u0018\u0016S\u0432c\"#s,SG\u001c\u06f4po\u007f\u0003o]\u04e1(\u0004yHp\u051c\u0011\\y}\t-i\u0011B_G\u00102rOBLd7\n\u035f\u04fc\u0018QH\u0002pdJ\u079cd\n\u0398\tU^u\n}\u000f\u0005\u0018lkP\u0014\u04bd<x\u2f746/\u04040do\u0515j\u0013{^d\u0019\u000e:2d\u0015F^w\u000fD\u0015\u0000\tsD;\u0000\u001c4_\f\u0001JX\u0004\u001e\u0016\u0315I!w\u069bA#cG=\t\u0004f-&49a\u0000LESo\u001b\u001a\u001d7\u0003G26\\7l0\b`G6h0*8#\n^.(Kv\u043a/\u00194.x-+iD)C[U{>\u001b\f\u0712g5t\b\uda2a\udc11Q\u0003DZ0\tNtd\u00142\u0018\u0017k\u026bEBP8C)7@4b\u000eU0\u0010u\u52cd\u00008GJ\fA@\u0014J\\/\u0016~\u000b\u03b9g2;4\u000eBg/K+aG~?\u018b\u001cQ\f$/\u00052uc\u059c {-\u00015s\u000f\u0019yX`y\u033eY8'\u0017Y=?}1\u0007\u0004d\u0018yKq\b\u0010\n':\"TF\u001b_~\u0017\u0002\u0018\u0004\u0017z#\u030f5\u000fs\u001fO\u0018eqO1\u0015i2\u001f*y\u001f\u0011V!\u0768.\f{S\u0000\\+WZ@U\u000bJ^\nE<x6P\u0000/z\f\u0017>%\u0003k\u00fd%R@zqI/W\u001fF?\"\u0000Rk`&*i{m\u0471b40@`\n(\u0000C\u0018J\u0016z\u001c\u0001A6=f4GQ\u0014D\u04fcM\u0611}\u0010yl1\f?P;\u04ee\u0001Vdb9\u00126\u001a\u001b\\SX,HrW|&'\u00031N\"\u0002EsJ\u000el\u007f\u007f\u007f}W|\u0792\u007f@by\u0001\u0000\bL\f\u001a\f\u0012 F\u0011qZ6\u001f34\u0000\u0014\u2261\bl\u0004Zp?a\n\u0018W\u04d3\u0007^PeD.8\u0600\u0006el\"QBn5p;\u0012\u0410W\n\u0010\u0006dByxqXh(]\ntoF\u0010!lY\u9dcd[\u007f Bf\b|no\t\u0018\u0004R\u0004\u0018\u0006,\u0004/./(\u03c7m\u00a2\u0000(&RVq\u0000AMew3r8\u0014HB8k5i}+)-\u0002hotUV]\n\u000f}Y\u00152\u0012\n\u0018\u0019/yNeD5\t8o)\u8239\uee94mw\u03bf\u0010da8\u001e\u001f?/_Kx\u000bH\u070arR+A0\u0016\u0004c;\"x*\b*q,l1V/0\u001fGaJ{P%.^\u05f8\u007f+\u0010@\u0007\u000b{kj\u02a1!\u000b8 o\u001eO00\u0012?\u0004\n}>\u0007\u0019NZbyACG\u0003l^3`|:>aLc\u007f?<\u0014\t\u0003\u001a|E\n!Nq0\tY\u0002GX\u000b')qv\t3w|\u03f1\u0002MT\u00a1\ue4c2\u0016B\u0007.H9a]XD/\t0Y\u04aa\fe1\u0013ChT\u0012\u07dcg\u0014\u000172f\u0019\uf944\u058dcf))Q36n,5FGopF\u001cF\u0003A!\n3h\u001c\f&5B\u0011d`9Ht\u0019h\u00025M;*\\D{<$hB}C\u00015gh$\u0001aT8_f>\u0013X\u001f\n\u000bePVd\u001e<Sb\u0010y\f4\u23b4so \u0157\nM~3\u0013S\u037e\u00066>^1\f\n3[\u000f\u0019>\u00160Y?lOx%\u000bF.a*%j9pd8(2{F Xy\"=\u0019o\u0014\ne,ee\u0007N\u0007O@q\u001e c:,2\u001b6Lh\u0016FVU\u0001+F\u023a\"5\ub257z{\u0018Q\u0015)E\u00051i\u001fT\u00106Ly\u03be\u00bd=pn\\!U^8\u001emg\u000b\u001ck\u007fF\u07f5?\u0382bT\u0001\u0003A}\n\u0014(72EL\u07c6E<q{\f\u0019\u0019\"Rdf%!\"2wT\u0002\u000b\u001e5k\u0000x,GC\u0406!m\u000eu\u000f\u0010|)kJ\u0005w\u0005lc\u001cS\u000eP2\u0006Vn\u001a7^8\u0003?\u0002\u007fgV\u0015\u0018\u0005\u0014\u001bU6Z\u0010V,\u001dd8\u000f&G%\nV\"\\vlL\tH\u0004qq\u0002\u001aS\f\u0003\t@au\u000f\u0014\uf318\u0014b&i\u07b3\u0014Lgoe\ud2467\u000b*\u0017*.\u025c\u00a3[cc\\Q\u0017P\u0007\u0012\u007fak95x}Q\u001f7JFG\u000fE\u0010\u000bV\u0006CEAf l\u0378($\u000f-p:\u0451my\u001eVj4^\u07e1)\u0001eK`F_..eP9j])|y\u0019\u0012x\u0494\u06eawV>~qX\u0016L]OP&6g;d\u000b\u02f2a\u001c\u000f/\u06ecc\u001b/1:M:@\u0011{\u0003Z86Fl\u007f\u001f\u007fg;\u001b7.\u00e4~}T@F\u0484R\u0019\u0019F976\u001a\u0019\t\u0014a>b#2G\u00027\u0007!\ba$V?\u0001\u001f\u0013\u0007? |c\u001ep;h\u0014i8M:EzQ6wL\u000f8\u001a8+=*Y{j\u001b6sed?:e\u000eF\u0010{UP6a\u007f(`$Gm\u0012.Ge\u001cv/;\u000b|y\u0012%\u0006Dd)>+\u000e>\tc\bA\u00177Evg/\u00195\"g\"6tKY#Y^YR%1;y\u0017\u001b\u058d\u05dfG\u0019KL_\u001a\u00180??_q}W\u000eM\u0016T\u0014v\f@\tE\f;K'/B*`<a;@A\u00050ZUF\u000b\u001c\u0019;\u0005%\u014fr\u01a68qh\u001e\u0018:V*\u0648xf]VZq&\u0013J\nK\b\u001c\\I{;Px\u0018v@z\"\u000bmFG\u001b6oV+K$:ht\u0019\u0017:j\u069dT\u0014\u00152~w \u00160\u0007q` \u0015P|B<\u06e5\u04b1\u21ceZ_\u0012x#\u001a%\u0017\u001d:|\u04ee\t\\\u001c>9J{R'}p\u0011'B\b\n\t.#u,\u0007\u001aj\u0004m\u007fc\u00116H\u0007=?/\u001d\u0017}\u07da?LB\u001cwM\u001cW\"hlb4Pp\u06ab@FXW\u0016g`Z8V\u0014J8qE]\u000eg%\u0521#4te7\u0014\u0016lk\u000b\t|/\u001aBV5nC\u0730\u0011\u078dw\u001aQ\u000f8\u0011\u0002\u0002\u001e'\u0460b&\u06ac&\u0003Z*eA\u00172r9??#(\u0010>\u00122D\u0012'L#\bc\u007f4&$\u0728\u0005\\ \t#`\nzM\u001b/\u000b{Ne\"0\u000e\u0016\u001446@\u0416?K@N\b\u0440\u041cK_2# Vuc>\u0005'[{c>y\f/pZG,]5^B\u0010^o4,f\u0004CS\u0019\u0003\u0337sAG\u0297\u0260\u0003PF+6?\u007f\u007fwI\tv\u0010OF\"R#0%\u0004H\u013a)\u0014\u0006\n\u0015+\u001c(@\u0013/<\u06e5hAY\u0018t\u0011I\u0012^<W\u0011\u0012\\\u041d\u00a6\u0000\u00102?\nCt$>d4\u05fb,\ty\u001ah\u0000s=H1T\u0014\n\f\u001f\u0004\f#\u001a\u001bbROHom\u0003:#E\u0007\u1efe+\u001e\u04da-Dw\u0208[Yo\u0003\u00114\u0000!(\u0012O3\u04a4N\ftBN)Z[k\u0000^\u000f#DTEWF$I\u0018B\u0367\u000b4m+7XN~Z\t#mK9F\u0018\u0000#\u0007\u00012\u0006\u001b\u0004(~s\u0004$k\u0001}\u0013x\u0017e=]sQ}_q\u0016u\u029a<6r$Cx:eU`TP|'d0h\u001c'~8\u0003G\u0001 \\\f\u0013,p+R`\u01a2\u0012q?w\u0016\u001c\u001e\u0003b;Q1\b<m\u001bxb@#\n-@Av4\"^NbG#6\u001b\u0017-!\u0682.\u0004pw7,(^\"\bY\\ \u015bWxl#{hL\\9+|An\u0016av^r\u0005\u000e\u0002\u0441\u00159\u0012\u0019 ^\"L\bF\u0012\"c6\u00020\u0011\u0016Aou\u001chL\u0007N\u064b\u0011xn\u00acGd^3\\Hn\u0001bZ\u001bS\u013a`b0\u0018/\u0003zO\u001d\u02b3\t\u00109\u0007y(\u0017\u0273Z\u001a*6\u010f;\"c'%G\\0ix\u00073\u02e0\u000bjQ65?o\u000b\u007f\u0010!\u0001QH \u001d\u0005\nBhH\u0011\u0004X0zH\u000f\u0004vJR\u000b5+`b3n.Wta?\u0010f\bL(\u0006I\u2286^)\u001cF\bG`\u0000..\f\u10a3a.&Zy<1N,qCYA'\u06ba1a^\u0593\u0000<\u000eh\u074acOo\u0006u\u007f\u007f\u07be?\u0000\u0011YHpa\u0016r'U\u0001vj\u001cW\u0305\t0#\u0005o{^+8\\\n@U`\u0003\u00115\u0019Su-rhP\u0016ti\u00185\u0013q\u0017gx|Af}[\u0019J>\\\u0010e\u001bs\u020c\u001c\u0000\u0015\u001b:*g\u0004p1\u0019\"\u03f6\u0003\u0017:\u0018\u001fW0oR\u001fL43rC\u0010\n(G0f&\u000f(e\u0214\u07ca2\u0015)%\nH\u000b\u0474\u01a5H\u0018Pq-\"8R,~7f\u000f\u0019\u05cd<-\u0010r\u0010Tia\u07a0klwcH`D\nnKRwc\u001d\u000f\"\ua061G9\u0015#`\u001b4\u001fv\u044bW\u000e\u0003~\u0012OGCw:\u0010WI\u0000};\u0005D\u0002 .rkAHcCP\u001bOQH\u000bJ\u0006o\u0355\u000bw\u04b3\u0001>+\u0458\u001c/jTLo}Re.|\u0016mS)\\l\u00004YL\u0420p*_\u0633k\u0093`6G5kQlQ0Rb:<\u0012<+F\u0016n\u0016\uf2f5)i,~\u0625/&n\u04c5\u007fo8\u00f5\f?\u007f^\u0001)8\tD>\u000bi8\u001cE=\u0011@\b\u0011\u0012\u000ex -@^\u048d_hB-)jI\u0010X\u0014Q/\b6\u000e\u001fVU\fCFc\u0005\u031f|MkE0JN\n\u001e[\u0283\u000b\u00ffx=m\b1Q\u0007\fo/l GB\"\u0217a\u00008Yd\f\u007f\u007f\u007fu{\u0004],\u0007A\u507e&EsK\u044b\u0019\u000bkeo\u0000u\u0000yAm\t\u0017o8AE\u001684FKd\u0018e\u001dJwd\b\u0016M\u001c%\u0012\u0765O>6XaZ\u0005L\u001cz\u001d\u0011K\u008c8&/h@\u001aAc\u074f'iM]){x\u007f{7\u0011=w\u038d8+\u0001.[?o\u0005]\u0019_\u000b(9)\u0005\n\u0002\u000b\u00182\u0002\u0005\t\u0006y\u001f^\ub419X8w\"nqa3G\u0011\u0014\u001fhOR\u0017v\u000fidLV\u0002\u0015\f\u001b\u000f\u0016~\n\u00154>\u000fMF\u0002\u000e\u0409\u0007@E7\u007fHl8\u07c2n\u001e\u0019\u02c3,b'k[\u0172\u0002<\u001fH\nx\n\u06b4\u0005\u705dJC\b\u000b?\u0001\u0666$\\E|\ucd54Xw\u0017mc \u000eD\b\"3;\u0005K\u0133\t|Pk\u0002C5ZY\u0010s4\u0012\nfe7E#3\u0012H?X6R\u0000Rz\f{\u001d;YA\u0006t6\u0002\u059dUCm#NJ/'4^4\f\u0016[`\u001a\u000b\u0000\u0003Iy\"1*D\u0002\u001dn[a;#f~\u000b`\n\u001cA\u0004\u007f\n,\u0013J\u001e{pf\u001cyN\fa\u0540\"vb\u000eP)<Pr\u0141\u02389\u02c6%n`\bFGG{\u0007_LA\u00060P\u0001\u0010\u05a7{;\b(eh9Cx?\u06d0\bf(34p\u0005\u001fM\tS\u0014cs\u007f\u00148\u0013{h\u0010>\u03aaqB\u0010`Y!Ha9}\feD)3)P\\\u04ef\u3efe!\u0010qB:PNt\u0016^^w+~p b1\u078e9?/\u007f`ExM\nN.8Or\u00c540qBG]\u0006\u0017\u001f\u0017s_\u0002P@s\u0302\u00071[\u001a\u001dT Xl6h\fqq\u06d6\f\"\u0377n\t\u001c^])\u001c\u0005_y04d1w}|V\u00066 '[\u001bR^D>m`?cmCuD<\u0017\"Xx7\u000b\u0002\u001b|\u001d\t1>*\u0001\u0011\u0001s|\u000bG4\f\u001c\u001b\"\u0017.\u0003bK>#;~nx\u0007XD\u0012\u0015_\u0003#fW2\u0017xp7\u0003h~)\ty\u001eBcr1N9\u0002B\u000e\u001b\u0010\u0006t\u0353F\u000e\u05f8X>\u0015k&k\\\u001f\u001f\u007f72P@Dv\f\u0001\u000f#\u00011\u0017 \u0000\u0002~.(bDAp\u000bSp\\FT\u00a5l\u0338\f\u0002/V1a3g\u0005&]\u0014\\\u0508\u0016\u06f12;|r':9<R\f;Q\nt\u000fl\bFl\u0014sW\u000b0\u0010Q(#\u03a0B2}w\u02bd83\u0019h@CgkfwZ3\u00196??oHcx\u0017:\fH:CqR\u0014\u000f\u0014\b_%q3\u0594\u03c4Q^'|\u0440-Rd\\_\uff20@Xos\u0002\u001d=k\u0011*&Jz\n!\u001aL\ueccc:w%yA9^T2l\u0004\u0014\u007f7\u00073\u0333Bs\n^\u0010Q\u0016\u000f;\u001b8Wt\u001bS\u0003\u001cyr\u0014^:c7\u05e0K(j\fEC\u0011)D\u0016\u01ba;(D8\u0019\u0000Wp\u0005|;2~A\u0006s\u0019\u0006\u0000\t,P\u01ba\u0316r\u0002.mi|i[ST@# eq,zs]\u001ae\n;eA\u00199fY*cC;uB\u001d@\u0007A\u0007O,R\",{\u0001\u0005R0_p\u001f\u001f\u007f\u001a\u026d\u0011\u0003O\u0011T*gba5&\u0015QT]qq\"#'cMOEI\u001c\u00117TFHC\uf89cB6U\u0004\u0007\u0004/\u0011\u0006\u000e^x\u00074J\u001c\u0018\b|\u001c2*TT^S\u0007\ny^6\u0017\u0010\u000bgJDZ{r\u0017f5g\n\u001e)5\u001f\"y\u001c0\u0019`fp\u00011*2^\u0014ZX$\u0004\u0019o\u0002v<\u05ca\u00108\u0016 \\&d[c\u000eaVJP_\u04f4\b-{)\u01f9\u0010\u007f\u010dk8x\u0694\u0013\u0018Y\u0014;]\u0000k\fRHv#h<WJ,\u0016Ec\u0015?/\u0002Q\f\f\u0019@:\u00164o\u04ea.\u0016e\u001aFGc\u0413cG\u007f\u0004,4\u0548i$\u0019:2 Bg\u0007\u06c41\u0225ES\u0124 \u0018\u000b\u0010Qg\u04b13*uHX\u007f\u0017AgA/4\u0010t2\u001f\u27c6\u000586\u0014R\u0283\u0018\u000fA\u001b|\u0016\n\u0001\u0015,\u01dbEaQ\u000bY\\'\u001c'o;dqx(\u0019gGGs\u0003&69\u0006H\u0007\n(\nOf7!-\u001c\u0012E\u0485\u0010V\u001dE:\u01d01.Hm\u001b\nd|\u0014f\u0600e\u001a\u0598o`f\u0014\u001b>:)Il\u0013\u0007\u0018\u0017\u0019P\u0006\u0001x;7\u000eF\u0015xVr2+3\b1FG<6\u0017:\u0013\u0005\u001cZdE\bf@\",.+i\u0528%nT\u001bX\u0003.\u02b8m\u0012mq5k*J\u0005q_\u07fd\u0015\\\u0014q>\u04ce$!\u001c\tN\\%p\u0014&nN@\u02aar&Mn7\u000en\u0012;/\u0017\u001a8{H\u001a\u0004j3\u007fa;\u0018xo@\u001f|\ucc225K0,\f\u001c`bx}S*\t\u0011#\u0006F\u0005\u00173(lL\u0012G\u05e5pP\u0006\u007fc\u0006 A;}\u010d\u0017aG\u001a`\u07a5y=3Pe#tF^\u06301\u0011=jC\u007fu'\f4d!\u0018\u0018O\u0006O#\u486a\u000bIms\n\u0113\u001d\u001a0GU21oF\u07d5?x\u0000l\u069eHIHk!F,-\u0007\"\f\u0018Q)pcTt\f\u0238(\u0000~\u0011:KR4:\u0018\u05c6qE__V.\u03f9\u0004=-\u001bh1MQyi\u04adFZaI>\u0004\u022dS{cpMUs#qA>]K0{\u00e1M<mQ.\\XV3\u001c\u001f\u001f\u007f@b;\b;\u000bZ8%F\u0002[\u0010 9Fcu\u00051\u0019\u0096\u0014\u00125e\u00d5mYY\u0010\u0015&\"k!P0X\u000e1\n\u06549j\u0014\f7(\n9!$7V\nw\u001bq]\nxnio\u0016\u001diQh\u0193Ke\u50dd\u00192<6Y\u0007\u001c\u0007@vzJ\u000e'W\u001aa\u001cds{5&\fdVC5d4(9@\u0002\u0016?qoP@\u0006M\u0013\u0012B3\u073d^.}T<\u001a\tp> KuRjP*\u007fh9\u04d3\ng@\u0006e\n,{$*-*|9K\u001a\u03bf:>A\u007f&\u01f6\n\u001f#2\u0014E\u0010\u0002\u0013\n\u0004#|\u036eH]g\u0010\f\u072c4\u0348 n5'43+{mh'\u0393Ml\tm\u0000qE\u001e\u0015P4vbHd\u0002iCC\u001a{gR'w\u0006\u0011m20\u0789\u0001Y^A{'\u001a\"\u0137\u0018\u0006N('\u0003\u0007;u/\u0004\t1??~\u0006Dr&\"9XD\u007f<\u00afL\u0000\u0018:20\"1g\u0011\u000fSq=RdV(\u0010C\bc\u01338,B8\u001c\u0017\u0015\u0005ij\u0002\u05d9\u007f+%\u00129\u0019BX\u0017!\u0019\u001b\u0019\u000en*J!\u0005%M\b\b\u048dft\u00197\\co''\u23f8\u047a5FGG?\u001f\u007f$\u0002@\u001cN\u001a8\u0018*\n!\bg\u0004Bc9\u030b\u0018\u043c^(GF>xR$2NwQ6$+?\u0410\b%\f;\u0019,\u0014pMX\u0000owo8\n/g\u000b\fv\u0010y\u000b.\u000b)w\"\"\u0019/#\u02d1\u0018\\o\u0115A)cOc5\u0004=j7TN\u0018F9<V\u001b\u007fA\u0011w~:!$\u0221Lh'\u0013F2q\u0013\u0010\u0011\"\f\u001c )xHBzI\u034bw8;DPC%e7/\u0018P\u0002\u0016!ON9c'K8\u000f(\u0010FI@\u0004r2!\f\u0012Q\"c\u00068\u001eEO*j\\\u045a:?R<\u0018\n{Y@Xd_Q&Qq\u0014#66c&z[7nnG\n\u001b\u0010Ao\u0007\"2\u0006E\t\u0005\u0011C\u0006\u001b\\\u001c\u00198u-\u0012x{U\u028d<j\ub17f\u0005\u001e\u930b\u00003R~/\u0013twi\u0223fUhC\u0018q\u05dc9q\u000bz\u007f\u0016\u007f\u0425E-!\u001d'}1\u001e,D\u007f#\u0437L1\u0012>4dd\u0016\u001bo|\u0001\u0002!\u0004t\u0017IK>\u0004R`2\ud162\u0011\to\u0014EK8\u0012 \u001b\n\f2\f2\u001483^6i\u001a+C\nnE?5#GF_zi\u0000b\u007f&=AK9\u00aa@Q\u0014\u000f/@t\u0016Bf$\tI\u001e\u0014F\u000b\u0005\u001c#Ai$`?((X\u049b!\u007f0J kY\u000fGR 6ed8r[\u0003SQ2h?|\u0016\u0014>q\u01e8\u0013\u05f3\u0018<a;S/\bQ\u0002DL\u0018\b\u0016\u001bEks\u0018\u0019'\u0466]lB\u030d<\u001c\u02be\u0507zI/+ge$\u0013\u007f\u001e0\u0445BZL\u0011K\u001a\\|J\u03e2F[K=\u3d94Xg\u001ap/=(\u0010\u0014@hyWm~\u001a\u000bH\\\u0001\u000f4bM\u123eO\u0004_|Ao\u001cFQg\u0015oLqz\u0006)\bPF\u001b\n\u0003\u0018\"*\u0011=Z\u0012~8<\u000f\n9M(9od@>?3\n\u0000oW\u001fpQXI`#\u001a\u001bg@%Ef\tH~)C\nU#4\u0002#A\u0081m\u00112\u0007\u0011B\u0018o\u00f8\u001d\u001ab4 31C\u03c7Z&C#/;:\u001e\u00062\n\u0006\u00069\ubfa5\u00199\u0011)XGD8;}_x?\u001fq:QQ\\\u0214\u049363\u0017\u007f\u0003\u00b26??`p\u06db#e2q?`2w]Vk\u0006{\u0506dAia\bf3nE1\u001c\u0220\u0013\u0012E5n+b\u0007aDU\"\u0001#<9O\u0007<?>,\u0019\u037f8ccp3\u053a!,So\u00176\\\f\u0012,S\u001d\u001c(*F\f\u0002\nN\u0000\u0015(\u0007w\u0002\"A>;;Dq.a}FGG?\u0003@LQJQ\u001b'wnNqK\u001b\u001eijN/6J\u0200\u00068Ev*\u000f}6f|\u02fef7A79k|Q@2@S1H\u001c~o\\\u0017B\u0014^0#~,\u03ea?\u0006S/\u0003\u0474Kd\u001ahex\u07c9{\u000f^0nx\ns\u0011S^l\f'\u00105 F\u00028pB\u0001\u0019(\u000e\u0014LeH7nU/\u001980dR\u0019}n!t@8v\u0012zc6L]S\f\tCHrW,x0vz\t\u001cSZ\u01cd\u001f7}\u007f];\u06c589#\u0091fm\u0003gck\fS\u0007\u05cb +!\u0011\u07f8I-\u0288W**#\u001aa{S\u0011Qx\u0016eU\nQEAZ1\u00198+5a\u02f80Z\u001aX(m'!\u0232`>0o\u001b<G\u07d0o_,B\u0018WEhqv8\u0016 cn\u0006\u07d9\u0012\t5\u0012Z+h\u0001\"+$e.p6o\u000baI$=\u0014e\u0010s*>=+\u0003zh`|\u0005r\u0015N\u0787:7,#[z\u0696#'*=\u0005%qc\u0003\u0013Ve0[\\7sc|mz\u0019IN[3_aOoW\u001f.\u060e\u0443&B)I.\b\u0323#4\u00be!g\u0017aQo`\u052c\u0003\u001b\"\u0346\u0015h\u001b(P][\u00197i\u0004|S\u029b\u001c\u0006o\\B_O|7!C \u0018Y0k'b'<8\u0002\u0708O7&.\u008d5Y\u0019_\b1\u03a3&\\? JnJ y/\u001eR\"\u0589-\u000bS&#Ivv3\u001e+(\bpuo\u007f(\n\u00b5\u001dTB^|+D $/p*%/C(\u0007x,J>\u0019/\u0017\u0016KJ\u04709Ol/$/zL:2\u8fcdg\u007f\u000f6\u0000\u0001\u0010\u001a\u0010R~P\u06ba`j\u0012-R r\u0004\f/\nx>\u0014k~13\n\u001eq\u0000?jVK2\u0007\u001c\u0007a\u0003]\u00158:\t\u001f\u0103\u0462'6\u0006eyg@J\u001f\u07d40 ]9\u0454\u0001g=\u00114\u0005\u0019YSw\u001b>/8??oK\u001f\u0389/E]\u0006\u0005'\u00b7\u000bHB~h\u0014(\n s(rU^IcM.JD\u001bcJ\u001d</\u0010b$P\u0018\u0012}kp\n\u0004qY3\u0014P<uK32\"t\u001f_8\u0003qX2&+HyFSRbR.An\u0004\u001bX0kY\u0005I!Zyf\bm\u007f\u007f\u007f{\u0001\u0017\u0011\"|Tn\u0016x\u0014f\u000b\u0599\u0013A%l(-XDGf3\u0013\u001fPPT\u0007T\u0013E\\\u0006\u0015dt\u0002;\u000e9N\u0019_\u001cHa=B\u0011X_\u0019lA\u0013 \u0013\u0001c4uK\u001a\u04b0xj4H\\o54l\u0017\u001doza``{Y\u007f\u001bl\u00079Vk_\u0007\u0000\u0000\u0000\u0000IENDB`",
      "purpose": "",
      "content_summary": ""
    },
    "plugins/music/Get-Artwork.applescript": {
      "path": "plugins/music/Get-Artwork.applescript",
      "language": "unknown",
      "dependencies": [],
      "content": "--get current path\ntell application \"Finder\" to set current_path to container of (path to me) as alias\n\n--get artwork\ntell application \"Music\"\n\ttry\n\t\tif player state is not stopped then\n\t\t\tset alb to (get album of current track)\n\t\t\ttell artwork 1 of current track\n\t\t\t\tif format is JPEG picture then\n\t\t\t\t\tset imgFormat to \".jpg\"\n\t\t\t\telse\n\t\t\t\t\tset imgFormat to \".png\"\n\t\t\t\tend if\n\t\t\tend tell\n\t\t\tset rawData to (get raw data of artwork 1 of current track)\n\t\telse\n\t\t\treturn\n\t\tend if\n\ton error\n\t\treturn POSIX path of ((current_path as text) & \"Cover-Default.png\")\n\t\treturn\n\tend try\nend tell\n\n--create path to save image as jpg or png\nset newPath to ((current_path as text) & \"tmp\" & imgFormat) as text\n\ntry\n\t--create file\n\ttell me to set fileRef to (open for access newPath with write permission)\n\t--overwrite existing file\n\twrite rawData to fileRef starting at 0\n\ttell me to close access fileRef\n\t\n\tdelay 1\n\t\n\t--resize image\n\tset the target_length to 500\n\ttry\n\t\ttell application \"Image Events\"\n\t\t\t-- start the Image Events application\n\t\t\tlaunch\n\t\t\t-- open the image file\n\t\t\tset this_image to open newPath\n\t\t\t-- perform action\n\t\t\tscale this_image to size target_length\n\t\t\t-- save the changes\n\t\t\tsave this_image with icon\n\t\t\t-- purge the open image data\n\t\t\tclose this_image\n\t\tend tell\n\ton error\n\t\treturn POSIX path of ((current_path as text) & \"Cover-Default.png\")\n\tend try\n\t\n\treturn POSIX path of newPath\non error m number n\n\tlog n\n\tlog m\n\ttry\n\t\ttell me to close access fileRef\n\tend try\n\treturn ((current_path as text) & \"Cover-Default.png\") as text\nend try",
      "purpose": "This file is a script for SketchyBar plugin named 'music', which aims to retrieve and save album artwork from the currently playing track in the Music app on macOS, and optionally resize the image.",
      "content_summary": "The script first determines the current path of the plugin, then retrieves the album artwork of the currently playing track in the Music app. If the format of the artwork is JPEG, it saves it as .jpg; otherwise, it saves it as .png. The script then creates a temporary file path to save the image, opens the file for writing, overwrites it with the raw data of the artwork, and saves the changes. If the image size exceeds a specified limit, it uses the Image Events app to resize the image before saving. If any errors occur during the process, it falls back to saving a default image."
    },
    "items/transmission.sh": {
      "path": "items/transmission.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\ntransmission=(\n  label.padding_right=4\n  icon.drawing=off\n  update_freq=5\n  script=\"$PLUGIN_DIR/transmission.sh\"\n  click_script=\"open -a /Applications/Transmission.app\"\n)\n\nsketchybar --add item transmission right       \\\n           --set      transmission \"${transmission[@]}\"",
      "purpose": "This file is used to configure a SketchyBar item for monitoring and controlling the Transmission BitTorrent client.",
      "content_summary": "The file defines a SketchyBar item named 'transmission' with specific properties such as padding, icon display, update frequency, script for updating the item, and click action. The item is added to the right side of the SketchyBar."
    },
    "items/stress.sh": {
      "path": "items/stress.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nstress=(\n  \"${notification_defaults[@]}\"\n  background.color=$HIGHLIGHT\n  icon.color=$BAR_COLOR\n  icon.padding_left=$PADDINGS\n  icon=$ICON_STRESS\n  label.color=$BAR_COLOR\n  label.padding_right=$PADDINGS\n  label=\"Loading\u2026\"\n  script=\"$PLUGIN_DIR/stress.sh\"\n  update_freq=1800\n  updates=when_shown\n)\n\nsketchybar --add item  stress $1               \\\n           --set       stress \"${stress[@]}\"",
      "purpose": "This file is a SketchyBar configuration script that creates an item named 'stress' in the SketchyBar menu. The purpose of this item is to run a stress-testing script and display a loading indicator in the SketchyBar menu.",
      "content_summary": "The file defines a bash array 'stress' containing various configuration options for the 'stress' item, such as its color, icon, label, script to run, and update frequency. The script then adds the 'stress' item to SketchyBar and sets its configuration options."
    },
    "items/volume.sh": {
      "path": "items/volume.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nvolume_slider=(\n  updates=on\n  icon.drawing=off\n  label.drawing=off\n  padding_left=0\n  padding_right=0\n  slider.background.color=$(getcolor white 25)\n  slider.background.corner_radius=12\n  slider.background.height=8\n  slider.highlight_color=$HIGHLIGHT\n  script=\"$PLUGIN_DIR/volume.sh\"\n)\n\nvolume_icon=(\n  click_script=\"$PLUGIN_DIR/volume_click.sh\"\n  icon=$ICON_VOLUME_100\n  label.drawing=off\n  icon.padding_right=1\n  popup.align=right\n)\n\nsketchybar --add slider volume right              \\\n           --set volume \"${volume_slider[@]}\"     \\\n           --subscribe volume volume_change       \\\n                              mouse.clicked       \\\n                              mouse.entered       \\\n                              mouse.exited        \\\n                              mouse.exited.global \\\n                                                  \\\n           --add item volume_icon right           \\\n           --set volume_icon \"${volume_icon[@]}\"\n",
      "purpose": "This file is used to configure a SketchyBar item for displaying and controlling the system volume, including a slider and an icon.",
      "content_summary": "The file defines two SketchyBar items: a volume slider and a volume icon. The slider is configured with various properties such as color, corner radius, height, and script for updating the volume. The icon is configured with properties like click script, icon, padding, and alignment. The SketchyBar command is used to add these items to the bar and subscribe to volume changes and various mouse events."
    },
    "items/music.sh": {
      "path": "items/music.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nmusic=(\n  background.border_color=\"$(getcolor grey 50)\"\n  background.border_width=1\n  background.color=$TRANSPARENT\n  background.image.corner_radius=4\n  background.image.scale=0.6\n  icon.padding_right=24\n  label.max_chars=24\n  label.padding_right=$PADDINGS\n  label.scroll_duration=100\n  padding_right=$PADDINGS\n  script=\"$PLUGIN_DIR/music.sh\"\n  click_script=\"$PLUGIN_DIR/music.sh\"\n  updates=on\n  --subscribe music media_change mouse.clicked\n)\n\nsketchybar \\\n  --add item music right \\\n  --set music \"${music[@]}\"\n",
      "purpose": "This file is used to configure a SketchyBar item named 'music'. The item is designed to display information about the currently playing music and provide controls for media playback.",
      "content_summary": "The file defines an array of options for the music item, including its appearance, label, and behavior. It also specifies the script to be executed for updates and user interactions, and subscribes to media change and mouse click events."
    },
    "items/diskmonitor.sh": {
      "path": "items/diskmonitor.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\ndiskmonitor=(\n  icon.font.size=14\n  icon.padding_right=0\n  icon.padding_left=$PADDINGS\n  label.drawing=off\n  y_offset=1\n  update_freq=300\n  updates=when_shown\n  script=\"$PLUGIN_DIR/diskmonitor.sh\"\n)\n\nmisc=(\n  icon.drawing=off\n  width=0\n  padding_right=4\n  update_freq=300\n  updates=when_shown\n  label.drawing=off\n  click_script=\"open -a DaisyDisk.app\"\n)\n\ndiskmonitor_label=(\n  \"${misc[@]}\"\n  label.font=\"$FONT:Semibold:8\"\n  y_offset=5\n)\n\ndiskmonitor_value=(\n  \"${misc[@]}\"\n  label.font=\"$FONT:Bold:10\"\n  y_offset=-3\n)\n\nsketchybar                                          \\\n  --add item diskmonitor.label right                \\\n  --set diskmonitor.label \"${diskmonitor_label[@]}\" \\\n                                                    \\\n  --add item diskmonitor.value right                \\\n  --set diskmonitor.value \"${diskmonitor_value[@]}\" \\\n                                                    \\\n  --add item diskmonitor right                      \\\n  --set diskmonitor \"${diskmonitor[@]}\"             \\\n  --subscribe diskmonitor mouse.clicked",
      "purpose": "This file is used to configure a SketchyBar item named 'diskmonitor'. The item displays disk usage information and is designed to run a custom script (diskmonitor.sh) to update the disk usage data.",
      "content_summary": "The file defines three arrays (diskmonitor, misc, diskmonitor_label, and diskmonitor_value) that contain various SketchyBar configuration options for the 'diskmonitor' item. These options include settings for the item's icon, label, font size, padding, update frequency, and click behavior."
    },
    "items/things3.sh": {
      "path": "items/things3.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nthings3=(\n  \"${notification_defaults[@]}\"\n  drawing=on\n  icon.drawing=off\n  label.padding_left=8\n  background.color=$(getcolor cyan)\n  script=\"$PLUGIN_DIR/things3.sh\"\n  click_script=\"open -a /Applications/Things3.app\"\n)\n\nsketchybar --add item things3 right           \\\n           --set      things3 \"${things3[@]}\"",
      "purpose": "This file is used to configure a SketchyBar item named 'things3'. The item is intended to display notifications and provide a clickable shortcut to open the Things3 application.",
      "content_summary": "The file loads global styles, colors, and icons, sets specific properties for the 'things3' item, and adds the item to the right side of the SketchyBar. The item's properties include drawing on the icon, setting a padding for the label, defining a cyan background color, specifying a custom script for the item, and a click_script to open Things3 application."
    },
    "items/brew_script.sh": {
      "path": "items/brew_script.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env zsh\n\nBREWAPP=\"$(which brew)\"\n\n$BREWAPP update && $BREWAPP upgrade",
      "purpose": "The purpose of this file is to automate the updating and upgrading of Homebrew, a popular package manager for macOS.",
      "content_summary": "This script file checks the location of Homebrew using the 'which brew' command, then executes the 'update' and 'upgrade' commands for Homebrew."
    },
    "items/messages.sh": {
      "path": "items/messages.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nmessages=(\n  \"${notification_defaults[@]}\"\n  icon=$ICON_CHAT\n  script=\"$PLUGIN_DIR/messages.sh\"\n  click_script=\"open -a /System/Applications/Messages.app\"\n)\n\nsketchybar --add item  messages $1               \\\n           --set       messages \"${messages[@]}\" \\\n           --subscribe messages front_app_switched",
      "purpose": "This file is a SketchyBar configuration script that creates an item named 'messages' which displays notifications and opens the Messages app when clicked.",
      "content_summary": "The script defines an array of properties for the 'messages' item, including its default notification settings, icon, script, and click_script. It then adds the item to SketchyBar and subscribes it to the 'front_app_switched' event."
    },
    "items/datetime.sh": {
      "path": "items/datetime.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\ndate=(\n  icon=\udbc0\udc01\n  icon.drawing=off\n  icon.font.size=6\n  icon.padding_right=1\n  icon.color=$(getcolor yellow)          \n  icon.y_offset=1.5\n  label.font=\"$FONT:Semibold:7\"\n  label.padding_right=4\n  y_offset=5                         \n  width=0                            \n  update_freq=60                     \n  script='sketchybar --set $NAME label=\"$(date \"+%a, %b %d\")\"'\n  click_script=\"open -a Calendar.app\"\n)\n\nclock=(\n  \"${menu_defaults[@]}\"\n  label.padding_left=$PADDINGS\n  label.padding_right=4\n  icon.drawing=off          \n  label.color=$LABEL_COLOR\n  label.font=\"$FONT:Bold:9\"\n  y_offset=-2\n  update_freq=10            \n  popup.align=right\n  script=\"$PLUGIN_DIR/nextevent.sh\"\n  click_script=\"sketchybar --set clock popup.drawing=toggle; open -a Calendar.app\"\n)\n\ncalendar_popup=(\n  icon.drawing=off\n  label.padding_left=0\n  label.max_chars=32\n  label.scroll_duration=100\n)\n\nsketchybar                                      \\\n  --add item date right                         \\\n  --set date \"${date[@]}\"                       \\\n  --subscribe date system_woke                  \\\n                   mouse.entered                \\\n                   mouse.exited                 \\\n                   mouse.exited.global          \\\n  --add item date.details popup.date            \\\n  --set date.details \"${menu_item_defaults[@]}\" \\\n                                                \\\n  --add item clock right                        \\\n  --set clock \"${clock[@]}\"                     \\\n  --subscribe clock system_woke                 \\\n                    mouse.entered               \\\n                    mouse.exited                \\\n                    mouse.exited.global         \\\n  --add item clock.next_event popup.clock       \\\n  --set clock.next_event \"${menu_item_defaults[@]}\" \"${calendar_popup[@]}\"",
      "purpose": "This file is used to configure SketchyBar items for displaying the date, time, and next calendar event.",
      "content_summary": "The file defines two SketchyBar items: date and clock. The date item displays the day of the week and the date in a specified format, while the clock item shows the current time and provides a popup for displaying the next calendar event. The file also includes configuration options for the appearance and behavior of these items."
    },
    "items/spaces_simple.sh": {
      "path": "items/spaces_simple.sh",
      "language": "bash",
      "dependencies": [
        "| length')"
      ],
      "content": "#!/bin/bash\n\n# Default styles\nspaces=(\n  ignore_association=on\n  updates=on                           \n  associated_display=1                 \n  background.height=16\n  icon.padding_left=$PADDINGS\n  icon.padding_right=$PADDINGS\n  label.drawing=off\n  label.padding_left=0\n  label.padding_right=$PADDINGS\n)\n\n# Define spaces\nspace_properties=\"[\n  {\n    \\\"icon\\\": \\\"$ICON_WEB\\\",\n    \\\"label\\\": \\\"\\\",\n    \\\"color\\\": \\\"cyan\\\"\n  },\n  {\n    \\\"icon\\\": \\\"$ICON_MAIL\\\",\n    \\\"label\\\": \\\"\\\",\n    \\\"color\\\": \\\"orange\\\"\n  },\n  {\n    \\\"icon\\\": \\\"$ICON_FIGMA\\\",\n    \\\"label\\\": \\\"\\\",\n    \\\"color\\\": \\\"green\\\"\n  },\n  {\n    \\\"icon\\\": \\\"$ICON_FINDER\\\",\n    \\\"label\\\": \\\"\\\",\n    \\\"color\\\": \\\"maroon\\\"\n  },\n  {\n    \\\"icon\\\": \\\"$ICON_TERM\\\",\n    \\\"label\\\": \\\"\\\",\n    \\\"color\\\": \\\"yellow\\\"\n  },\n  {\n    \\\"icon\\\": \\\"$ICON_MUSIC\\\",\n    \\\"label\\\": \\\"\\\",\n    \\\"color\\\": \\\"red\\\"\n  },\n  {\n    \\\"icon\\\": \\\"$ICON_DOCUMENTS\\\",\n    \\\"label\\\": \\\"\\\",\n    \\\"color\\\": \\\"purple\\\"\n  }\n]\"\n\nSPACE_COUNT=$(echo \"$space_properties\" | jq '. | length')\n\nfor (( SID=1; SID<=SPACE_COUNT; SID++ )); do\n  SIDJSON=$((SID - 1))\n  SPACE_COLOR=$(getcolor $(echo \"$space_properties\" | jq -r .[$SIDJSON].color))\n  sketchybar --add space space.$SID left                                         \\\n             --set space.$SID \"${spaces[@]}\"                                     \\\n                   associated_space=$SID                                         \\\n                   icon=$(echo \"$space_properties\" | jq -r \".[$SIDJSON].icon\")   \\\n                   label=$(echo \"$space_properties\" | jq -r \".[$SIDJSON].label\") \\\n                   icon.highlight_color=$SPACE_COLOR                             \\\n                   label.highlight_color=$SPACE_COLOR                            \\\n                   script=\"$PLUGIN_DIR/app_space_simple.sh $SID $SPACE_COLOR\"    \\\n             --subscribe space.$SID mouse.clicked space_change front_app_switched\ndone",
      "purpose": "This file is a SketchyBar configuration script that creates and configures multiple spaces (workspaces) in the macOS dock. Each space is associated with an icon and a color, and the script uses the jq command to dynamically generate the number of spaces based on the number of space properties defined.",
      "content_summary": "The script defines default styles for the spaces, then defines space properties with icons, labels, and colors. It uses jq to count the number of space properties and loops through them to create each space with the specified properties. The spaces are added to the left side of the dock and are subscribed to mouse click events and front app switching events."
    },
    "items/brew.sh": {
      "path": "items/brew.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nbrew=(\n  \"${notification_defaults[@]}\"\n  icon=$ICON_PACKAGE\n  script=\"$PLUGIN_DIR/brew.sh\"\n  click_script=\"$PLUGIN_DIR/brew.sh\"\n  --subscribe brew mouse.clicked\n)\n\nsketchybar --add item  brew $1          \\\n           --set       brew \"${brew[@]}\"",
      "purpose": "This file is used to configure a SketchyBar item that displays information about the user's Homebrew installation and provides functionality to interact with it.",
      "content_summary": "The file defines an array 'brew' containing default notification options, an icon, script, click_script, and a subscribe command for the mouse.clicked event. It then adds a SketchyBar item named 'brew' using the provided configuration."
    },
    "items/front_app.sh": {
      "path": "items/front_app.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nfront_app=(\n  icon.drawing=off\n  label.padding_right=$PADDINGS\n  script=\"$PLUGIN_DIR/front_app.sh\"\n)\n\nsketchybar                             \\\n--add item front_app left              \\\n     --set front_app \"${front_app[@]}\" \\\n     --subscribe front_app space_change space_windows_change front_app_switched",
      "purpose": "This file is used to configure an item named 'front_app' in SketchyBar, a macOS system tray application.",
      "content_summary": "The file loads global styles, colors, and icons, defines the properties of the front_app item, and adds the item to the left side of the SketchyBar. It also sets up subscriptions for space_change, space_windows_change, and front_app_switched events."
    },
    "items/countdown.sh": {
      "path": "items/countdown.sh",
      "language": "bash",
      "dependencies": [],
      "content": "sketchybar                                          \\\n  --add item countdown q                            \\\n  --set countdown script=\"$PLUGIN_DIR/countdown.sh\" \\\n  \"${notification_defaults[@]}\"                     \\\n  background.color=$(getcolor blue)                 \\\n  drawing=on                                        \\\n  update_freq=300                                   \\\n  updates=on                                        \\\n  icon=\udbc2\udcdd",
      "purpose": "This file is used to configure a SketchyBar item named 'countdown'. The item displays a countdown timer and is customized with specific settings such as script, color, icon, and update frequency.",
      "content_summary": "The file sets up a SketchyBar item called 'countdown' with a script located in the countdown.sh file within the plugin directory. It also defines the item's appearance (color, icon), behavior (updates, drawing), and update frequency."
    },
    "items/apple.sh": {
      "path": "items/apple.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\nPOPUP_OFF='sketchybar --set logo popup.drawing=off'\n\nlogo=(\n  \"${menu_defaults[@]}\"\n  icon=$ICON_APPLE\n  icon.font.size=14\n  label.drawing=off\n  popup.align=left\n  click_script=\"sketchybar --set logo popup.drawing=toggle\"\n  --subscribe logo mouse.exited\n                   mouse.exited.global\n)\n\nlogo_about=(\n  \"${menu_item_defaults[@]}\"\n  icon=\udbc0\udd74\n  label=\"About This Mac\"\n  click_script=\"open x-apple.systempreferences:com.apple.SystemProfiler.AboutExtension; $POPUP_OFF\"\n  \"${separator[@]}\"\n)\n\nlogo_settings=(\n  \"${menu_item_defaults[@]}\"\n  icon=\udbc0\udf5f\n  label=\"System Settings\"\n  click_script=\"open -a 'System Settings'; $POPUP_OFF\"\n)\n\nlogo_sleep=(\n  \"${menu_item_defaults[@]}\"\n  icon=\udbc1\udf1a\n  label=\"Sleep\"\n  click_script=\"pmset sleepnow; $POPUP_OFF\"\n)\n\nlogo_restart=(\n  \"${menu_item_defaults[@]}\"\n  icon=\udbc2\udce8\n  label=\"Restart\u2026\"\n  click_script=\"osascript -e 'tell app \\\"loginwindow\\\" to \u00abevent aevtrrst\u00bb'; $POPUP_OFF\"\n)\n\nlogo_shutdown=(\n  \"${menu_item_defaults[@]}\"\n  icon=\udbc3\uddc3\n  label=\"Shut Down\u2026\"\n  click_script=\"osascript -e 'tell app \\\"loginwindow\\\" to \u00abevent aevtrsdn\u00bb'; $POPUP_OFF\"\n)\n\nlogo_lockscreen=(\n  \"${menu_item_defaults[@]}\"\n  icon=\udbc3\udf11\n  label=\"Lock Screen      \udbc0\udd8d\udbc0\udd94Q\"\n  click_script=\"osascript -e 'tell application \\\"System Events\\\" to keystroke \\\"q\\\" using {command down,control down}'; $POPUP_OFF\"\n)\n\nlogo_logout=(\n  \"${menu_item_defaults[@]}\"\n  icon=\udbc0\ude6d\n  label=\"Log Out ${USER}\u2026   \udbc0\udd9d\udbc0\udd94Q\"\n  click_script=\"osascript -e 'tell app \\\"System Events\\\" to log out'; $POPUP_OFF\"\n  \"${separator[@]}\"\n)\n\nlogo_refresh=(\n  \"${menu_item_defaults[@]}\"\n  icon=\udbc0\udd48\n  label=\"Refresh Sketchybar\"\n  click_script=\"$POPUP_OFF; sketchybar --update\"\n  # script=\"sketchybar --update\"\n  # update_freq=86400\n  # updates=on\n)\n\nsketchybar                                            \\\n  --add item logo left                                \\\n  --set logo \"${logo[@]}\"                             \\\n                                                      \\\n  --add item logo.about popup.logo                    \\\n  --set      logo.about \"${logo_about[@]}\"            \\\n                                                      \\\n  --add item logo.settings popup.logo                 \\\n  --set      logo.settings \"${logo_settings[@]}\"      \\\n                                                      \\\n  --add item logo.sleep popup.logo                    \\\n  --set      logo.sleep \"${logo_sleep[@]}\"            \\\n                                                      \\\n  --add item logo.restart popup.logo                  \\\n  --set      logo.restart \"${logo_restart[@]}\"        \\\n                                                      \\\n  --add item logo.shut_down popup.logo                \\\n  --set      logo.shut_down \"${logo_shutdown[@]}\"     \\\n                                                      \\\n  --add item logo.lock_screen popup.logo              \\\n  --set      logo.lock_screen \"${logo_lockscreen[@]}\" \\\n                                                      \\\n  --add item logo.logout popup.logo                   \\\n  --set      logo.logout \"${logo_logout[@]}\"          \\\n                                                      \\\n  --add item logo.refresh popup.logo                  \\\n  --set      logo.refresh \"${logo_refresh[@]}\"",
      "purpose": "This file is a SketchyBar configuration script for creating an Apple menu item in the system tray. The script defines various options for the menu, such as About This Mac, System Settings, Sleep, Restart, Shut Down, Lock Screen, Log Out, Refresh SketchyBar, and more.",
      "content_summary": "The file defines a series of menu items for the Apple logo in the system tray, each with its own label, icon, and click script. The menu items include options for About This Mac, System Settings, Sleep, Restart, Shut Down, Lock Screen, Log Out, Refresh SketchyBar, and more. The script also includes subscriptions for mouse events and toggles the popup drawing on and off."
    },
    "items/wifi.sh": {
      "path": "items/wifi.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nPOPUP_OFF=\"sketchybar --set wifi popup.drawing=off\"\n\nwifi=(\n  \"${menu_defaults[@]}\"\n  icon.padding_right=0\n  label.drawing=off\n  popup.align=right\n  update_freq=5\n  script=\"$PLUGIN_DIR/wifi.sh\"\n  --subscribe wifi wifi_change\n                   mouse.clicked\n                   mouse.exited\n                   mouse.exited.global\n)\n\nsketchybar                                                                                            \\\n  --add item wifi right                                                                               \\\n  --set wifi \"${wifi[@]}\"                                                                             \\\n  --add item wifi.ssid popup.wifi                                                                     \\\n  --set wifi.ssid icon=\udbc0\udd74                                                                              \\\n        label=\"SSID\"                                                                                  \\\n        \"${menu_item_defaults[@]}\"                                                                    \\\n        click_script=\"open 'x-apple.systempreferences:com.apple.preference.network?Wi-Fi';$POPUP_OFF\" \\\n  --add item wifi.ipaddress popup.wifi                                                                \\\n  --set wifi.ipaddress icon=\udbc0\uddaa                                                                         \\\n        label=\"IP Address\"                                                                            \\\n        \"${menu_item_defaults[@]}\"                                                                    \\\n        click_script=\"echo \\\"$IP_ADDRESS\\\"|pbcopy;$POPUP_OFF\"",
      "purpose": "The provided file is a SketchyBar configuration script for a Wi-Fi item in the system tray. Its purpose is to display the Wi-Fi status, SSID, and IP address in the SketchyBar interface.",
      "content_summary": "The script defines a Wi-Fi item with custom properties such as icon, label, alignment, update frequency, and click actions. It also includes sub-items for SSID and IP address, each with their own icons and labels. The script sources a separate script file `wifi.sh` for updating the Wi-Fi status."
    },
    "items/mail.sh": {
      "path": "items/mail.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nmail=(\n  \"${notification_defaults[@]}\"\n  icon=$ICON_MAIL\n  script=\"$PLUGIN_DIR/mail.sh\"\n  click_script=\"open -a /System/Applications/Mail.app\"\n)\n\nsketchybar --add item  mail $1           \\\n           --set       mail \"${mail[@]}\" \\\n           --subscribe mail front_app_switched",
      "purpose": "This file is a SketchyBar configuration script for creating a custom item that displays notifications related to the Mail application on macOS.",
      "content_summary": "The script defines an item named 'mail' with a specific set of properties such as an icon, script, click_script, and subscriptions. The script is set to run when the front application switches and updates the mail item with the latest notifications."
    },
    "items/yabai.sh": {
      "path": "items/yabai.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nyabai=(\n  icon=$ICON_YABAI_GRID\n  icon.padding_left=$PADDINGS\n  icon.padding_right=$((PADDINGS + 2))\n  label.padding_right=$PADDINGS\n  script=\"$PLUGIN_DIR/yabai.sh\"\n)\n\n# Allows my shortcut / workflow in Alfred to trigger things in Sketchybar\nsketchybar --add event alfred_trigger\nsketchybar --add event update_yabai_icon\n\nsketchybar --add item yabai left                   \\\n           --set yabai \"${yabai[@]}\"               \\\n           --set yabai \"${bracket_defaults[@]}\"    \\\n           --subscribe yabai space_change          \\\n                             mouse.scrolled.global \\\n                             mouse.clicked         \\\n                             front_app_switched    \\\n                             space_windows_change  \\\n                             alfred_trigger        \\\n                             update_yabai_icon",
      "purpose": "This file is used to configure an item in SketchyBar, named 'yabai', which displays an icon and provides various functionalities related to the yabai tiling window manager.",
      "content_summary": "The file defines the properties of the yabai item, sets its script, adds events to trigger updates and actions, and subscribes to various events such as space changes, mouse interactions, and Alfred triggers to update the yabai item accordingly."
    },
    "items/control_center.sh": {
      "path": "items/control_center.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\ncontrol_center=(\n  icon=$ICON_CONTROLCENTER\n  label.drawing=off\n  icon.padding_left=$PADDINGS\n  icon.padding_right=$PADDINGS\n  icon.y_offset=1.5\n  click_script=\"osascript -e 'tell application \\\"System Events\\\" to tell process \\\"Control Center\\\" to perform action \\\"AXPress\\\" of menu bar item 2 of menu bar 1' >/dev/null 2>&1\"\n)\n\nsketchybar --add item control_center right          \\\n           --set      control_center \"${control_center[@]}\" \\\n           --set      control_center \"${bracket_defaults[@]}\"\n",
      "purpose": "The provided file is a SketchyBar configuration script that creates and configures an item for the Control Center in the macOS menu bar.",
      "content_summary": "The script sources global styles, colors, and icons, defines the properties of the Control Center item, and adds it to the right side of the SketchyBar. It also sets the click script to open the Control Center application."
    },
    "items/dnd.sh": {
      "path": "items/dnd.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\ndnd=(\n  script=\"$PLUGIN_DIR/dnd.sh\"\n  label.drawing=off\n  icon=$ICON_DND_ON\n  --add event focus_on \"_NSDoNotDisturbEnabledNotification\"\n  --add event focus_off \"_NSDoNotDisturbDisabledNotification\"\n  --subscribe dnd focus_on focus_off mouse.clicked\n)\n\nsketchybar             \\\n  --add item dnd right \\\n  --set dnd \"${dnd[@]}\"\n",
      "purpose": "The provided file is a SketchyBar configuration script that creates a new item named 'dnd' in the SketchyBar menu. This item is designed to reflect the Do Not Disturb (DND) status on macOS.",
      "content_summary": "The script defines an array 'dnd' containing various properties for the DND item such as its script location, label display, icon, and event subscriptions for focus changes and mouse clicks. The script then adds the DND item to the right side of the SketchyBar and sets its properties."
    },
    "items/spacer.sh": {
      "path": "items/spacer.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nspacer=(\n  width=4\n  icon.padding_left=0\n  icon.padding_right=0\n  padding_left=0\n  padding_right=0\n)\n\nsketchybar \\\n  --add item spacer.$1 $2 \\\n  --set spacer.$1 \"${spacer[@]}\"",
      "purpose": "The purpose of this file is to create a SketchyBar item named 'spacer' that can be added to the bar with various positions. This item is used to add space between other items on the bar.",
      "content_summary": "The file defines a bash array 'spacer' with specific properties for the spacer item, such as width, icon padding, and overall padding. It then uses the SketchyBar command to add the spacer item to the bar with a specified name and sets the properties of the array."
    },
    "items/battery.sh": {
      "path": "items/battery.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nbattery=(\n  icon.font.size=14\n  icon.padding_right=0\n  icon.font.style=\"Light\"\n  update_freq=60                                             \n  popup.align=right                                            \n  script=\"$PLUGIN_DIR/battery.sh\"                              \n  updates=when_shown                                           \n)\n\nsketchybar                                 \\\n  --add item battery right                 \\\n  --set battery \"${battery[@]}\"            \\\n  --subscribe battery power_source_change  \\\n                      mouse.clicked",
      "purpose": "This file is used to configure a battery status item in SketchyBar, a macOS system tray application.",
      "content_summary": "The file defines a battery item with specific properties such as font size, padding, font style, update frequency, alignment, script, updates, and subscriptions. It adds the battery item to the right side of the SketchyBar, sets its properties, and subscribes to power_source_change and mouse.clicked events."
    },
    "items/spaces.sh": {
      "path": "items/spaces.sh",
      "language": "bash",
      "dependencies": [
        "\"$CONFIG_DIR/globalstyles.sh\""
      ],
      "content": "#!/bin/bash\n\n# Load global styles, colors and icons\nsource \"$CONFIG_DIR/globalstyles.sh\"\n\n# Defaults\nspaces=(\n  background.corner_radius=4\n)\n\n# Get all spaces\nSPACES=($(yabai -m query --spaces index | jq -r '.[].index'))\n\nfor SID in \"${SPACES[@]}\"; do\n  sketchybar --add space space.$SID left                  \\\n             --set space.$SID \"${spaces[@]}\"              \\\n                   script=\"$PLUGIN_DIR/app_space.sh $SID\" \\\n                   associated_space=$SID                  \\\n                   icon=$SID                              \\\n             --subscribe space.$SID mouse.clicked front_app_switched space_change space_windows_change\ndone",
      "purpose": "This file is a SketchyBar configuration script that dynamically creates space items in the SketchyBar for each workspace (space) managed by the yabai tiling window manager.",
      "content_summary": "The script sources global styles, colors, and icons, sets default properties for the space items, retrieves the list of workspaces, and for each workspace, it adds a space item to SketchyBar with specific properties such as script, associated space, icon, and subscriptions for mouse click, front app switch, space change, and space windows change events."
    },
    "items/reminders.sh": {
      "path": "items/reminders.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nreminders=(\n  \"${notification_defaults[@]}\"\n  icon=$ICON_TODO\n  script=\"$PLUGIN_DIR/reminders.sh\"\n  click_script=\"open -a /System/Applications/Reminders.app\"\n)\n\nsketchybar --add item  reminders $1                \\\n           --set       reminders \"${reminders[@]}\" \\\n           --subscribe reminders front_app_switched",
      "purpose": "This file is a SketchyBar configuration script for creating a custom item named 'reminders'. The purpose of this script is to display notifications related to reminders and allow users to open the Reminders app when clicking on the item.",
      "content_summary": "The script defines an array of properties for the reminders item, including its default notification settings, icon, script, and click_script. It then adds the item to SketchyBar and subscribes it to the front_app_switched event."
    },
    "items/weather.sh": {
      "path": "items/weather.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nweather=(\n  \"${menu_defaults[@]}\"\n  \"${notification_defaults[@]}\"\n  update_freq=1800\n  drawing=on\n  popup.align=center\n  icon.color=$HIGHLIGHT\n  script=\"$PLUGIN_DIR/weather.sh\"\n  --subscribe weather wifi_change\n                      mouse.clicked\n                      system_woke\n)\n\naqi=(\n  label.color=$LABEL_COLOR_NEGATIVE\n  drawing=off\n  background.height=16\n  label.padding_left=$PADDINGS\n  label.padding_right=$PADDINGS\n)\n\nsketchybar                                       \\\n  --add item aqi $1                              \\\n  --add item weather $1                          \\\n  --set weather \"${weather[@]}\"                  \\\n  --set aqi \"${aqi[@]}\"                          \\\n  --add item weather.location popup.weather      \\\n  --add item weather.condition popup.weather     \\\n  --add item weather.aqi popup.weather           \\\n  --add item weather.precipitation popup.weather \\\n  --add item weather.wind popup.weather          \\\n  --add item weather.humidity popup.weather      \\\n  --add item weather.update popup.weather        \\\n  --add item weather.openapp popup.weather       \\\n  --set '/weather\\..*/' \"${menu_item_defaults[@]}\" click_script=\"sketchybar --set weather popup.drawing=off\"",
      "purpose": "This file is used to configure a SketchyBar item that displays weather information, such as location, condition, AQI, precipitation, wind, humidity, and updates. It also includes options for pop-up menus and click actions.",
      "content_summary": "The file defines variables for the weather and AQI items, sets their properties, and adds sub-items for various weather details. It also sets up pop-up menus for weather details and click actions to hide the weather details when an item is clicked."
    }
  }
}