{
  "repo_name": "navilan",
  "structure": {
    "sketchybar-app-font.nix": {
      "path": "sketchybar-app-font.nix",
      "language": "unknown",
      "dependencies": [],
      "content": "{ pkgs, ... }:\n\nlet\n  stdenv = pkgs.stdenvNoCC;\n  lib = pkgs.lib;\n\nin stdenv.mkDerivation rec {\n  pname = \"sketchybar-app-font\";\n  dontConfigure = true;\n  version = \"1.0.3\";\n\n  src = pkgs.fetchurl rec {\n    name = \"${pname}-${version}.ttf\";\n    url =\n      \"https://github.com/kvndrsslr/${pname}/releases/download/v${version}/${pname}.ttf\";\n    sha256 = \"sha256-iv3Th/lVL0ngJGE44m0jzSPsApe8LOq+fxqHncHGwOU=\";\n  };\n\n  phases = [ \"unpackPhase\" \"installPhase\" ];\n\n  sourceRoot = \"./\";\n  unpackCmd = ''\n    echo $curSrc\n    ttfName=$(basename $(stripHash $curSrc))\n    echo \"ttfname: $ttfName\"\n    cp $curSrc ./$ttfName\n  '';\n\n  installPhase = ''\n    install_path=$out/share/fonts/truetype/sketchy-bar-app-font.ttf\n    mkdir -p $install_path\n    ls -al *.ttf\n    echo copying font\n    cp *.ttf $install_path\n    echo Font ready\n  '';\n\n  meta = { description = \"Sketchy Bar App Font (kvndrsslr)\"; };\n}\n",
      "purpose": "The provided file is a Nix expression that serves to build and install a custom font for SketchyBar, named 'Sketchy Bar App Font', from a specific version (1.0.3) by the author 'kvndrsslr'.",
      "content_summary": "The file defines a derivation with phases 'unpackPhase' and 'installPhase', fetches the font file from a specific URL, and installs it to the system fonts directory."
    },
    "default.nix": {
      "path": "default.nix",
      "language": "unknown",
      "dependencies": [],
      "content": "{ config, pkgs, lib, ... }:\n\nlet p = import ../../lib/platforms.nix { inherit config pkgs; };\nin {\n  home.file = { \".config/sketchybar\" = { source = p.mkSource ./config; }; };\n}\n",
      "purpose": "This file, named default.nix, is used to configure the installation and setup of SketchyBar in a Nix environment. It imports necessary libraries and sets the home directory for SketchyBar configuration files.",
      "content_summary": "The file imports a platform-specific configuration from a separate file (lib/platforms.nix), and then sets the home directory for SketchyBar configuration files to be located at .config/sketchybar. The home directory's source is set to the configuration from the imported file."
    },
    "sf-symbols.nix": {
      "path": "sf-symbols.nix",
      "language": "unknown",
      "dependencies": [],
      "content": "{ pkgs, ... }:\n\nlet\n  stdenv = pkgs.stdenvNoCC;\n  lib = pkgs.lib;\n  fetchurl = pkgs.fetchurl;\nin stdenv.mkDerivation rec {\n  pname = \"sf-symbols\";\n  version = \"4\";\n\n  src = fetchurl {\n    url =\n      \"https://devimages-cdn.apple.com/design/resources/download/SF-Symbols-${version}.dmg\";\n    sha256 = \"sha256-UxWePkoIH9wLPPS8MuzNBXy2sBNJis/u9MiqkGm0tuY=\";\n\n  };\n\n  sourceRoot = \".\";\n  buildInputs = with pkgs; [ undmg xar cpio ];\n  installPhase = ''\n    xar -Oxf SF\\ Symbols.pkg SFSymbols.pkg/Payload | gzip -d | cpio -i\n    mkdir -p $out/share/fonts/truetype\n    cp ./Library/Fonts/*.ttf $out/share/fonts/truetype\n  '';\n\n  meta = {\n    description = \"Fonts from SF Symbols\";\n    homepage = \"https://developer.apple.com/sf-symbols/\";\n    platforms = lib.platforms.all;\n  };\n}\n",
      "purpose": "The sf-symbols.nix file is used to define a derivation (a build recipe) for the SF Symbols font package, version 4, in the Nix package manager. This derivation fetches the SF Symbols package from Apple's website, extracts the font files, and installs them in the system's font directory.",
      "content_summary": "The file contains a Nix expression that defines a derivation for the SF Symbols font package, specifying the version, URL for download, SHA256 checksum, build inputs, install phase, and metadata such as description, homepage, and platforms."
    },
    "config/sketchybarrc": {
      "path": "config/sketchybarrc",
      "language": "bash",
      "dependencies": [
        "\"$HOME/.config/sketchybar/colors.sh\" # Loads all defined colors",
        "\"$HOME/.config/sketchybar/icons.sh\" # Loads all defined icons",
        "\"$ITEM_DIR/layout.sh\"",
        "\"$ITEM_DIR/message.sh\"",
        "\"$ITEM_DIR/spotify.sh\"",
        "\"$ITEM_DIR/calendar.sh\"",
        "\"$ITEM_DIR/wifi.sh\"",
        "\"$ITEM_DIR/input.sh\"",
        "\"$ITEM_DIR/spaces.sh\""
      ],
      "content": "#!/usr/bin/env sh\n#github:FlexKratz/dotfiles\n\nsource \"$HOME/.config/sketchybar/colors.sh\" # Loads all defined colors\nsource \"$HOME/.config/sketchybar/icons.sh\" # Loads all defined icons\n\nITEM_DIR=\"$HOME/.config/sketchybar/items\" # Directory where the items are configured\nPLUGIN_DIR=\"$HOME/.config/sketchybar/plugins\" # Directory where all the plugin scripts are stored\n\nFONT=\"SF Pro\" # Needs to have Regular, Bold, Semibold, Heavy and Black variants\nSPACE_CLICK_SCRIPT=\"yabai -m space --focus \\$SID 2>/dev/null\" # The script that is run for clicking on space components\n\nPADDINGS=3 # All paddings use this value (icon, label, background)\n\nPOPUP_BORDER_WIDTH=2\nPOPUP_CORNER_RADIUS=11\n\nSHADOW=on\n\n# Setting up the general bar appearance and default values\nsketchybar --bar     height=40                                         \\\n                     color=$BAR_COLOR                                  \\\n                     shadow=$SHADOW                                    \\\n                     position=top                                      \\\n                     sticky=on                                         \\\n                     padding_right=$((10 - $PADDINGS))                 \\\n                     padding_left=18                                   \\\n                     corner_radius=9                                   \\\n                     y_offset=0                                        \\\n                     margin=0                                          \\\n                     blur_radius=20                                    \\\n                     notch_width=200                                   \\\n                                                                       \\\n           --default updates=when_shown                                \\\n                     icon.font=\"$FONT:Bold:20.0\"                       \\\n                     icon.color=$ACTIVE_ITEM_FOREGROUND                \\\n                     icon.padding_left=$PADDINGS                       \\\n                     icon.padding_right=$PADDINGS                      \\\n                     label.font=\"$FONT:Semibold:18.0\"                  \\\n                     label.color=$ACTIVE_ITEM_FOREGROUND               \\\n                     label.padding_left=$PADDINGS                      \\\n                     label.padding_right=$PADDINGS                     \\\n                     background.padding_right=$PADDINGS                \\\n                     background.padding_left=$PADDINGS                 \\\n                     popup.background.border_width=2                   \\\n                     popup.background.corner_radius=11                 \\\n                     popup.background.border_color=$ACTIVE_BORDER_COLOR \\\n                     popup.background.color=$TAB_BAR_BACKGROUND    \\\n                     popup.background.shadow.drawing=$SHADOW\n\n# Left\n#\n# Window Title / SKHD mode\nsource \"$ITEM_DIR/layout.sh\"\nsource \"$ITEM_DIR/message.sh\"\n\n\n# Center\n#\nsource \"$ITEM_DIR/spotify.sh\"\n\n# Right\n#\n# Add Time / Date\nsource \"$ITEM_DIR/calendar.sh\"\n\n\nsource \"$ITEM_DIR/wifi.sh\"\n\n# Input Method\nsource \"$ITEM_DIR/input.sh\"\n\nsource \"$ITEM_DIR/spaces.sh\"\n\n\n############## FINALIZING THE SETUP ##############\nsketchybar --update\nsh \"$HOME\"/.bin/skhd_yabai.sh highlight_default\n\necho \"sketchybar configuation loaded..\"\n",
      "purpose": "This file, named sketchybarrc, is a configuration script for SketchyBar, a macOS system tray and status bar application. It sets up the appearance, behavior, and items of the bar, including its dimensions, colors, fonts, paddings, and shadow effects.",
      "content_summary": "The file sources various scripts for defining colors, icons, and items, sets up directories for plugins and items, and specifies the font to be used. It also defines the script for clicking on space components and sets default values for various parameters such as paddings, border width, corner radius, and shadow. The script then sets up the general bar appearance, including its position, dimensions, and shadow. It also sets up the default values for the items on the left, center, and right of the bar, and sources scripts for specific items such as window title, Spotify, calendar, Wi-Fi, input method, and spaces."
    },
    "config/colors.sh": {
      "path": "config/colors.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n\nFG=0xff1a1b26\nBG=0xffa9b1d6\nBG0=0xa0a9b1d6\nBG1=0x50a9b1d6\n\nPITCH=0xff000000\nBLACK=0xff414868\nBLACK0=0xa0414868\nBLACK1=0x50414868\n\nRED=0xfff77683\n\nGREEN=0xff73daca\n\nBLUE=0xff7aa2f7\n\nYELLOW=0xffe0af68\n\nMAGENTA=0xffbb9af7\n\nCYAN=0xff7dcfff\n\nGREY=0xff9ece6a\n\nWHITE=0xffc0caf5\n\nTRANSPARENT=0x00000000\n\n\nACTIVE_BORDER_COLOR=0xff3d59a1\nINACTIVE_BORDER_COLOR=0xff101014\nICON_BORDER_COLOR=0xffe0af68\n\n\nACTIVE_ITEM_FOREGROUND=0xff3d59a1\nACTIVE_ITEM_BACKGROUND=0xff16161E\nINACTIVE_ITEM_FOREGROUND=0xff787C99\nINACTIVE_TAB_BACKGROUND=0xff16161e\nTAB_BAR_BACKGROUND=0xff101014\n\nBAR_COLOR=0xff16161e\n",
      "purpose": "This file is used for defining color schemes in SketchyBar, a macOS system status bar replacement.",
      "content_summary": "The file contains hexadecimal color codes for various elements of SketchyBar such as foreground, background, active and inactive borders, active and inactive items, bar color, and special colors like red, green, blue, etc. Transparent color is also defined."
    },
    "config/icons.sh": {
      "path": "config/icons.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n\n# General Icons\nLOADING=\udbc1\udd87\n\nAPPLE=\udbc2\udcfa\nPREFERENCES=\udbc3\udebd\nACTIVITY=\udbc1\udc93\nLOCK=\udbc1\udcb3\nMAIL=\udbc0\udf5c\nMAIL_OPEN=\udbc0\udf5c\nBELL=\udbc0\udeda\nBELL_DOT=\udbc1\udf57\n\n# Git Icons\nGIT_ISSUE=\udbc0\udf77\nGIT_DISCUSSION=\udbc1\udca4\nGIT_PULL_REQUEST=\udbc1\ude61\nGIT_COMMIT=\udbc2\udc5a\nGIT_INDICATOR=\udbc0\udc93\n\n# Spotify Icons\nSPOTIFY_BACK=\udbc0\ude8e\nSPOTIFY_PLAY_PAUSE=\udbc0\ude88\nSPOTIFY_NEXT=\udbc0\ude90\nSPOTIFY_SHUFFLE=\udbc0\ude9d\nSPOTIFY_REPEAT=\udbc0\ude9e\n\n# Yabai Icons\nYABAI_STACK=\udbc0\udfed\nYABAI_FULLSCREEN_ZOOM=\udbc0\udfdc\nYABAI_PARENT_ZOOM=\udbc2\udd43\nYABAI_FLOAT=\udbc2\udc8c\nYABAI_GRID=\udbc2\uddcd\nYABAI_BSP=\udbc0\udfdd\n\n\n# Network\nONLINE=\udbc2\ude24\nOFFLINE=\udbc2\ude24\n",
      "purpose": "This file is used for defining custom icons in SketchyBar, a macOS status bar application.",
      "content_summary": "The file contains a list of predefined icons for various purposes such as general use, Git, Spotify, Yabai, and network status. Each icon is assigned a unique symbol for easy reference."
    },
    "config/plugins/calendar.sh": {
      "path": "config/plugins/calendar.sh",
      "language": "bash",
      "dependencies": [
        "%b')\" \\"
      ],
      "content": "#!/usr/bin/env sh\n\nsketchybar \\\n    --set $NAME icon=\"$(date '+%a %d. %b')\" \\\n                label=\"$(date '+%H:%M')\"\n",
      "purpose": "This file is used to configure a SketchyBar plugin that displays the current day of the week and date, along with the current time.",
      "content_summary": "The script uses the date command to get the current day of the week, date, and time, and sets these values as the icon and label for the SketchyBar plugin."
    },
    "config/plugins/input.sh": {
      "path": "config/plugins/input.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n#\nSOURCE=$(defaults read ~/Library/Preferences/com.apple.HIToolbox.plist AppleCurrentKeyboardLayoutInputSourceID)\n\n\ncase ${SOURCE} in\n'com.apple.keylayout.ABC-India') LABEL='A' ;;\n'com.apple.keylayout.ABC-US') LABEL='U' ;;\n'com.apple.keylayout.Anjal') LABEL='\u0b85' ;;\nesac\n\nsketchybar --set $NAME icon=\"$LABEL\"\n",
      "purpose": "This file is used to configure SketchyBar, a macOS system status bar, to display an icon based on the current keyboard layout.",
      "content_summary": "The script reads the current keyboard layout from the system preferences, maps it to a specific label, and then sets the SketchyBar icon to display that label."
    },
    "config/plugins/spotify.sh": {
      "path": "config/plugins/spotify.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n\nnext ()\n{\n  osascript -e 'tell application \"Spotify\" to play next track'\n}\n\nback ()\n{\n  osascript -e 'tell application \"Spotify\" to play previous track'\n}\n\nplay ()\n{\n  osascript -e 'tell application \"Spotify\" to playpause'\n}\n\nrepeat ()\n{\n  REPEAT=$(osascript -e 'tell application \"Spotify\" to get repeating')\n  if [ \"$REPEAT\" = \"false\" ]; then\n    sketchybar -m --set spotify.repeat icon.highlight=on\n    osascript -e 'tell application \"Spotify\" to set repeating to true'\n  else\n    sketchybar -m --set spotify.repeat icon.highlight=off\n    osascript -e 'tell application \"Spotify\" to set repeating to false'\n  fi\n}\n\nshuffle ()\n{\n  SHUFFLE=$(osascript -e 'tell application \"Spotify\" to get shuffling')\n  if [ \"$SHUFFLE\" = \"false\" ]; then\n    sketchybar -m --set spotify.shuffle icon.highlight=on\n    osascript -e 'tell application \"Spotify\" to set shuffling to true'\n  else\n    sketchybar -m --set spotify.shuffle icon.highlight=off\n    osascript -e 'tell application \"Spotify\" to set shuffling to false'\n  fi\n}\n\nupdate ()\n{\n  PLAYING=1\n  INF=$(echo \"$INFO\" | iconv -f utf-8 -t utf-8 -c)\n  if [ \"$(echo \"$INF\" | jq -r '.[\"Player State\"]')\" = \"Playing\" ]; then\n    PLAYING=0\n    TRACK=\"$(echo  \"$INF\"  | jq -r .Name   | cut -c 1-25)\"\n    ARTIST=\"$(echo \"$INF\"  | jq -r .Artist | cut -c 1-25)\"\n    ALBUM=\"$(echo  \"$INF\"  | jq -r .Album  | cut -c 1-25)\"\n    SHUFFLE=$(osascript -e 'tell application \"Spotify\" to get shuffling')\n    REPEAT=$(osascript -e 'tell application \"Spotify\" to get repeating')\n    COVER=$(osascript -e 'tell application \"Spotify\" to get artwork url of current track')\n  fi\n\n  args=()\n  if [ $PLAYING -eq 0 ]; then\n    curl -s --max-time 20 \"$COVER\" -o /tmp/cover.jpg\n    if [ \"$ARTIST\" == \"\" ]; then\n      args+=(--set spotify.title label=\"$TRACK\" drawing=on \\\n             --set spotify.artist label=\"$ALBUM\" drawing=on )\n    else\n      args+=(--set spotify.title label=\"$TRACK\" drawing=on \\\n             --set spotify.artist label=\"$ARTIST\" drawing=on)\n    fi\n    args+=(--set spotify.play icon=\udbc0\ude86 \\\n           --set spotify.shuffle icon.highlight=$SHUFFLE \\\n           --set spotify.repeat icon.highlight=$REPEAT \\\n           --set spotify.cover popup.background.image=\"/tmp/cover.jpg\" \\\n                               popup.background.color=0x000000 \\\n           --set spotify drawing=on                                     )\n  else\n    args+=(--set spotify.title drawing=off \\\n           --set spotify.artist drawing=off \\\n           --set spotify.cover popup.drawing=off \\\n           --set spotify.play icon=\udbc0\ude84              )\n  fi\n  sketchybar -m \"${args[@]}\"\n}\n\nmouse_clicked () {\n  case \"$NAME\" in\n    \"spotify.next\") next\n    ;;\n    \"spotify.back\") back\n    ;;\n    \"spotify.play\") play\n    ;;\n    \"spotify.shuffle\") shuffle\n    ;;\n    \"spotify.repeat\") repeat\n    ;;\n    *) exit\n    ;;\n  esac\n}\n\npopup () {\n  sketchybar --set spotify.cover popup.drawing=$1\n}\n\ncase \"$SENDER\" in\n  \"mouse.clicked\") mouse_clicked\n  ;;\n  \"mouse.entered\") popup on\n  ;;\n  \"mouse.exited\"|\"mouse.exited.global\") popup off\n  ;;\n  *) update\n  ;;\nesac\n",
      "purpose": "This file is a script for a SketchyBar plugin that controls Spotify playback and displays information about the currently playing track.",
      "content_summary": "The script defines functions for controlling Spotify playback (next, back, play, repeat, shuffle), updating the displayed information (title, artist, album, cover art), and handling mouse clicks and mouse movements over the plugin. It also includes functions for setting the shuffle and repeat options."
    },
    "config/plugins/wifi.sh": {
      "path": "config/plugins/wifi.sh",
      "language": "bash",
      "dependencies": [
        "\"$HOME/.config/sketchybar/colors.sh\" # Loads all defined colors",
        "\"$HOME/.config/sketchybar/icons.sh\" # Loads all defined colors"
      ],
      "content": "#!/usr/bin/env sh\n#\n#\nsource \"$HOME/.config/sketchybar/colors.sh\" # Loads all defined colors\nsource \"$HOME/.config/sketchybar/icons.sh\" # Loads all defined colors\n\nCURRENT_WIFI=\"$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I)\"\nSSID=\"$(echo \"$CURRENT_WIFI\" | grep -o \"SSID: .*\" | sed 's/^SSID: //')\"\nCURR_TX=\"$(echo \"$CURRENT_WIFI\" | grep -o \"lastTxRate: .*\" | sed 's/^lastTxRate: //')\"\nIP=\"$(~/.bin/get-ip)\"\n\nif [ \"$SSID\" = \"\" ]; then\n  sketchybar --set $NAME icon=$OFFLINE icon.color=$BLACK               \\\n             --set $NAME.ssid  label=\"Offline\" label.color=$BLACK      \\\n             --set $NAME.speed label=\"0 MBPS\" label.color=$BLACK       \\\n             --set $NAME.ip    label=\"-\" label.color=$BG\nelse\n  sketchybar --set $NAME icon=$ONLINE icon.color=$GREY                 \\\n             --set $NAME.ssid  label=\"$SSID\" label.color=$BG           \\\n             --set $NAME.speed label=\"${CURR_TX} MBPS\" label.color=$BG \\\n             --set $NAME.ip    label=\"$IP\" label.color=$BG\nfi\n",
      "purpose": "This file is a SketchyBar plugin script that displays Wi-Fi connection information in the system tray.",
      "content_summary": "The script sources color and icon definitions, retrieves Wi-Fi connection details (SSID, current transmission rate, and IP address), and dynamically updates the SketchyBar widget with the appropriate icons and labels based on the connection status."
    },
    "config/plugins/update_apps_on_spaces.sh": {
      "path": "config/plugins/update_apps_on_spaces.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env bash\n\nCURRENT_SPACES=\"$(yabai -m query --displays | jq -r '.[].spaces | @sh')\"\n\nargs=()\nwhile read -r line\ndo\n  for space in $line\n  do\n    icon_strip=\" \"\n    apps=$(yabai -m query --windows --space $space | jq -r \".[].app\")\n    for app in $apps\n    do\n      icon_strip+=\" $($HOME/.config/sketchybar/plugins/icon_map.sh \"$app\")\"\n    done\n    args+=(--set space.$space label=\"$icon_strip\" label.drawing=on)\n  done\ndone <<< \"$CURRENT_SPACES\"\n\nsketchybar -m \"${args[@]}\"\n",
      "purpose": "This file is a SketchyBar plugin script that updates the labels of SketchyBar spaces based on the applications currently open in each space, using the yabai tiling window manager and jq command-line JSON processor.",
      "content_summary": "The script queries the current spaces and windows on each space using yabai, maps the application icons using another SketchyBar plugin (icon_map.sh), and sets the labels of the SketchyBar spaces with the corresponding application icons."
    },
    "config/plugins/yabai.sh": {
      "path": "config/plugins/yabai.sh",
      "language": "bash",
      "dependencies": [
        "\"$HOME/.config/sketchybar/colors.sh\"",
        "\"$HOME/.config/sketchybar/icons.sh\""
      ],
      "content": "#!/bin/sh\n\n  source \"$HOME/.config/sketchybar/colors.sh\"\n  source \"$HOME/.config/sketchybar/icons.sh\"\n\n\nwindow_state() {\n\n  WINDOW=$(yabai -m query --windows --window)\n  CURRENT=$(echo \"$WINDOW\" | jq '.[\"stack-index\"]')\n\n  args=()\n  icon=\"\"\n\n  yabai_mode=$(yabai -m query --spaces --space | jq -r .type)\n  case \"$yabai_mode\" in\n      bsp)\n      icon=\"$YABAI_BSP \"\n      ;;\n      stack)\n      icon=\"$YABAI_STACK \"\n      ;;\n      float)\n      icon=\"$YABAI_FLOAT \"\n      ;;\n  esac\n\n\n  if [[ $CURRENT -gt 0 ]]; then\n    LAST=$(yabai -m query --windows --window stack.last | jq '.[\"stack-index\"]')\n    icon+=$YABAI_STACK\n    args+=(--set $NAME icon=$icon label.drawing=on label=$(printf \"[%s/%s]\" \"$CURRENT\" \"$LAST\"))\n  else\n    args+=(--set $NAME label.drawing=off)\n    case \"$(echo \"$WINDOW\" | jq '.[\"is-floating\"]')\" in\n      \"false\")\n        if [ \"$(echo \"$WINDOW\" | jq '.[\"has-fullscreen-zoom\"]')\" = \"true\" ]; then\n          icon+=$YABAI_FULLSCREEN_ZOOM\n          args+=(--set $NAME icon=$icon)\n        elif [ \"$(echo \"$WINDOW\" | jq '.[\"has-parent-zoom\"]')\" = \"true\" ]; then\n          icon+=$YABAI_PARENT_ZOOM\n          args+=(--set $NAME icon=$icon)\n        else\n          icon+=$YABAI_GRID\n          args+=(--set $NAME icon=$icon)\n        fi\n        ;;\n      \"true\")\n          icon+=$YABAI_FLOAT\n          args+=(--set $NAME icon=$icon)\n        ;;\n    esac\n  fi\n\n  sketchybar -m \"${args[@]}\"\n}\n\n\nwindows_on_spaces () {\n\n  DISPLAY_INFO=\"$(yabai -m query --displays)\"\n  CURRENT_SPACES=\"$(yabai -m query --displays | jq -r '.[].spaces | @sh')\"\n\n  args=()\n  while read -r line\n  do\n    for space in $line\n    do\n      icon_strip=\" \"\n      apps=$(yabai -m query --windows --space $space | jq -r \".[].app\")\n      for app in $apps\n      do\n        icon_strip+=\" $($HOME/.config/sketchybar/plugins/icon_map.sh \"$app\")\"\n      done\n      args+=(--set space.$space label=\"$icon_strip\" label.drawing=on)\n    done\n  done <<< \"$CURRENT_SPACES\"\n\n  sketchybar -m \"${args[@]}\"\n\n}\n\nmouse_clicked() {\n  yabai -m window --toggle float\n  update\n}\n\ncase \"$SENDER\" in\n  \"mouse.clicked\") mouse_clicked\n  ;;\n  \"forced\") exit 0\n  ;;\n  \"window_focus\") window_state \n  ;;\n  \"windows_on_spaces\") windows_on_spaces\n  ;;\nesac\n",
      "purpose": "This file is a SketchyBar plugin script for managing and displaying information about windows and workspaces using the yabai tiling window manager.",
      "content_summary": "The script sources color and icon files, defines functions for getting the current window state, displaying windows on spaces, and handling mouse clicks to toggle window floating. It also sets up cases to respond to different events such as mouse clicks, forced updates, and window focus changes."
    },
    "config/plugins/icon_map.sh": {
      "path": "config/plugins/icon_map.sh",
      "language": "bash",
      "dependencies": [],
      "content": "case \"$1\" in\n\"Brave Browser\")\n  icon_result=\":brave_browser:\"\n  ;;\n\"Keyboard Maestro\")\n  icon_result=\":keyboard_maestro:\"\n  ;;\n\"Min\")\n  icon_result=\":min_browser:\"\n  ;;\n\"Final Cut Pro\")\n  icon_result=\":final_cut_pro:\"\n  ;;\n\"FaceTime\")\n  icon_result=\":face_time:\"\n  ;;\n\"Affinity Publisher\")\n  icon_result=\":affinity_publisher:\"\n  ;;\n\"Messages\" | \"Nachrichten\")\n  icon_result=\":messages:\"\n  ;;\n\"Tweetbot\" | \"Twitter\")\n  icon_result=\":twitter:\"\n  ;;\n\"ClickUp\")\n  icon_result=\":click_up:\"\n  ;;\n\"KeePassXC\")\n  icon_result=\":kee_pass_x_c:\"\n  ;;\n\"Microsoft Edge\")\n  icon_result=\":microsoft_edge:\"\n  ;;\n\"VLC\")\n  icon_result=\":vlc:\"\n  ;;\n\"Emacs\")\n  icon_result=\":emacs:\"\n  ;;\n\"Thunderbird\")\n  icon_result=\":thunderbird:\"\n  ;;\n\"Notes\")\n  icon_result=\":notes:\"\n  ;;\n\"Caprine\")\n  icon_result=\":caprine:\"\n  ;;\n\"Zulip\")\n  icon_result=\":zulip:\"\n  ;;\n\"Spark\")\n  icon_result=\":spark:\"\n  ;;\n\"Microsoft To Do\" | \"Things\")\n  icon_result=\":things:\"\n  ;;\n\"DEVONthink 3\")\n  icon_result=\":devonthink3:\"\n  ;;\n\"GitHub Desktop\")\n  icon_result=\":git_hub:\"\n  ;;\n\"App Store\")\n  icon_result=\":app_store:\"\n  ;;\n\"Chromium\" | \"Google Chrome\" | \"Google Chrome Canary\")\n  icon_result=\":google_chrome:\"\n  ;;\n\"zoom.us\")\n  icon_result=\":zoom:\"\n  ;;\n\"MoneyMoney\")\n  icon_result=\":bank:\"\n  ;;\n\"Color Picker\")\n  icon_result=\":color_picker:\"\n  ;;\n\"Microsoft Word\")\n  icon_result=\":microsoft_word:\"\n  ;;\n\"Iris\")\n  icon_result=\":iris:\"\n  ;;\n\"WebStorm\")\n  icon_result=\":web_storm:\"\n  ;;\n\"Neovide\" | \"MacVim\" | \"Vim\" | \"VimR\")\n  icon_result=\":vim:\"\n  ;;\n\"Sublime Text\")\n  icon_result=\":sublime_text:\"\n  ;;\n\"PomoDone App\")\n  icon_result=\":pomodone:\"\n  ;;\n\"Setapp\")\n  icon_result=\":setapp:\"\n  ;;\n\"qutebrowser\")\n  icon_result=\":qute_browser:\"\n  ;;\n\"Mattermost\")\n  icon_result=\":mattermost:\"\n  ;;\n\"Notability\")\n  icon_result=\":notability:\"\n  ;;\n\"WhatsApp\")\n  icon_result=\":whats_app:\"\n  ;;\n\"OBS\")\n  icon_result=\":obsstudio:\"\n  ;;\n\"Parallels Desktop\")\n  icon_result=\":parallels:\"\n  ;;\n\"VMware Fusion\")\n  icon_result=\":vmware_fusion:\"\n  ;;\n\"Pine\")\n  icon_result=\":pine:\"\n  ;;\n\"Microsoft Excel\")\n  icon_result=\":microsoft_excel:\"\n  ;;\n\"Microsoft PowerPoint\")\n  icon_result=\":microsoft_power_point:\"\n  ;;\n\"Matlab\")\n  icon_result=\":matlab:\"\n  ;;\n\"Numbers\")\n  icon_result=\":numbers:\"\n  ;;\n\"Default\")\n  icon_result=\":default:\"\n  ;;\n\"Element\")\n  icon_result=\":element:\"\n  ;;\n\"Bear\")\n  icon_result=\":bear:\"\n  ;;\n\"TeamSpeak 3\")\n  icon_result=\":team_speak:\"\n  ;;\n\"Airmail\")\n  icon_result=\":airmail:\"\n  ;;\n\"Firefox Developer Edition\" | \"Firefox Nightly\")\n  icon_result=\":firefox_developer_edition:\"\n  ;;\n\"Trello\")\n  icon_result=\":trello:\"\n  ;;\n\"TickTick\")\n  icon_result=\":tick_tick:\"\n  ;;\n\"Notion\")\n  icon_result=\":notion:\"\n  ;;\n\"Live\")\n  icon_result=\":ableton:\"\n  ;;\n\"Evernote Legacy\")\n  icon_result=\":evernote_legacy:\"\n  ;;\n\"Calendar\" | \"Fantastical\")\n  icon_result=\":calendar:\"\n  ;;\n\"Android Studio\")\n  icon_result=\":android_studio:\"\n  ;;\n\"Xcode\")\n  icon_result=\":xcode:\"\n  ;;\n\"Slack\")\n  icon_result=\":slack:\"\n  ;;\n\"Sequel Pro\")\n  icon_result=\":sequel_pro:\"\n  ;;\n\"Bitwarden\")\n  icon_result=\":bit_warden:\"\n  ;;\n\"System Preferences\")\n  icon_result=\":gear:\"\n  ;;\n\"Discord\" | \"Discord Canary\" | \"Discord PTB\")\n  icon_result=\":discord:\"\n  ;;\n\"Vivaldi\")\n  icon_result=\":vivaldi:\"\n  ;;\n\"Firefox\")\n  icon_result=\":firefox:\"\n  ;;\n\"Skype\")\n  icon_result=\":skype:\"\n  ;;\n\"Dropbox\")\n  icon_result=\":dropbox:\"\n  ;;\n\"\u5fae\u4fe1\")\n  icon_result=\":wechat:\"\n  ;;\n\"Typora\")\n  icon_result=\":text:\"\n  ;;\n\"Blender\")\n  icon_result=\":blender:\"\n  ;;\n\"Canary Mail\" | \"HEY\" | \"Mail\" | \"Mailspring\" | \"MailMate\" | \"\u90ae\u4ef6\")\n  icon_result=\":mail:\"\n  ;;\n\"Safari\" | \"Safari Technology Preview\")\n  icon_result=\":safari:\"\n  ;;\n\"Telegram\")\n  icon_result=\":telegram:\"\n  ;;\n\"Keynote\")\n  icon_result=\":keynote:\"\n  ;;\n\"Reeder\")\n  icon_result=\":reeder5:\"\n  ;;\n\"Spotify\")\n  icon_result=\":spotify:\"\n  ;;\n\"MAMP\" | \"MAMP PRO\")\n  icon_result=\":mamp:\"\n  ;;\n\"Figma\")\n  icon_result=\":figma:\"\n  ;;\n\"Joplin\")\n  icon_result=\":joplin:\"\n  ;;\n\"Spotlight\")\n  icon_result=\":spotlight:\"\n  ;;\n\"Music\")\n  icon_result=\":music:\"\n  ;;\n\"Insomnia\")\n  icon_result=\":insomnia:\"\n  ;;\n\"TIDAL\")\n  icon_result=\":tidal:\"\n  ;;\n\"Alfred\")\n  icon_result=\":alfred:\"\n  ;;\n\"Pages\")\n  icon_result=\":pages:\"\n  ;;\n\"Folx\")\n  icon_result=\":folx:\"\n  ;;\n\"Android Messages\")\n  icon_result=\":android_messages:\"\n  ;;\n\"mpv\")\n  icon_result=\":mpv:\"\n  ;;\n\"\u7f51\u6613\u4e91\u97f3\u4e50\")\n  icon_result=\":netease_music:\"\n  ;;\n\"Transmit\")\n  icon_result=\":transmit:\"\n  ;;\n\"Pi-hole Remote\")\n  icon_result=\":pihole:\"\n  ;;\n\"Nova\")\n  icon_result=\":nova:\"\n  ;;\n\"Affinity Designer\")\n  icon_result=\":affinity_designer:\"\n  ;;\n\"IntelliJ IDEA\")\n  icon_result=\":idea:\"\n  ;;\n\"Drafts\")\n  icon_result=\":drafts:\"\n  ;;\n\"Audacity\")\n  icon_result=\":audacity:\"\n  ;;\n\"Affinity Photo\")\n  icon_result=\":affinity_photo:\"\n  ;;\n\"Atom\")\n  icon_result=\":atom:\"\n  ;;\n\"Obsidian\")\n  icon_result=\":obsidian:\"\n  ;;\n\"CleanMyMac X\")\n  icon_result=\":desktop:\"\n  ;;\n\"Zotero\")\n  icon_result=\":zotero:\"\n  ;;\n\"Todoist\")\n  icon_result=\":todoist:\"\n  ;;\n\"LibreWolf\")\n  icon_result=\":libre_wolf:\"\n  ;;\n\"Grammarly Editor\")\n  icon_result=\":grammarly:\"\n  ;;\n\"OmniFocus\")\n  icon_result=\":omni_focus:\"\n  ;;\n\"Reminders\")\n  icon_result=\":reminders:\"\n  ;;\n\"Preview\" | \"Skim\" | \"zathura\")\n  icon_result=\":pdf:\"\n  ;;\n\"1Password 7\")\n  icon_result=\":one_password:\"\n  ;;\n\"Code\" | \"Code - Insiders\")\n  icon_result=\":code:\"\n  ;;\n\"VSCodium\")\n  icon_result=\":vscodium:\"\n  ;;\n\"Tower\")\n  icon_result=\":tower:\"\n  ;;\n\"Calibre\")\n  icon_result=\":book:\"\n  ;;\n\"Finder\" | \"\u8bbf\u8fbe\")\n  icon_result=\":finder:\"\n  ;;\n\"Linear\")\n  icon_result=\":linear:\"\n  ;;\n\"League of Legends\")\n  icon_result=\":league_of_legends:\"\n  ;;\n\"Zeplin\")\n  icon_result=\":zeplin:\"\n  ;;\n\"Signal\")\n  icon_result=\":signal:\"\n  ;;\n\"Podcasts\")\n  icon_result=\":podcasts:\"\n  ;;\n\"Alacritty\" | \"Hyper\" | \"iTerm2\" | \"kitty\" | \"Terminal\" | \"WezTerm\")\n  icon_result=\":terminal:\"\n  ;;\n\"Tor Browser\")\n  icon_result=\":tor_browser:\"\n  ;;\n\"Kakoune\")\n  icon_result=\":kakoune:\"\n  ;;\n\"GrandTotal\" | \"Receipts\")\n  icon_result=\":dollar:\"\n  ;;\n\"Sketch\")\n  icon_result=\":sketch:\"\n  ;;\n\"Sequel Ace\")\n  icon_result=\":sequel_ace:\"\n  ;;\n*)\n  icon_result=\":default:\"\n  ;;\nesac\necho $icon_result\n",
      "purpose": "The given file is a SketchyBar configuration script for defining custom icons for various applications. It uses a case statement to map application names to their respective emoji icons.",
      "content_summary": "The script defines 69 different application icons using emojis. Each case statement corresponds to an application name, and the corresponding icon is set as the icon_result variable. The default icon is set as the :default: emoji if no matching case is found."
    },
    "config/plugins/message.sh": {
      "path": "config/plugins/message.sh",
      "language": "bash",
      "dependencies": [
        "\"$HOME/.config/sketchybar/colors.sh\" # Loads all defined colors"
      ],
      "content": "#!/usr/bin/env sh\nsource \"$HOME/.config/sketchybar/colors.sh\" # Loads all defined colors\n\nsketchybar --set $NAME  label=\"$MSG\" \\\n                        icon=\"$ICON\" \\\n                        icon.color=$FGC \\\n                        label.color=$FGC \\\n                        background.color=\"$BGC\"\n",
      "purpose": "This file is used to configure a SketchyBar plugin, specifically for displaying messages. It sets the name, label, icon, icon color, label color, and background color for the message plugin.",
      "content_summary": "The file sources the colors defined in the colors.sh file, then sets the SketchyBar for the specified plugin with the given properties."
    },
    "config/items/calendar.sh": {
      "path": "config/items/calendar.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n#\n\nsketchybar --add item     calendar right                   \\\n           --set calendar icon=cal                         \\\n                          icon.color=$BG                   \\\n                          icon.font=\"$FONT:Black:14.0\"     \\\n                          icon.padding_left=5              \\\n                          icon.padding_right=5             \\\n                          label.color=$GREY                \\\n                          label.font=\"$FONT:Black:14.0\"    \\\n                          label.padding_left=5             \\\n                          label.padding_right=5            \\\n                          width=140                        \\\n                          align=center                     \\\n                          background.color=$BLACK1         \\\n                          background.height=26             \\\n                          background.corner_radius=9       \\\n                          script=\"$PLUGIN_DIR/calendar.sh\" \\\n                          updates=on                       \\\n                          update_freq=1\n",
      "purpose": "The given file is a SketchyBar configuration script for a calendar item. Its purpose is to create and customize a calendar widget that displays the current date and possibly other calendar-related information in the system tray.",
      "content_summary": "The script adds a calendar item to SketchyBar, sets its position to the right, defines its icon, color, font, padding, label, width, alignment, background color and height, corner radius, script to be run, update frequency, and whether updates should be automatic."
    },
    "config/items/input.sh": {
      "path": "config/items/input.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n#\nsketchybar                                                                  \\\n    --add event input_change 'AppleSelectedInputSourcesChangedNotification' \\\n    --add item input right                                                  \\\n    --set input script=\"$PLUGIN_DIR/input.sh\"                               \\\n                icon.color=$GREY                                            \\\n                icon.font=\"$FONT:Black:16.0\"                                \\\n                icon.padding_left=5                                         \\\n                icon.padding_right=2                                        \\\n                background.color=$BLACK1                                    \\\n                background.height=26                                        \\\n                background.corner_radius=11                                 \\\n                align=center                                                \\\n    --subscribe input input_change\n",
      "purpose": "This file is used to configure an item in SketchyBar, a macOS system tray application. The item in question is an input item that displays the current input source (keyboard layout) and allows the user to switch between available input sources.",
      "content_summary": "The file defines the creation of an input item in SketchyBar, subscribes to the 'AppleSelectedInputSourcesChangedNotification' to update the item when the input source changes, and specifies the script to be run for the item (located in the 'PLUGIN_DIR/input.sh' file). It also sets various properties for the item's appearance, such as icon, font, padding, background color, height, corner radius, and alignment."
    },
    "config/items/spotify.sh": {
      "path": "config/items/spotify.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n\nSPOTIFY_EVENT=\"com.spotify.client.PlaybackStateChanged\"\nPOPUP_SCRIPT=\"sketchybar -m --set spotify.cover popup.drawing=toggle\"\n\nsketchybar --add       event           spotify_change $SPOTIFY_EVENT       \\\n           --add       item            spotify.cover center                \\\n           --set       spotify.cover   click_script=\"$POPUP_SCRIPT\"        \\\n                                       popup.horizontal=on                 \\\n                                       popup.align=center                  \\\n                                       popup.background.image.scale=0.5    \\\n                                       popup.background.corner_radius=0    \\\n                                       icon.drawing=off                    \\\n                                       label.drawing=off                   \\\n                                                                           \\\n           --add       item            spotify.title q                     \\\n           --set       spotify.title   click_script=\"$POPUP_SCRIPT\"        \\\n                                       icon=\udbc1\udc6a                             \\\n                                       drawing=off                         \\\n                                       script=\"$PLUGIN_DIR/spotify.sh\"     \\\n                                       background.padding_right=0          \\\n           --subscribe spotify.title   mouse.entered mouse.exited          \\\n                                       mouse.exited.global                 \\\n                                                                           \\\n           --add       item            spotify.artist e                    \\\n           --set       spotify.artist  click_script=\"$POPUP_SCRIPT\"        \\\n                                       icon=\udbc1\udce4                             \\\n                                       drawing=off                         \\\n                                       background.padding_left=0           \\\n                                       script=\"$PLUGIN_DIR/spotify.sh\"     \\\n           --subscribe spotify.artist  mouse.entered mouse.exited          \\\n                                       mouse.exited.global                 \\\n                                                                           \\\n           --add       item            spotify.back popup.spotify.cover    \\\n           --set       spotify.back    icon=\udbc0\ude8e                             \\\n                                       icon.padding_left=5                 \\\n                                       icon.padding_right=5                \\\n                                       script=\"$PLUGIN_DIR/spotify.sh\"     \\\n                                       label.drawing=off                   \\\n           --subscribe spotify.back    mouse.clicked                       \\\n                                                                           \\\n           --add       item            spotify.play popup.spotify.cover    \\\n           --set       spotify.play    icon=\udbc0\ude94                             \\\n                                       icon.padding_left=5                 \\\n                                       icon.padding_right=5                \\\n                                       updates=on                          \\\n                                       label.drawing=off                   \\\n                                       script=\"$PLUGIN_DIR/spotify.sh\"     \\\n           --subscribe spotify.play    mouse.clicked spotify_change        \\\n                                                                           \\\n           --add       item            spotify.next popup.spotify.cover    \\\n           --set       spotify.next    icon=\udbc0\ude90                             \\\n                                       icon.padding_left=5                 \\\n                                       icon.padding_right=10               \\\n                                       label.drawing=off                   \\\n                                       script=\"$PLUGIN_DIR/spotify.sh\"     \\\n           --subscribe spotify.next    mouse.clicked                       \\\n                                                                           \\\n           --add       item            spotify.shuffle popup.spotify.cover \\\n           --set       spotify.shuffle icon=\udbc0\ude9d                             \\\n                                       icon.highlight_color=0xff1DB954     \\\n                                       icon.padding_left=5                 \\\n                                       icon.padding_right=5                \\\n                                       label.drawing=off                   \\\n                                       script=\"$PLUGIN_DIR/spotify.sh\"     \\\n           --subscribe spotify.shuffle mouse.clicked                       \\\n                                                                           \\\n           --add       item            spotify.repeat popup.spotify.cover  \\\n           --set       spotify.repeat  icon=\udbc0\ude9e                             \\\n                                       icon.highlight_color=0xff1DB954     \\\n                                       icon.padding_left=5                 \\\n                                       icon.padding_right=5                \\\n                                       label.drawing=off                   \\\n                                       script=\"$PLUGIN_DIR/spotify.sh\"     \\\n           --subscribe spotify.repeat  mouse.clicked                       \\\n                                                                           \\\n           --add      bracket          spotify spotify.back                \\\n                                               spotify.play                \\\n                                               spotify.next                \\\n                                               spotify.shuffle             \\\n                                               spotify.repeat              \\\n           --set      spotify          blur_radius=30                      \\\n                                       background.color=0x60000000         \\\n                                       background.corner_radius=9          \\\n                                       background.drawing=on               \\\n                                       drawing=off\n",
      "purpose": "This file is used to configure a SketchyBar item for displaying Spotify playback information and controls.",
      "content_summary": "The file defines various items such as cover art, title, artist, play, next, shuffle, and repeat buttons for Spotify playback. It also sets up event subscriptions for mouse interactions and popup scripts for displaying the cover art when clicked."
    },
    "config/items/wifi.sh": {
      "path": "config/items/wifi.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n#\nPOPUP_OFF=\"sketchybar --set wifi.control popup.drawing=off\"\nPOPUP_CLICK_SCRIPT=\"sketchybar --set \\$NAME popup.drawing=toggle\"\n\n\nsketchybar --add item wifi right                        \\\n           --set wifi script=\"$PLUGIN_DIR/wifi.sh\"      \\\n                      icon=$OFFLINE                     \\\n                      label.drawing=off                 \\\n                      icon.color=$GREY                  \\\n                      icon.padding_left=8               \\\n                      icon.padding_right=8              \\\n                      icon.font=\"$FONT:Black:16.0\"      \\\n                      background.padding_right=12       \\\n                      background.color=$BLACK1          \\\n                      background.height=26              \\\n                      background.corner_radius=11       \\\n                      update_freq=5                     \\\n                      popup.horizontal=on               \\\n                      popup.background.color=$PITCH     \\\n                      popup.background.corner_radius=5  \\\n                      popup.align=right                 \\\n                      click_script=\"$POPUP_CLICK_SCRIPT\"\\\n                      update_freq=10                    \\\n                                                        \\\n           --add item  wifi.ssid popup.wifi             \\\n           --set       wifi.ssid label=\"$SSID\"          \\\n                         label.color=\"$FG\"              \\\n                         click_script=\"$POPUP_OFF\"      \\\n                                                        \\\n           --add item wifi.speed popup.wifi             \\\n           --set      wifi.speed label=$SPD             \\\n                         label.color=\"$FG\"              \\\n                         click_script=\"$POPUP_OFF\"      \\\n                                                        \\\n           --add item wifi.ip popup.wifi                \\\n           --set      wifi.ip label=$IP_LBL             \\\n                         label.color=\"$FG\"              \\\n                         click_script=\"$POPUP_OFF\"      \\\n",
      "purpose": "This file is used to configure a SketchyBar item for displaying Wi-Fi related information such as status, SSID, speed, and IP address.",
      "content_summary": "The file defines the item named 'wifi', sets its properties like position, icon, label, color, padding, font, background, update frequency, and click script. It also adds sub-items for SSID, speed, and IP, and sets their properties. The click script toggles the popup and the popup-off script hides the popup."
    },
    "config/items/layout.sh": {
      "path": "config/items/layout.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n\nsketchybar --add       event        space_layout_changed          \\\n           --add       event        window_focus                  \\\n           --add       event        windows_on_spaces             \\\n           --add       event        message_changed               \\\n           --add       item         system.yabai left             \\\n           --set       system.yabai script=\"$PLUGIN_DIR/yabai.sh\" \\\n                                    icon.font=\"$FONT:Bold:16.0\"   \\\n                                    label.drawing=off             \\\n                                    icon.width=60                 \\\n                                    icon.align=center             \\\n                                    icon=$YABAI_GRID              \\\n                                    icon.color=$BG0               \\\n                                    background.color=$PITCH       \\\n                                    background.padding_left=5     \\\n                                    background.padding_right=5    \\\n                                    align=center                  \\\n                                    background.height=26          \\\n                                    updates=on                    \\\n           --subscribe system.yabai window_focus                  \\\n                                    windows_on_spaces             \\\n                                    space_layout_changed          \\\n                                    mouse.clicked\n",
      "purpose": "This file is used to configure SketchyBar, a macOS system tray application, by defining items and events to be displayed and subscribed to. The purpose of this specific file is to set up a layout for SketchyBar, including items such as system information and event triggers like window focus, space layout changes, and more.",
      "content_summary": "The file defines SketchyBar items and events, including an event item for space layout changes, window focus, windows on spaces, message changes, and several item items for system.yabai (a window manager for macOS). The system.yabai item is configured with a script, font, label settings, icon, color, padding, alignment, height, updates, and subscriptions to the specified events."
    },
    "config/items/spaces.sh": {
      "path": "config/items/spaces.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\n\nSPACE_ICONS=(_ 1 2 3 4 5 6 7 8 9 0)\n\nsid=10\nwhile [ $sid -gt 0 ]\ndo\n  sketchybar --add space      space.$sid right                                \\\n             --set space.$sid associated_space=$sid                           \\\n                              icon=${SPACE_ICONS[$sid]}                       \\\n                              icon.padding_left=22                            \\\n                              icon.padding_right=22                           \\\n                              label.padding_right=33                          \\\n                              icon.highlight_color=$GREY                      \\\n                              icon.color=$BLACK                               \\\n                              label.font=\"sketchybar-app-font:Regular:16.0\"   \\\n                              label.background.height=26                      \\\n                              label.background.color=$BG0                     \\\n                              label.background.drawing=on                     \\\n                              label.background.padding_left=8                 \\\n                              label.background.padding_right=8                \\\n                              label.background.color=$INACTIVE_TAB_BACKGROUND \\\n                              label.color=$WHITE                              \\\n                              label.background.corner_radius=9                \\\n                              label.drawing=off                               \\\n                              click_script=\"$SPACE_CLICK_SCRIPT\"\n  sid=$((\"$sid\"-1))\ndone\n\nND=$(yabai -m query --displays | jq 'length')\nwhile [ $ND -gt 0 ]\ndo\n     DSPCS=$(yabai -m query --spaces | jq --argjson d $ND -r 'map(select(.display == $d)) | reverse | map(\"space.\\(.index)\") | .[]' | xargs echo)\n     sketchybar --add bracket spaces.$ND ${DSPCS} \\\n                --set spaces.$ND                  \\\n                      background.color=$PITCH     \\\n                      associated_display=$ND      \\\n                      background.height=38        \\\n                      background.padding_left=20  \\\n                      background.padding_right=20 \\\n                      background.corner_radius=11\n     ND=$((\"$ND\"-1))\ndone\n",
      "purpose": "This file is used to configure SketchyBar, a macOS system tray application, to display space icons and associated spaces on multiple displays. It also sets the appearance of the space icons and brackets separating the spaces on each display.",
      "content_summary": "The script defines an array of space icons, initializes a counter for the number of spaces, and uses a loop to add space items to SketchyBar for each space on each display. Each space item is configured with an icon, label, and various styling options. Additionally, the script uses another loop to create brackets separating the spaces on each display."
    },
    "config/items/message.sh": {
      "path": "config/items/message.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/usr/bin/env sh\nsketchybar --add event   message_changed                              \\\n           --add item    message left                                 \\\n           --set message label=\"$MSG\"                                 \\\n                         icon.font=\"sketchybar-app-font:Regular:16.0\" \\\n                         icon.padding_left=5                          \\\n                         icon.padding_right=5                         \\\n                         icon=\"$ICON\"                                 \\\n                         icon.color=$ACTIVE_ITEM_BACKGROUND           \\\n                         icon.align=center                            \\\n                         label.padding_left=5                         \\\n                         label.padding_right=5                        \\\n                         label.drawing=on                             \\\n                         label.font=\"$FONT:Regular:16.0\"              \\\n                         label.color=$BG                              \\\n                         icon.drawing=on                              \\\n                         background.drawing=on                        \\\n                         background.color=$ACTIVE_BORDER_COLOR        \\\n                         background.corner_radius=9                   \\\n                         background.height=30                         \\\n                         background.padding_left=5                    \\\n                         background.padding_right=5                   \\\n                         align=center                                 \\\n                         script=${PLUGIN_DIR}/message.sh              \\\n                         updates=on                                   \\\n           --subscribe message      message_changed\n",
      "purpose": "This file is used to configure a SketchyBar item named 'message'. The item displays a message with an icon, and it is designed to update dynamically based on the content of the message.",
      "content_summary": "The file defines the properties of the 'message' item, such as its label, icon, font, padding, color, drawing, background, corner radius, height, padding, alignment, script, and updates. It also subscribes to the 'message' event to trigger updates when the message changes."
    }
  }
}