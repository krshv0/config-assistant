{
  "repo_name": "haydenrou",
  "structure": {
    "sketchybarrc": {
      "path": "sketchybarrc",
      "language": "bash",
      "dependencies": [],
      "content": "COLOR=0xFFd7827e\n\nsketchybar --bar height=54        \\\n                 margin=12        \\\n                 y_offset=0       \\\n                 padding_left=0   \\\n                 padding_right=0  \\\n                 color=0x00000000\n\nsketchybar --default updates=when_shown                             \\\n                     icon.font=\"CommitMono Nerd Font:Regular:12\"  \\\n                     icon.color=0xFFFFFFFF                          \\\n                     label.font=\"CommitMono Nerd Font:Regular:12\" \\\n                     background.color=0x00000000                    \\\n                     y_offset=0\n\nSPACE_ICONS=(\"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" \"10\")\nSPACES=()\n\nfor i in \"${!SPACE_ICONS[@]}\"\ndo\n  sid=$(($i+1))\n  SPACES+=(space.$sid)\n  sketchybar --add space space.$sid left \\\n             --set space.$sid associated_space=$sid \\\n                              icon=${SPACE_ICONS[i]} \\\n                              icon.highlight_color=0xFFFFFFFF \\\n                              icon.align=center \\\n                              icon.width=30 \\\n                              label.drawing=off \\\n                              click_script=\"yabai -m space --focus $sid\"\ndone\n\nsketchybar --add item new_space left                        \\\n           --set      new_space icon.width=24               \\\n                                label.padding_right=2       \\\n                                icon.align=center           \\\n                                icon.padding_right=2        \\\n                                icon=+                      \\\n                                click_script='./scripts/new_space.sh'\n\nsketchybar --add bracket spaces '/space\\..*/' new_space                \\\n           --set         spaces background.color=0xEB1e1e2e            \\\n                                background.border_width=1              \\\n                                background.border_color=$COLOR          \\\n                                blur_radius=2                          \\\n                                background.height=30\n\nsketchybar --add item highlight_space left                      \\\n           --set      highlight_space width=22                  \\\n                                      background.color=$COLOR    \\\n                                      background.height=22      \\\n                                      script='./scripts/highlight_space.sh'\n\nsketchybar --subscribe highlight_space space_change\n\nfor i in \"${!SPACE_ICONS[@]}\"\ndo\n  sid=$(($i+1))\n  SPACES+=(space.$sid)\n  sketchybar --add space space_ex.$sid left \\\n             --set space_ex.$sid associated_space=$sid \\\n                              icon=${SPACE_ICONS[i]} \\\n                              icon.highlight_color=0xFFFFFFFF \\\n                              icon.align=center \\\n                              icon.width=30 \\\n                              label.drawing=off \\\n                              click_script=\"yabai -m space --focus $sid\"\ndone\n\nsketchybar --set space_ex.1 padding_left=-999999\n\nsketchybar --default                                                \\\n                     background.color=0xEB1e1e2e                    \\\n                     blur_radius=2                                  \\\n                     background.height=30                           \\\n                     icon.padding_left=12                           \\\n                     icon.padding_right=4                           \\\n                     label.padding_left=4                           \\\n                     label.padding_right=12                         \\\n                     background.padding_left=18                     \\\n                     background.border_width=1\n\n\nsketchybar --add item spotify q                                  \\\n           --set      spotify label.padding_left=12                 \\\n                            icon=\u266b                                  \\\n                            background.padding_left=0               \\\n                            icon.padding_left=12                     \\\n                            icon.padding_right=0                    \\\n                            script='./scripts/spotify_info.sh'      \\\n                            background.border_color=0x77ADADAD      \\\n                            label.max_chars=54                      \\\n                            update_freq=5                           \\\n                            icon.color=$COLOR                      \\\n                            background.border_color=$COLOR         \\\n\nsketchybar --add item settings e                                  \\\n           --set      settings                                      \\\n                            icon=\u26ed                                  \\\n                            label=\"Settings\"                      \\\n                            label.padding_left=0                    \\\n                            icon.padding_right=10                    \\\n                            background.padding_left=0               \\\n                            click_script='./scripts/system_settings.sh'      \\\n                            icon.color=$COLOR                    \\\n                            background.border_color=$COLOR       \\\n\nsketchybar --add item time right                                    \\\n           --set      time icon=\udb85\udc4e                                   \\\n                           icon.color=$COLOR                       \\\n                           background.border_color=$COLOR          \\\n                           label=\"$(date '+%I:%M %p')\"              \\\n                           script='./scripts/time.sh'               \\\n                           update_freq=1\n\nsketchybar --add item date right                                    \\\n           --set      date icon=\udb86\ude30                                   \\\n                           icon.color=$COLOR                          \\\n                           background.border_color=$COLOR             \\\n                           label=\"$(date '+%a %b %d')\"              \\\n                           script='./scripts/date.sh'               \\\n                           update_freq=10\n\nsketchybar --add item weather right                                 \\\n           --set      weather icon=A                                \\\n                              icon.color=$COLOR                      \\\n                              background.border_color=$COLOR         \\\n                              label=\"--\u00b0F\"                          \\\n                              script='./scripts/weather.sh'         \\\n                              update_freq=60\n\nsketchybar --add item battery right                                 \\\n           --set      battery icon=\uf240                                \\\n                              icon.color=$COLOR                    \\\n                              background.border_color=$COLOR       \\\n                              label=\"--%\"                           \\\n                              script='./scripts/battery.sh'         \\\n                              update_freq=20\n\nsketchybar --hotload on\nsketchybar --update\n",
      "purpose": "This file, named sketchybarrc, is used to configure SketchyBar, a system tray application for macOS. It sets up various elements such as spaces, icons, scripts, and widgets to display information like time, date, weather, battery level, and music player details.",
      "content_summary": "The file contains configuration settings for SketchyBar's appearance (COLOR, height, margin, y_offset, padding, etc.), default updates, space icons, spaces, new space, bracket spaces, highlight space, subscribe to space_change, space_ex, padding for the first space, background settings, spotify item, settings item, time item, date item, weather item, battery item, hotload, and update commands."
    },
    "scripts/new_space.sh": {
      "path": "scripts/new_space.sh",
      "language": "bash",
      "dependencies": [],
      "content": "yabai -m space --create && \\\n    index=\"$(yabai -m query --spaces --display | jq 'map(select(.\"is-native-fullscreen\" == false))[-1].index')\" && \\\n    yabai -m space --focus \"${index}\"",
      "purpose": "This file is used to create a new workspace (or space) in the yabai tiling window manager and then focus on that newly created workspace.",
      "content_summary": "The script first creates a new workspace using yabai command. Then it finds the index of the last workspace that is not in fullscreen mode (excluding native fullscreen applications) using jq command. Finally, it focuses on the newly created workspace with the index found."
    },
    "scripts/system_settings.sh": {
      "path": "scripts/system_settings.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nosascript -e 'tell application \"System Settings\" to activate'\n",
      "purpose": "The purpose of this file is to open the System Settings application on macOS using the Terminal.",
      "content_summary": "This script uses the osascript command to activate the System Settings application."
    },
    "scripts/spotify_info.sh": {
      "path": "scripts/spotify_info.sh",
      "language": "bash",
      "dependencies": [],
      "content": "#!/bin/bash\n\nif ! osascript -e 'application \"Spotify\" is running'; then\n  echo \"Spotify is not running\"\n  exit 0\nfi\n\nstate=$(osascript -e 'tell application \"Spotify\" to player state as string')\nif [ \"$state\" = \"paused\" ]; then\n  echo \"Paused\"\nelse\n  song=$(osascript -e 'tell application \"Spotify\" to name of current track as string')\n  artist=$(osascript -e 'tell application \"Spotify\" to artist of current track as string')\n  sketchybar --set $NAME label=\"$song - $artist\"\n  echo \"$song - $artist\"\nfi\n\n",
      "purpose": "This file is a shell script designed to interact with the Spotify application on macOS, providing information about the current state of the player and the details of the currently playing track.",
      "content_summary": "The script checks if Spotify is running, and if it is, it determines the player state (paused or playing). If the state is 'paused', it simply outputs 'Paused'. If the state is 'playing', it retrieves the name of the current track and the artist, and updates the label of a SketchyBar instance named '$NAME' with the track details."
    },
    "scripts/highlight_space.sh": {
      "path": "scripts/highlight_space.sh",
      "language": "bash",
      "dependencies": [],
      "content": "SID=$(echo $INFO | jq .[\\\"display-1\\\"])\nif [ \"$SID\" = \"\" ]; then\n    SID=$(yabai -m query --spaces --space | jq '.index')\nfi\nLENGTH=$($(echo yabai -m query --spaces) | jq length)\nsketchybar --animate circ 15 --set highlight_space background.padding_left=$((-(LENGTH - (SID - 2)) * 30 + 7))",
      "purpose": "This file is a SketchyBar script that dynamically adjusts the padding of the 'highlight_space' background in SketchyBar based on the current space index in yabai, a tiling window manager for macOS.",
      "content_summary": "The script first attempts to get the space ID from SketchyBar's display-1 information. If it fails, it queries the space index from yabai. It then calculates the total number of spaces and subtracts the difference between the current space index and 2 (presumably the desired starting point for the padding), multiplied by 30, from the left padding of the 'highlight_space' background. The result is then passed to SketchyBar using the --set command."
    },
    "scripts/date.sh": {
      "path": "scripts/date.sh",
      "language": "bash",
      "dependencies": [],
      "content": "sketchybar --set date label=\"$(date '+%a %b %d')\"",
      "purpose": "The purpose of this file is to configure SketchyBar to display the current date in a specific format on the menu bar of macOS.",
      "content_summary": "This script uses the 'date' command to get the current date in a specified format ('%a %b %d') and sets the label of SketchyBar's 'date' widget to the obtained date."
    },
    "scripts/time.sh": {
      "path": "scripts/time.sh",
      "language": "bash",
      "dependencies": [],
      "content": "sketchybar --set time label=\"$(date '+%I:%M %p')\"",
      "purpose": "The purpose of this file is to configure SketchyBar to display the current time in the specified format.",
      "content_summary": "The content of this file sets the label of SketchyBar to the current hour and minute in 12-hour format with AM/PM indicator."
    },
    "scripts/battery.sh": {
      "path": "scripts/battery.sh",
      "language": "bash",
      "dependencies": [],
      "content": "PERCENTAGE=$(pmset -g batt | /usr/bin/grep -Eo \"\\d+%\" | cut -d% -f1)\nCHARGING=$(pmset -g batt | /usr/bin/grep 'AC Power')\n\nif [ $PERCENTAGE = \"\" ]; then\n    exit 0\nfi\n\ncase ${PERCENTAGE} in\n[8-9][0-9] | 100)\n    ICON=\"\uf240\"\n    ;;\n7[0-9])\n    ICON=\"\uf241\"\n    ;;\n[4-6][0-9])\n    ICON=\"\uf242\"\n    ;;\n[1-3][0-9])\n    ICON=\"\uf243\"\n    ;;\n[0-9])\n    ICON=\"\uf244\"\n    ;;\nesac\n\nif [[ $CHARGING != \"\" ]]; then\n    ICON=\"\uf0e7\"\nfi\n\nsketchybar --set battery \\\n    icon=$ICON \\\n    label=\"${PERCENTAGE}%\"\n",
      "purpose": "This file is a SketchyBar script that monitors the battery level and charging status of a macOS system and updates the SketchyBar with the appropriate icon and battery percentage.",
      "content_summary": "The script calculates the battery percentage and checks if the system is charging. Based on the battery level, it assigns an appropriate icon from a set of battery icons. If the system is charging, it changes the icon to a charging icon. Finally, it updates the SketchyBar with the assigned icon and battery percentage."
    },
    "scripts/weather.sh": {
      "path": "scripts/weather.sh",
      "language": "bash",
      "dependencies": [
        "~/.config/sketchybar/scripts/weather.env.sh"
      ],
      "content": "get_icon() {\nif [[ $is_day == 1 ]]; then\n    case $code in\n        1000) icon=\ue30d ;; # Sunny, Clear/113\n        1003) icon=\ue302 ;; # Partly cloudy/116\n        1006) icon=\ue312 ;; # Cloudy/119\n        1009) icon=\ue302 ;; # Overcast/122\n        1030) icon=\ue303 ;; # Mist/143\n        1063) icon=\ue308 ;; # Patchy rain possible/176\n        1066) icon=\ue30a ;; # Patchy snow possible/179\n        1069) icon=\ue3aa ;; # Patchy sleet possible/182\n        1072) icon=\ue308 ;; # Patchy freezing drizzle possible/185\n        1087) icon=\ue30f ;; # Thundery outbreaks possible/200\n        1114) icon=\ue30a ;; # Blowing snow/227\n        1117) icon=\ue30a ;; # Blizzard/230\n        1135) icon=\ue303 ;; # Fog/248\n        1147) icon=\ue303 ;; # Freezing fog/260\n        1150) icon=\ue308 ;; # Patchy light drizzle/263\n        1153) icon=\ue308 ;; # Light drizzle/266\n        1168) icon=\ue308 ;; # Freezing drizzle/281\n        1171) icon=\ue308 ;; # Heavy freezing drizzle/284\n        1180) icon=\ue308 ;; # Patchy light rain/293\n        1183) icon=\ue308 ;; # Light rain/296\n        1186) icon=\ue308 ;; # Moderate rain at times/299\n        1189) icon=\ue308 ;; # Moderate rain/302\n        1192) icon=\ue308 ;; # Heavy rain at times/305\n        1195) icon=\ue308 ;; # Heavy rain/308\n        1198) icon=\ue308 ;; # Light freezing rain/311\n        1201) icon=\ue308 ;; # Moderate or heavy freezing rain/314\n        1204) icon=\ue3aa ;; # Light sleet/317\n        1207) icon=\ue3aa ;; # Moderate or heavy sleet/320\n        1210) icon=\ue30a ;; # Patchy light snow/323\n        1213) icon=\ue30a ;; # Light snow/326\n        1216) icon=\ue30a ;; # Patchy moderate snow/329\n        1219) icon=\ue30a ;; # Moderate snow/332\n        1222) icon=\ue30a ;; # Patchy heavy snow/335\n        1225) icon=\ue30a ;; # Heavy snow/338\n        1237) icon=\ue304 ;; # Ice pellets/350\n        1240) icon=\ue309 ;; # Light rain shower/353\n        1243) icon=\ue309 ;; # Moderate or heavy rain shower/356\n        1246) icon=\ue309 ;; # Torrential rain shower/359\n        1249) icon=\ue3aa ;; # Light sleet showers/362\n        1252) icon=\ue3aa ;; # Moderate or heavy sleet showers/365\n        1255) icon=\ue30a ;; # Light snow showers/368\n        1258) icon=\ue30a ;; # Moderate or heavy snow showers/371\n        1261) icon=\ue304 ;; # Light showers of ice pellets/374\n        1264) icon=\ue304 ;; # Moderate or heavy showers of ice pellets/377\n        1273) icon=\ue30f ;; # Patchy light rain with thunder/386\n        1276) icon=\ue30f ;; # Moderate or heavy rain with thunder/389\n        1279) icon=\ue367 ;; # Patchy light snow with thunder/392\n        1282) icon=\ue367 ;; # Moderate or heavy snow with thunder/395\n    esac\nelse\n    case $code in\n        1000) icon=\ue32b ;; # Sunny, Clear/113\n        1003) icon=\ue379 ;; # Partly cloudy/116\n        1006) icon=\ue312 ;; # Cloudy/119\n        1009) icon=\ue379 ;; # Overcast/122\n        1030) icon=\ue346 ;; # Mist/143\n        1063) icon=\ue325 ;; # Patchy rain possible/176\n        1066) icon=\ue327 ;; # Patchy snow possible/179\n        1069) icon=\ue3ac ;; # Patchy sleet possible/182\n        1072) icon=\ue325 ;; # Patchy freezing drizzle possible/185\n        1087) icon=\ue32a ;; # Thundery outbreaks possible/200\n        1114) icon=\ue327 ;; # Blowing snow/227\n        1117) icon=\ue327 ;; # Blizzard/230\n        1135) icon=\ue346 ;; # Fog/248\n        1147) icon=\ue346 ;; # Freezing fog/260\n        1150) icon=\ue325 ;; # Patchy light drizzle/263\n        1153) icon=\ue325 ;; # Light drizzle/266\n        1168) icon=\ue325 ;; # Freezing drizzle/281\n        1171) icon=\ue325 ;; # Heavy freezing drizzle/284\n        1180) icon=\ue325 ;; # Patchy light rain/293\n        1183) icon=\ue325 ;; # Light rain/296\n        1186) icon=\ue325 ;; # Moderate rain at times/299\n        1189) icon=\ue325 ;; # Moderate rain/302\n        1192) icon=\ue325 ;; # Heavy rain at times/305\n        1195) icon=\ue325 ;; # Heavy rain/308\n        1198) icon=\ue325 ;; # Light freezing rain/311\n        1201) icon=\ue325 ;; # Moderate or heavy freezing rain/314\n        1204) icon=\ue3ac ;; # Light sleet/317\n        1207) icon=\ue3ac ;; # Moderate or heavy sleet/320\n        1210) icon=\ue327 ;; # Patchy light snow/323\n        1213) icon=\ue327 ;; # Light snow/326\n        1216) icon=\ue327 ;; # Patchy moderate snow/329\n        1219) icon=\ue327 ;; # Moderate snow/332\n        1222) icon=\ue327 ;; # Patchy heavy snow/335\n        1225) icon=\ue327 ;; # Heavy snow/338\n        1237) icon=\ue321 ;; # Ice pellets/350\n        1240) icon=\ue334 ;; # Light rain shower/353\n        1243) icon=\ue334 ;; # Moderate or heavy rain shower/356\n        1246) icon=\ue334 ;; # Torrential rain shower/359\n        1249) icon=\ue3ac ;; # Light sleet showers/362\n        1252) icon=\ue3ac ;; # Moderate or heavy sleet showers/365\n        1255) icon=\ue327 ;; # Light snow showers/368\n        1258) icon=\ue327 ;; # Moderate or heavy snow showers/371\n        1261) icon=\ue321 ;; # Light showers of ice pellets/374\n        1264) icon=\ue321 ;; # Moderate or heavy showers of ice pellets/377\n        1273) icon=\ue32a ;; # Patchy light rain with thunder/386\n        1276) icon=\ue32a ;; # Moderate or heavy rain with thunder/389\n        1279) icon=\ue367 ;; # Patchy light snow with thunder/392\n        1282) icon=\ue367 ;; # Moderate or heavy snow with thunder/395\n    esac\nfi\n}\n\nAPI=\"https://api.weatherapi.com/v1/current.json\"\nsource ~/.config/sketchybar/scripts/weather.env.sh\n\nfor i in {1..4}; do\n    weather=$(curl -sf --retry 3 \"$API?key=$WEATHER_KEY&q=$WEATHER_CITY\")\n    if [[ -z $weather || $(echo $weather | jq -r \".current\") == '{}' ]]; then\n        echo \"[WARNING] [$(gdate --iso-8601=seconds)] Weather API request failed $(echo $weather | jq -r \".current\")\" >&2\n        if ((i == 4)); then\n            echo \"[ERROR] [$(gdate --iso-8601=seconds)] Weather API request failed 4 times\" >&2\n            exit 0\n        fi\n        sleep 10\n    else\n        break\n    fi\ndone\n\ntemp=$(echo \"$weather\" | jq -r \".current.temp_c\")\nis_day=$(echo $weather | jq -r \".current.is_day\")\ncode=$(echo \"$weather\" | jq -r \".current.condition.code\")\nget_icon\ncity=$(echo \"$weather\" | jq -r \".location.name\")\ncondition=$(echo \"$weather\" | jq -r \".current.condition.text\")\nfeelslike=$(echo \"$weather\" | jq -r \".current.feelslike_f\")\nuv=$(echo \"$weather\" | jq -r \".current.uv\")\nhumidity=$(echo \"$weather\" | jq -r \".current.humidity\")\nwind_speed=$(echo \"$weather\" | jq -r \".current.wind_kph\")\nwind_direction=$(echo \"$weather\" | jq -r \".current.wind_dir\")\n\nsketchybar --set $NAME drawing=on icon=$icon label=\"${temp%%.*}\u00b0C\"\n",
      "purpose": "This file is a shell script named weather.sh that fetches weather data from the WeatherAPI and sets up the weather information for SketchyBar, a macOS system tray application.",
      "content_summary": "The script defines a function get_icon() to map weather codes to Unicode icons based on the time of day. It then makes repeated API requests to WeatherAPI, parses the response, and sets the weather information for SketchyBar, including temperature, city, condition, feels like temperature, UV index, humidity, wind speed, and wind direction."
    }
  }
}