{
  "page": "config/animations",
  "url": "https://felixkratz.github.io/SketchyBar/config/animations",
  "sections": [
    {
      "type": "list",
      "ordered": false,
      "items": [
        "Features",
        "Setup",
        "ConfigurationBar PropertiesItem PropertiesSpecial ComponentsPopup MenusEvents & ScriptingQuerying InformationAnimationsType NomenclatureReloading the configurationTips & Tricks",
        "Bar Properties",
        "Item Properties",
        "Special Components",
        "Popup Menus",
        "Events & Scripting",
        "Querying Information",
        "Animations",
        "Type Nomenclature",
        "Reloading the configuration",
        "Tips & Tricks",
        "Credits"
      ]
    },
    {
      "type": "list",
      "ordered": false,
      "items": [
        "Bar Properties",
        "Item Properties",
        "Special Components",
        "Popup Menus",
        "Events & Scripting",
        "Querying Information",
        "Animations",
        "Type Nomenclature",
        "Reloading the configuration",
        "Tips & Tricks"
      ]
    },
    {
      "type": "list",
      "ordered": false,
      "items": [
        "",
        "Configuration",
        "Animations"
      ]
    },
    {
      "type": "header",
      "level": "h1",
      "content": "Animations"
    },
    {
      "type": "header",
      "level": "h2",
      "content": "Animating the bar​"
    },
    {
      "type": "paragraph",
      "content": "All transitions between<argb_hex>,<integer>and<positive_integer>values can be animated, by prepending the animation command in front of any\nregular--setor--barcommand:"
    },
    {
      "type": "paragraph",
      "content": "where the<curve>is any of the animation curves:"
    },
    {
      "type": "list",
      "ordered": false,
      "items": [
        "linear,quadratic,tanh,sin,exp,circ"
      ]
    },
    {
      "type": "paragraph",
      "content": "The<duration>is a positive integer quantifying the number of animation\nsteps (the duration is the frame count on a 60Hz display, such that the\ntemporal duration of the animation in seconds is given by<duration>/ 60)."
    },
    {
      "type": "paragraph",
      "content": "The animation systemalwaysanimates between allcurrentvalues and the\nvalues specified in a configuration command (i.e.--baror--setcommands)."
    },
    {
      "type": "header",
      "level": "h3",
      "content": "Perform multiple animations chained together​"
    },
    {
      "type": "paragraph",
      "content": "If you want to chain two or more animations together, you can do so by simply\nchanging the property multiple times in a single call, e.g."
    },
    {
      "type": "paragraph",
      "content": "will animate the bar to the first offset and after that to the second offset.\nYou can chain together as main animations as you like and you can change the\nanimation function in between. This is a nice way to create custom animations\nwith key-frames. You can also make other properties wait with their animation\ntill another animation is finished, by simply setting the property that should\nwait to its current value in the first animation."
    },
    {
      "type": "paragraph",
      "content": "A new non-animated--setcommand targeting a currently animated property will\ncancel the animation queue and immediately set the value."
    },
    {
      "type": "paragraph",
      "content": "A new animated--setcommand targeting a currently animated property will\ncancel the animation queue and immediately begin with the new animation,\nbeginning at the current state."
    },
    {
      "type": "list",
      "ordered": false,
      "items": [
        "Animating the barPerform multiple animations chained together",
        "Perform multiple animations chained together"
      ]
    },
    {
      "type": "list",
      "ordered": false,
      "items": [
        "Perform multiple animations chained together"
      ]
    },
    {
      "type": "code",
      "content": "sketchybar --animate<curve><duration>\\--bar<property>=<value>...<property>=<value>\\--set<name><property>=<value>...<property>=<value>"
    },
    {
      "type": "code",
      "content": "sketchybar --animate sin30--bary_offset=10y_offset=0"
    }
  ]
}